{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataTable from \"../../../components/datatable/Datatable\";\nimport Pagination from \"../../../components/datatable/Pagination.vue\";\nimport { mapState } from \"vuex\";\nimport { http } from \"../../../service/http_service\";\nexport default {\n  name: \"InterportAppointSurveyor\",\n  components: {\n    datatable: DataTable,\n    pagination: Pagination\n  },\n\n  data() {\n    let sortOrders = {};\n    let columns = [{\n      label: \"#Sl\",\n      name: \"id\"\n    }, {\n      label: \"Surveyor Name\",\n      name: \"name\"\n    }, {\n      label: \"Survey NO\",\n      name: \"survey_id\"\n    }, {\n      label: \"Start Date\",\n      name: \"start_date\"\n    }, {\n      label: \"End Date\",\n      name: \"end_date\"\n    }, {\n      label: \"Action\",\n      name: \"action\"\n    }];\n    columns.forEach(column => {\n      sortOrders[column.name] = -1;\n    });\n    return {\n      appointed_surveyors: [],\n      columns: columns,\n      sortKey: \"id\",\n      sortOrders: sortOrders,\n      perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\n      tableData: {\n        draw: 0,\n        length: 10,\n        search: \"\",\n        column: 0,\n        dir: \"desc\"\n      },\n      pagination: {\n        last_page: \"\",\n        current_page: 1,\n        total: \"\",\n        last_page_url: \"\",\n        next_page_url: \"\",\n        prev_page_url: \"\",\n        from: \"\",\n        to: \"\"\n      }\n    };\n  },\n\n  computed: { ...mapState({\n      message: state => state.appoint_surveyor.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllAppointedSurveyor();\n  },\n\n  methods: {\n    getAllAppointedSurveyor() {\n      this.tableData.draw++;\n      let params = new URLSearchParams();\n      params.append(\"page\", this.pagination.current_page);\n      params.append(\"draw\", this.tableData.draw);\n      params.append(\"length\", this.tableData.length);\n      params.append(\"search\", this.tableData.search);\n      params.append(\"column\", this.tableData.column);\n      params.append(\"dir\", this.tableData.dir);\n      return http().get(\"v1/survey_appointment/getData?\" + params).then(response => {\n        this.appointed_surveyors = response.data.data.data;\n        this.pagination = response.data.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    sortBy(key) {\n      this.sortKey = key;\n      this.sortOrders[key] = this.sortOrders[key] * -1;\n      this.tableData.column = this.getIndex(this.columns, \"name\", key);\n      this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\n      this.getAllAppointedSurveyor();\n    },\n\n    getIndex(array, key, value) {\n      return array.findIndex(i => i[key] == value);\n    },\n\n    deleteAppointedSurveyor: async function (appointed_surveyor) {\n      let id = appointed_surveyor.id;\n\n      try {\n        await this.$store.dispatch(\"appoint_surveyor/delete_appointed_surveyor\", id).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getAllAppointedSurveyor();\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AAEA;AAEA;AAEA;EACAA,gCADA;EAGAC;IACAC,oBADA;IAEAC;EAFA,CAHA;;EAQAC;IAGA;IACA,eACA;MAAAC;MAAAL;IAAA,CADA,EAEA;MAAAK;MAAAL;IAAA,CAFA,EAGA;MAAAK;MAAAL;IAAA,CAHA,EAIA;MAAAK;MAAAL;IAAA,CAJA,EAKA;MAAAK;MAAAL;IAAA,CALA,EAMA;MAAAK;MAAAL;IAAA,CANA;IAQAM;MACAC;IACA,CAFA;IAIA;MACAC,uBADA;MAEAF,gBAFA;MAGAG,aAHA;MAIAF,sBAJA;MAKAG,8CALA;MAMAC;QACAC,OADA;QAEAC,UAFA;QAGAC,UAHA;QAIAC,SAJA;QAKAC;MALA,CANA;MAaAb;QACAc,aADA;QAEAC,eAFA;QAGAC,SAHA;QAIAC,iBAJA;QAKAC,iBALA;QAMAC,iBANA;QAOAC,QAPA;QAQAC;MARA;IAbA;EAwBA,CAhDA;;EAkDAC,YACA;MACAC;IADA;EADA,CAlDA;;EAwDAC;IACA;EACA,CA1DA;;EA4DAC;IACAC;MACA;MAEA;MACAC;MACAA;MACAA;MACAA;MACAA;MACAA;MAEA,cACAC,GADA,CACA,yCADA,EAEAC,IAFA,CAEAC;QACA;QACA;MACA,CALA,EAMAC,KANA,CAMAC;QACAC;MACA,CARA;IASA,CArBA;;IAuBAC;MACA;MACA;MACA;MACA;MACA;IACA,CA7BA;;IA+BAC;MACA;IACA,CAjCA;;IAmCAC;MACA;;MAEA;QACA,kBACAC,QADA,CACA,4CADA,EACAC,EADA,EAEAT,IAFA,CAEA;UACA;YACAU,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UAQA;QACA,CAZA;MAaA,CAdA,CAcA;QACAX;MACA;IACA;EAvDA;AA5DA","names":["name","components","datatable","pagination","data","label","columns","sortOrders","appointed_surveyors","sortKey","perPage","tableData","draw","length","search","column","dir","last_page","current_page","total","last_page_url","next_page_url","prev_page_url","from","to","computed","message","mounted","methods","getAllAppointedSurveyor","params","get","then","response","catch","error","console","sortBy","getIndex","deleteAppointedSurveyor","dispatch","id","toast","position","icon","title","showConfirmButton","timer"],"sourceRoot":"src/views/admin/surveyor_appointment","sources":["AppointSurveyor.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <h2>Appointed Surveyor List</h2>\r\n\r\n    <div class=\"flex-container\">\r\n      <div class=\"flex-item\">\r\n        Show:\r\n        <select\r\n          name=\"cars\"\r\n          class=\"entries_count\"\r\n          id=\"cars\"\r\n          style=\"appearance: auto\"\r\n          v-model=\"tableData.length\"\r\n          @change=\"getAllAppointedSurveyor()\"\r\n        >\r\n          <option\r\n            v-for=\"(records, index) in perPage\"\r\n            :key=\"index\"\r\n            :value=\"records\"\r\n          >\r\n            {{ records }}\r\n          </option>\r\n        </select>\r\n        record per page.\r\n      </div>\r\n\r\n      <div class=\"flex-item\">\r\n        Search:\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"tableData.search\"\r\n          @input=\"getAllAppointedSurveyor()\"\r\n          placeholder=\"Search here\"\r\n          class=\"search\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div style=\"padding: 10px 10px; overflow-x: auto\">\r\n      <datatable\r\n        :columns=\"columns\"\r\n        :sortKey=\"sortKey\"\r\n        :sortOrders=\"sortOrders\"\r\n        @sort=\"sortBy\"\r\n      >\r\n        <tbody>\r\n          <tr\r\n            v-show=\"appointed_surveyors.length\"\r\n            v-for=\"appointed_surveyor in appointed_surveyors\"\r\n            :key=\"appointed_surveyor.id\"\r\n          >\r\n            <td data-label=\"#Sl\" style=\"text-align: center\">{{ appointed_surveyor.id }}</td>\r\n            <td data-label=\"Surveyor Name\" style=\"text-align: center\">{{ appointed_surveyor.name }}</td>\r\n            <td data-label=\"Survey NO\"  style=\"text-align: center\">\r\n              {{ appointed_surveyor.survey_id }}\r\n            </td>\r\n            <td data-label=\"Start Date\" style=\"text-align: center\">\r\n              {{ appointed_surveyor.start_date }}\r\n            </td>\r\n            <td data-label=\"End Date\" style=\"text-align: center\">\r\n              {{ appointed_surveyor.end_date }}\r\n            </td>\r\n            <td data-label=\"Action\" style=\"text-align: center\">\r\n              <router-link\r\n                :to=\"`/dashboard/edit_surveyorappoint/${appointed_surveyor.id}`\"\r\n              >\r\n                <button type=\"button\" class=\"actio-button-margin edit\">\r\n                  <span class=\"material-icons-sharp add\" style=\"font-size: 11px\"\r\n                    >edit</span\r\n                  >\r\n                </button>\r\n              </router-link>\r\n              <button\r\n                type=\"button\"\r\n                class=\"actio-button-margin delete\"\r\n                v-on:click=\"deleteAppointedSurveyor(appointed_surveyor)\"\r\n              >\r\n                <span class=\"material-icons-sharp add\" style=\"font-size: 11px\"\r\n                  >delete</span\r\n                >\r\n              </button>\r\n            </td>\r\n          </tr>\r\n\r\n          <tr v-show=\"!appointed_surveyors.length\">\r\n            <td>No Data Found</td>\r\n          </tr>\r\n        </tbody>\r\n      </datatable>\r\n    </div>\r\n\r\n    <div>\r\n      <div class=\"flex-container-pagination\" style=\"padding-right: 10px\">\r\n        <div class=\"flex-item\">\r\n          Showing {{ pagination.from }} to {{ pagination.to }} of\r\n          {{ pagination.total }} records\r\n        </div>\r\n        <div style=\"display: flex; justify-content: flex-end\">\r\n          <pagination\r\n            :pagination.sync=\"pagination\"\r\n            :offset=\"5\"\r\n            @paginate=\"getAllAppointedSurveyor()\"\r\n          ></pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DataTable from \"../../../components/datatable/Datatable\";\r\nimport Pagination from \"../../../components/datatable/Pagination.vue\";\r\n\r\nimport { mapState } from \"vuex\";\r\n\r\nimport { http } from \"../../../service/http_service\";\r\n\r\nexport default {\r\n  name: \"InterportAppointSurveyor\",\r\n\r\n  components: {\r\n    datatable: DataTable,\r\n    pagination: Pagination,\r\n  },\r\n\r\n  data() {\r\n    \r\n    \r\n    let sortOrders = {};\r\n    let columns = [\r\n      { label: \"#Sl\", name: \"id\" },\r\n      { label: \"Surveyor Name\", name: \"name\" },\r\n      { label: \"Survey NO\", name: \"survey_id\" },\r\n      { label: \"Start Date\", name: \"start_date\" },\r\n      { label: \"End Date\", name: \"end_date\" },\r\n      { label: \"Action\", name: \"action\" },\r\n    ];\r\n    columns.forEach((column) => {\r\n      sortOrders[column.name] = -1;\r\n    });\r\n\r\n    return {\r\n      appointed_surveyors: [],\r\n      columns: columns,\r\n      sortKey: \"id\",\r\n      sortOrders: sortOrders,\r\n      perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\r\n      tableData: {\r\n        draw: 0,\r\n        length: 10,\r\n        search: \"\",\r\n        column: 0,\r\n        dir: \"desc\",\r\n      },\r\n      pagination: {\r\n        last_page: \"\",\r\n        current_page: 1,\r\n        total: \"\",\r\n        last_page_url: \"\",\r\n        next_page_url: \"\",\r\n        prev_page_url: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n      },\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      message: (state) => state.appoint_surveyor.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getAllAppointedSurveyor();\r\n  },\r\n\r\n  methods: {\r\n    getAllAppointedSurveyor() {\r\n      this.tableData.draw++;\r\n      \r\n      let params = new URLSearchParams();\r\n      params.append(\"page\", this.pagination.current_page);\r\n      params.append(\"draw\", this.tableData.draw);\r\n      params.append(\"length\", this.tableData.length);\r\n      params.append(\"search\", this.tableData.search);\r\n      params.append(\"column\", this.tableData.column);\r\n      params.append(\"dir\", this.tableData.dir);\r\n\r\n      return http()\r\n        .get(\"v1/survey_appointment/getData?\" + params)\r\n        .then((response) => {\r\n          this.appointed_surveyors = response.data.data.data;\r\n          this.pagination = response.data.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    sortBy(key) {\r\n      this.sortKey = key;\r\n      this.sortOrders[key] = this.sortOrders[key] * -1;\r\n      this.tableData.column = this.getIndex(this.columns, \"name\", key);\r\n      this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\r\n      this.getAllAppointedSurveyor();\r\n    },\r\n\r\n    getIndex(array, key, value) {\r\n      return array.findIndex((i) => i[key] == value);\r\n    },\r\n\r\n    deleteAppointedSurveyor: async function (appointed_surveyor) {\r\n      let id = appointed_surveyor.id;\r\n\r\n      try {\r\n        await this.$store\r\n          .dispatch(\"appoint_surveyor/delete_appointed_surveyor\", id)\r\n          .then(() => {\r\n            this.$swal.fire({\r\n              toast: true,\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: this.message,\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n            this.getAllAppointedSurveyor();\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 5px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n.search {\r\n    padding: 10px 20px;\r\n    outline: none;\r\n    border: 1px solid #ddd;\r\n    /* border-radius: 6px; */\r\n    margin-right: 0;\r\n  }\r\n\r\n  input[class=\"addnew\"] {\r\n  background-color: rgb(5, 88, 165);\r\n  color: white;\r\n  padding: 12px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  float: right;\r\n  margin-left: 5px;\r\n}\r\n\r\ninput[class=\"addnew\"]:hover {\r\n  background-color: rgb(44, 121, 229);\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}