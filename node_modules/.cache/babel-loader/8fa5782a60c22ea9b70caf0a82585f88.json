{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import { mapState} from \"vuex\";\nimport { http } from \"../../service/http_service\";\nimport { httpAuth } from \"../../service/login_service\";\nexport default {\n  name: \"InterPortAddUser\",\n\n  data() {\n    return {\n      claim_handlers: {\n        claim_handler: \"\"\n      },\n      // claim_handlers: [],\n      errors: {}\n    };\n  },\n\n  mounted() {\n    this.getClaimHandlers();\n  },\n\n  methods: {\n    getClaimHandlers() {\n      return httpAuth().get(\"/access/v1/users/role/claim-handler\").then(response => {\n        this.claim_handlers = response.data.users; // console.log(this.claim_handlers);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    addUser: async function () {\n      try {\n        let id = this.$route.params.id;\n        let formData = new FormData();\n        formData.append(\"claim_handler\", this.claim_handlers.claim_handler);\n        return http().post(\"v1/work_orders/assigned_claim_handler/\" + id, formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getClaimHandlers = {};\n          this.$router.go(0);\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;EACAA,wBADA;;EAGAC;IACA;MACAC;QACAC;MADA,CADA;MAIA;MACAC;IALA;EAOA,CAXA;;EAaAC;IACA;EACA,CAfA;;EAiBAC;IACAC;MACA,kBACAC,GADA,CACA,qCADA,EAEAC,IAFA,CAEAC;QACA,0CADA,CAEA;MACA,CALA,EAMAC,KANA,CAMAC;QACAC;MACA,CARA;IASA,CAXA;;IAaAC;MACA;QACA;QACA;QACAC;QACA,cACAC,IADA,CAEA,6CAFA,EAEAD,QAFA,EAGAN,IAHA,CAGA;UACA;YACAQ,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;UACA;QACA,CAfA;MAgBA,CApBA,CAoBA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAH,aADA;cAEAI,YAFA;cAGAH;YAHA;YAKA;QAVA;MAYA;IACA;EAhDA;AAjBA","names":["name","data","claim_handlers","claim_handler","errors","mounted","methods","getClaimHandlers","get","then","response","catch","error","console","addUser","formData","post","toast","position","icon","title","showConfirmButton","timer","text"],"sourceRoot":"src/views/admin","sources":["ClaimHandler.vue"],"sourcesContent":["<template>\r\n  <div id=\"add_user\">\r\n    <div class=\"card\">\r\n      <div class=\"container\">\r\n        <!-- <h2>Add User</h2> -->\r\n        <form v-on:submit.prevent=\"addUser\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"role\">Claim Handler</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <select\r\n                name=\"claim_handler\"\r\n                id=\"claim_handler\"\r\n                class=\"box\"\r\n                required\r\n                v-model=\"claim_handlers.claim_handler\"\r\n              >\r\n                <option value=\"\" selected disabled>Select Claim Handler</option>\r\n                <option\r\n                  :value=\"claim.id\"\r\n                  v-for=\"claim in claim_handlers\"\r\n                  :key=\"claim.id\"\r\n                >\r\n                  {{ claim.name }}\r\n                </option>\r\n              </select>\r\n              <!-- <span v-if=\"errors.surveyFirm\" class=\"danger_text\">{{\r\n                errors.surveyFirm[0]\r\n              }}</span> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <input type=\"submit\" value=\"Assign\" />\r\n            <!-- <router-link to=\"/dashboard/users\" style=\"float: right\">\r\n                            <input type=\"button\" value=\"Back\" class=\"back-btn\" />\r\n                        </router-link> -->\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { mapState} from \"vuex\";\r\nimport {http} from \"../../service/http_service\";\r\nimport { httpAuth } from \"../../service/login_service\";\r\nexport default {\r\n  name: \"InterPortAddUser\",\r\n\r\n  data() {\r\n    return {\r\n      claim_handlers: {\r\n        claim_handler: \"\",\r\n      },\r\n            // claim_handlers: [],\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.getClaimHandlers();\r\n  },\r\n\r\n  methods: {\r\n    getClaimHandlers() {\r\n      return httpAuth()\r\n        .get(\"/access/v1/users/role/claim-handler\")\r\n        .then((response) => {\r\n          this.claim_handlers = response.data.users;\r\n          // console.log(this.claim_handlers);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    addUser: async function () {\r\n      try {\r\n        let id = this.$route.params.id;\r\n        let formData = new FormData();\r\n        formData.append(\"claim_handler\", this.claim_handlers.claim_handler);\r\n        return http()\r\n        .post(\r\n          \"v1/work_orders/assigned_claim_handler/\" + id ,formData)\r\n       .then(() => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: this.message,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n\r\n          this.getClaimHandlers = {};\r\n          this.$router.go(0);\r\n        });\r\n      } catch (e) {\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\nselect {\r\n  width: 85%;\r\n  height: 40px;\r\n  box-shadow: 0 2px 1px 0 rgb(0 0 0 / 20%), 0 2px 15px 0 rgb(0 0 0 / 19%);\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}