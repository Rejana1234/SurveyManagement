{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Datatable from '@/components/datatable/Datatable.vue';\nimport Pagination from '@/components/datatable/Pagination.vue';\nimport { http } from '@/service/http_service';\nimport { mapState } from 'vuex';\nexport default {\n  name: \"InterportSummaryReport\",\n  title: \"Interport - Summary Report\",\n  components: {\n    datatable: Datatable,\n    pagination: Pagination\n  },\n\n  data() {\n    let sortOrders = {};\n    let columns = [// { label: \"#Sl\", name: \"id\" },\n    {\n      label: \"Signature\",\n      name: \"signature\"\n    }, {\n      label: \"Reference No\",\n      name: \"reference_no\"\n    }, {\n      label: \"Remaining packages\",\n      name: \"condition_of_remaining_packages\"\n    }, {\n      label: \"Note\",\n      name: \"note\"\n    }, {\n      label: \"Remarks\",\n      name: \"remarks\"\n    }, {\n      label: \"Action\",\n      name: \"action\"\n    }];\n    columns.forEach(column => {\n      sortOrders[column.name] = -1;\n    });\n    return {\n      summary_reports: [],\n      signatures: [],\n      columns: columns,\n      sortKey: \"id\",\n      sortOrders: sortOrders,\n      perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\n      tableData: {\n        draw: 0,\n        length: 10,\n        search: \"\",\n        column: 0,\n        dir: \"desc\"\n      },\n      pagination: {\n        last_page: \"\",\n        current_page: 1,\n        total: \"\",\n        last_page_url: \"\",\n        next_page_url: \"\",\n        prev_page_url: \"\",\n        from: \"\",\n        to: \"\"\n      }\n    };\n  },\n\n  computed: { ...mapState({\n      message: state => state.summary_report.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllSummaryReports();\n  },\n\n  methods: {\n    getAllSummaryReports: function () {\n      this.tableData.draw++;\n      let params = new URLSearchParams();\n      params.append(\"page\", this.pagination.current_page);\n      params.append(\"draw\", this.tableData.draw);\n      params.append(\"length\", this.tableData.length);\n      params.append(\"search\", this.tableData.search);\n      params.append(\"column\", this.tableData.column);\n      params.append(\"dir\", this.tableData.dir);\n      params.append(\"survey_id\", this.$route.params.id);\n      return http().get(\"v1/summary_report/getData?\" + params).then(response => {\n        this.summary_reports = response.data.data.data;\n        this.pagination = response.data.data;\n        this.signatures = response.data.signature;\n        console.log(this.signatures);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    sortBy(key) {\n      this.sortKey = key;\n      this.sortOrders[key] = this.sortOrders[key] * -1;\n      this.tableData.column = this.getIndex(this.columns, \"name\", key);\n      this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\n      this.getAllSummaryReports();\n    },\n\n    getIndex(array, key, value) {\n      return array.findIndex(i => i[key] == value);\n    },\n\n    deleteSUmmaryReport: async function (id) {\n      try {\n        await this.$store.dispatch('summary_report/delete_summary_report', id).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getAllSummaryReports();\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    add_summary() {\n      this.$router.push('/dashboard/add_summary_report/' + this.$route.params.id);\n    },\n\n    edit_summary(id) {\n      this.$router.push('/dashboard/edit_summary_report/' + this.$route.params.id + '/' + id);\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AAEA;AAEA;AAEA;EACAA,8BADA;EAEAC,mCAFA;EAIAC;IACAC,oBADA;IAEAC;EAFA,CAJA;;EASAC;IACA;IAEA,eACA;IACA;MAAAC;MAAAN;IAAA,CAFA,EAGA;MAAAM;MAAAN;IAAA,CAHA,EAIA;MAAAM;MAAAN;IAAA,CAJA,EAKA;MAAAM;MAAAN;IAAA,CALA,EAMA;MAAAM;MAAAN;IAAA,CANA,EAOA;MAAAM;MAAAN;IAAA,CAPA;IASAO;MACAC;IACA,CAFA;IAIA;MACAC,mBADA;MAEAC,cAFA;MAGAH,gBAHA;MAIAI,aAJA;MAKAH,sBALA;MAMAI,8CANA;MAOAC;QACAC,OADA;QAEAC,UAFA;QAGAC,UAHA;QAIAC,SAJA;QAKAC;MALA,CAPA;MAcAd;QACAe,aADA;QAEAC,eAFA;QAGAC,SAHA;QAIAC,iBAJA;QAKAC,iBALA;QAMAC,iBANA;QAOAC,QAPA;QAQAC;MARA;IAdA;EAyBA,CAlDA;;EAoDAC,YACA;MACAC;IADA;EADA,CApDA;;EA0DAC;IACA;EACA,CA5DA;;EA8DAC;IACAC;MACA;MACA;MACAC;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MAEA,cACAC,GADA,CACA,qCADA,EAEAC,IAFA,CAEAC;QACA;QACA;QACA;QACAC;MACA,CAPA,EAQAC,KARA,CAQAC;QACAF;MACA,CAVA;IAWA,CAvBA;;IAyBAG;MACA;MACA;MACA;MACA;MACA;IACA,CA/BA;;IAiCAC;MACA;IACA,CAnCA;;IAqCAC;MACA;QACA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIA3C,mBAJA;YAKA4C,wBALA;YAMAC;UANA;UASA;QACA,CAXA;MAYA,CAbA,CAaA;QACAV;MACA;IACA,CAtDA;;IAwDAW;MACA;IACA,CA1DA;;IA4DAC;MACA;IACA;;EA9DA;AA9DA","names":["name","title","components","datatable","pagination","data","label","columns","sortOrders","summary_reports","signatures","sortKey","perPage","tableData","draw","length","search","column","dir","last_page","current_page","total","last_page_url","next_page_url","prev_page_url","from","to","computed","message","mounted","methods","getAllSummaryReports","params","get","then","response","console","catch","error","sortBy","getIndex","deleteSUmmaryReport","toast","position","icon","showConfirmButton","timer","add_summary","edit_summary"],"sourceRoot":"src/views/admin/report/summary_report","sources":["SummaryReport.vue"],"sourcesContent":["<template>\r\n  <div id=\"summary_report\">\r\n    <div class=\"card\">\r\n      <div class=\"flex-container\">\r\n        <h2 style=\"margin-left: 10px; line-height: 40px\">Summary Report Lists</h2>\r\n        <!-- <router-link :to=\"`dashboard/survey/add_summary_report/${this.$route.params.id}`\"> -->\r\n        <div v-if=\"summary_reports.length > 0\"></div>\r\n        <button v-else type=\"button\" class=\"add_new\" @click=\"add_summary\">\r\n          <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">add</span>Add New\r\n        </button>\r\n        <!-- </router-link> -->\r\n      </div>\r\n\r\n      <div class=\"flex-container\">\r\n        <div class=\"flex-item\">\r\n          Show:\r\n          <select name=\"cars\" class=\"entries_count\" id=\"cars\" style=\"appearance: auto\" v-model=\"tableData.length\"\r\n            @change=\"getAllSummaryReports()\">\r\n            <option v-for=\"(records, index) in perPage\" :key=\"index\" :value=\"records\">\r\n              {{ records }}\r\n            </option>\r\n          </select>\r\n          record per page.\r\n        </div>\r\n        <div class=\"flex-item\">\r\n          <input type=\"text\" v-model=\"tableData.search\" @input=\"getAllSummaryReports()\" placeholder=\"Search here\"\r\n            class=\"search\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div style=\"padding: 10px 10px; overflow-x: auto\">\r\n        <datatable :columns=\"columns\" :sortKey=\"sortKey\" :sortOrders=\"sortOrders\" @sort=\"sortBy\">\r\n          <tbody>\r\n            <tr v-show=\"summary_reports.length\" v-for=\"sr in summary_reports\" :key=\"sr.id\">\r\n              <!-- <td data-label=\"#Sl\" style=\"text-align: center\">{{ sr.id }}</td> -->\r\n              <td data-label=\"Signature\" style=\"text-align: center\">\r\n                <div v-for=\"signature in signatures\" :key=\"signature.id\">\r\n                  <p v-if=\"sr.signature == signature.id\">\r\n                    {{ signature.name }}\r\n                  </p>\r\n                </div>\r\n              </td>\r\n              <td data-label=\"Reference No\" style=\"text-align: center\">{{ sr.reference_no }}</td>\r\n              <td data-label=\"Remaining packages\" style=\"text-align: center\">{{ sr.condition_of_remaining_packages.substring(0,25) }}</td>\r\n              <td data-label=\"Note\" style=\"text-align: center\">{{ sr.note.substring(0,25) }}</td>\r\n              <td data-label=\"Remarks\" style=\"text-align: center\">{{ sr.remarks.substring(0,25) }}</td>\r\n              <td data-label=\"Actin\" style=\"text-align: center\">\r\n                \r\n                <button type=\"button\" class=\"actio-button-margin edit\" title=\"Edit Report\" @click=\"edit_summary(sr.id)\">\r\n                  <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">edit</span>\r\n                </button>\r\n                \r\n                <button title=\"Delete Report\" type=\"button\" class=\"actio-button-margin delete\"\r\n                  v-on:click=\"deleteSUmmaryReport(sr.id)\">\r\n                  <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">delete</span>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n\r\n            <tr v-show=\"!summary_reports.length\">\r\n              <td colspan=\"7\">No Data Found</td>\r\n            </tr>\r\n          </tbody>\r\n        </datatable>\r\n      </div>\r\n\r\n      <div>\r\n        <div class=\"flex-container-pagination\" style=\"padding-right: 10px\">\r\n          <div class=\"flex-item\">\r\n            Showing {{ pagination.from }} to {{ pagination.to }} of\r\n            {{ pagination.total }} records\r\n          </div>\r\n          <div style=\"display: flex; justify-content: flex-end\">\r\n            <pagination :pagination.sync=\"pagination\" :offset=\"5\" @paginate=\"getAllSummaryReports()\"></pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import Datatable from '@/components/datatable/Datatable.vue';\r\n    import Pagination from '@/components/datatable/Pagination.vue';\r\n\r\n    import { http } from '@/service/http_service';\r\n\r\n    import { mapState } from 'vuex';\r\n\r\n    export default {\r\n      name: \"InterportSummaryReport\",\r\n      title: \"Interport - Summary Report\",\r\n\r\n      components: {\r\n        datatable: Datatable,\r\n        pagination: Pagination\r\n      },\r\n\r\n      data() {\r\n        let sortOrders = {};\r\n\r\n        let columns = [\r\n          // { label: \"#Sl\", name: \"id\" },\r\n          { label: \"Signature\", name: \"signature\" },\r\n          { label: \"Reference No\", name: \"reference_no\" },\r\n          { label: \"Remaining packages\", name: \"condition_of_remaining_packages\" },\r\n          { label: \"Note\", name: \"note\" },\r\n          { label: \"Remarks\", name: \"remarks\" },\r\n          { label: \"Action\", name: \"action\" },\r\n        ];\r\n        columns.forEach((column) => {\r\n          sortOrders[column.name] = -1;\r\n        });\r\n\r\n        return {\r\n          summary_reports: [],\r\n          signatures: [],\r\n          columns: columns,\r\n          sortKey: \"id\",\r\n          sortOrders: sortOrders,\r\n          perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\r\n          tableData: {\r\n            draw: 0,\r\n            length: 10,\r\n            search: \"\",\r\n            column: 0,\r\n            dir: \"desc\",\r\n          },\r\n          pagination: {\r\n            last_page: \"\",\r\n            current_page: 1,\r\n            total: \"\",\r\n            last_page_url: \"\",\r\n            next_page_url: \"\",\r\n            prev_page_url: \"\",\r\n            from: \"\",\r\n            to: \"\",\r\n          },\r\n        }\r\n      },\r\n\r\n      computed: {\r\n        ...mapState({\r\n          message: state => state.summary_report.success_message\r\n        })\r\n      },\r\n\r\n      mounted() {\r\n        this.getAllSummaryReports();\r\n      },\r\n\r\n      methods: {\r\n        getAllSummaryReports: function () {\r\n          this.tableData.draw++;\r\n          let params = new URLSearchParams();\r\n          params.append(\"page\", this.pagination.current_page);\r\n          params.append(\"draw\", this.tableData.draw);\r\n          params.append(\"length\", this.tableData.length);\r\n          params.append(\"search\", this.tableData.search);\r\n          params.append(\"column\", this.tableData.column);\r\n          params.append(\"dir\", this.tableData.dir);\r\n          params.append(\"survey_id\", this.$route.params.id);\r\n\r\n          return http()\r\n            .get(\"v1/summary_report/getData?\" + params)\r\n            .then((response) => {\r\n              this.summary_reports = response.data.data.data;\r\n              this.pagination = response.data.data;\r\n              this.signatures = response.data.signature;\r\n              console.log(this.signatures);\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        },\r\n\r\n        sortBy(key) {\r\n          this.sortKey = key;\r\n          this.sortOrders[key] = this.sortOrders[key] * -1;\r\n          this.tableData.column = this.getIndex(this.columns, \"name\", key);\r\n          this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\r\n          this.getAllSummaryReports();\r\n        },\r\n\r\n        getIndex(array, key, value) {\r\n          return array.findIndex((i) => i[key] == value);\r\n        },\r\n\r\n        deleteSUmmaryReport: async function (id) {\r\n          try {\r\n            await this.$store.dispatch('summary_report/delete_summary_report', id).then(() => {\r\n              this.$swal.fire({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                icon: \"success\",\r\n                title: this.message,\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              });\r\n\r\n              this.getAllSummaryReports();\r\n            });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        },\r\n\r\n        add_summary() {\r\n          this.$router.push('/dashboard/add_summary_report/' + this.$route.params.id);\r\n        },\r\n\r\n        edit_summary(id) {\r\n          this.$router.push('/dashboard/edit_summary_report/' + this.$route.params.id + '/' + id);\r\n        }\r\n      }\r\n    }\r\n</script>\r\n<style scoped>\r\ninput[type='text']{\r\n  width: 100%;\r\n}\r\n.add_new:hover {\r\n  background-color: #226798;\r\n  box-shadow: rgba(0, 0, 0, 0.05) 0 5px 30px, rgba(0, 0, 0, 0.05) 0 1px 4px;\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n  transition-duration: 0.35s;\r\n}\r\n.add_new:hover:after {\r\n  opacity: 0.5;\r\n}\r\n\r\n.add_new:active {\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0 3px 6px 0, rgba(0, 0, 0, 0.1) 0 0 10px 0, rgba(0, 0, 0, 0.1) 0 1px 4px -1px;\r\n  transform: translateY(2px);\r\n  transition-duration: 0.35s;\r\n}\r\n\r\n.add_new:active:after {\r\n  opacity: 1;\r\n}\r\n.add_new {\r\n  height: 27%;\r\n  width: 118px;\r\n  border-radius: 5px;\r\n  background-color: #01579b;\r\n  margin-right: 1%;\r\n  color: rgb(238 239 240);\r\n  font-weight: 600;\r\n  margin-top: 0%;\r\n  margin-left: 0%;\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0 3px 1px -2px, rgba(0, 0, 0, 0.14) 0 2px 2px 0, rgba(0, 0, 0, 0.12) 0 1px 5px 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}