{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"AddQuantity\",\n\n  data() {\n    return {\n      quantityData: {\n        name: \"\"\n      },\n      errors: {}\n    };\n  },\n\n  methods: {\n    addQuantity: async function () {\n      try {\n        let formData = new FormData();\n        formData.append(\"name\", this.quantityData.name);\n        await this.$store.dispatch(\"quantity/add_quantity\", formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.quantityData = {};\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;EACAA,mBADA;;EAGAC;IACA;MACAC;QACAF;MADA,CADA;MAIAG;IAJA;EAMA,CAVA;;EAYAC;IACAC;MACA;QACA;QAEAC;QAEA,kBACAC,QADA,CACA,uBADA,EACAD,QADA,EAEAE,IAFA,CAEA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;QACA,CAbA;MAcA,CAnBA,CAmBA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAH,aADA;cAEAI,YAFA;cAGAH;YAHA;YAKA;QAVA;MAYA;IACA;EAnCA;AAZA","names":["name","data","quantityData","errors","methods","addQuantity","formData","dispatch","then","toast","position","icon","title","showConfirmButton","timer","text"],"sourceRoot":"src/views/admin/quantity","sources":["AddQuantity.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"card\">\r\n      <div class=\"container\">\r\n        <h2>Add Quantity Form</h2>\r\n        <form v-on:submit.prevent=\"addQuantity\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"dname\">Quantity Name</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"quantityData.name\"\r\n                id=\"dname\"\r\n                name=\"name\"\r\n                placeholder=\"Enter Quantity Name\"\r\n              />\r\n              <span v-if=\"errors.name\" class=\"danger_text\">{{errors.name[0]}}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <input type=\"submit\" value=\"Submit\" />\r\n            <router-link to=\"/dashboard/quantity\" style=\"float: right\">\r\n              <input type=\"button\" value=\"Back\" class=\"back-btn\" />\r\n            </router-link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AddQuantity\",\r\n\r\n  data() {\r\n    return {\r\n      quantityData: {\r\n        name: \"\",\r\n      },\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    addQuantity: async function () {\r\n      try {\r\n        let formData = new FormData();\r\n\r\n        formData.append(\"name\", this.quantityData.name);\r\n\r\n        await this.$store\r\n          .dispatch(\"quantity/add_quantity\", formData)\r\n          .then(() => {\r\n            this.$swal.fire({\r\n              toast: true,\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: this.message,\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n\r\n            this.quantityData = {};\r\n          });\r\n      } catch (e) {\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n  appearance: auto;\r\n}\r\n\r\nselect\r\n {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n  \r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}