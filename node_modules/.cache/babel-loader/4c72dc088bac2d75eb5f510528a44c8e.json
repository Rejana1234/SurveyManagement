{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"AddSurvey\",\n\n  data() {\n    return {\n      id: this.$route.params.id,\n      surveyData: {\n        work_order_id: \"\",\n        category_id: \"\",\n        note: \"\",\n        access_file: false\n      },\n      surveys: [{\n        survey_scope: \"\"\n      }],\n      errors: {}\n    };\n  },\n\n  computed: { ...mapState({\n      categories: state => state.category.categories,\n      // single_category: state => state.category.single_category,\n      workOrder: state => state.w_order.w_orders,\n      message: state => state.survey.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllW_Order();\n    this.getAllCategory();\n  },\n\n  methods: { ...mapActions({\n      getAllW_Order: \"w_order/get_all_w_order\",\n      getAllCategory: \"category/get_all_category\"\n    }),\n    addRowSurvey: function () {\n      this.surveys.push({\n        survey_scope: \"\"\n      });\n    },\n\n    deleteRowSurvey(index) {\n      this.surveys.splice(index, 1);\n    },\n\n    addSurvey: async function () {\n      try {\n        let formData = new FormData();\n        var scope = JSON.stringify(this.surveys);\n        formData.append(\"work_order_id\", this.$route.params.id);\n        formData.append(\"category_id\", this.surveyData.category_id);\n        formData.append(\"note\", this.surveyData.note);\n        formData.append(\"access_file\", this.surveyData.access_file);\n        formData.append(\"scope\", scope);\n        await this.$store.dispatch(\"survey/add_survey\", formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.surveyData = {};\n          this.$router.go(0);\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AAEA;EACAA,iBADA;;EAGAC;IACA;MACAC,yBADA;MAEAC;QACAC,iBADA;QAEAC,eAFA;QAGAC,QAHA;QAIAC;MAJA,CAFA;MAQAC;QAAAC;MAAA,EARA;MASAC;IATA;EAWA,CAfA;;EAiBAC,YACA;MACAC,8CADA;MAEA;MACAC,0CAHA;MAIAC;IAJA;EADA,CAjBA;;EA0BAC;IACA;IACA;EACA,CA7BA;;EA+BAC,WACA;MACAC,wCADA;MAEAC;IAFA,EADA;IAKAC;MACA;QAAAV;MAAA;IACA,CAPA;;IAQAW;MACA;IACA,CAVA;;IAWAC;MACA;QACA;QACA;QAEAC;QACAA;QACAA;QACAA;QACAA;QAEA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;UACA;QACA,CAZA;MAaA,CAvBA,CAuBA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAH,aADA;cAEAI,YAFA;cAGAH;YAHA;YAKA;QAVA;MAYA;IACA;EAjDA;AA/BA","names":["name","data","id","surveyData","work_order_id","category_id","note","access_file","surveys","survey_scope","errors","computed","categories","workOrder","message","mounted","methods","getAllW_Order","getAllCategory","addRowSurvey","deleteRowSurvey","addSurvey","formData","toast","position","icon","title","showConfirmButton","timer","text"],"sourceRoot":"src/views/admin/survey","sources":["AddSurvey.vue"],"sourcesContent":["<template>\r\n  <div id=\"add_survey\">\r\n    <form class=\"AddCountry-form\" v-on:submit.prevent=\"addSurvey\">\r\n      <div class=\"dcard\">\r\n        <h2>Add Survey</h2>\r\n        <div class=\"distance\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label>Category Type</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <select id=\"category_id\" name=\"category_id\" v-model=\"surveyData.category_id\">\r\n                <option value=\"\">Select Category</option>\r\n                <!-- <option :value=\"single_category.id\">{{ single_category.name }} </option> -->\r\n                <option v-for=\"(category, index) in categories\" :key=\"index\" :value=\"category.id\">\r\n                  {{ category.name }}\r\n                </option>\r\n              </select>\r\n              <span v-if=\"errors.category_id\" class=\"danger_text\">{{ errors.category_id[0] }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"note\">Note</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input type=\"text\" name=\"note\" v-model=\"surveyData.note\" /> <br />\r\n              <span v-if=\"errors.note\" class=\"danger_text\">{{ errors.note[0] }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"table_card\" style=\"\">\r\n            <input type=\"button\" value=\"+Add New\" class=\"add_new\" @click=\"addRowSurvey\" />\r\n            <table class=\"\" style=\"\">\r\n              <thead class=\"text text-success\" style=\"width: 100%\">\r\n                <tr style=\"width: 100%\">\r\n                  <th style=\"width: 25%\">Scope of Survey</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style=\"width: 100%\">\r\n                <tr v-for=\"(survey, index) in surveys\" :key=\"index\" style=\"width: 100%\">\r\n                  <td style=\"width: 75%\">\r\n                    <input name=\"survey_scope\" v-model=\"survey.survey_scope\" class=\"form-control\" type=\"text\" />\r\n                  </td>\r\n                  <td style=\"width: 25%\">\r\n                    <input\r\n                      style=\"color: aliceblue; background-color: red\"\r\n                      type=\"button\"\r\n                      value=\"Remove\"\r\n                      class=\"back-btn\"\r\n                      @click=\"deleteRowSurvey(index)\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-75\">\r\n            <label class=\"container\" style=\"padding-top: 0; color: red\"\r\n              >Give access to relevant files.\r\n              <input type=\"checkbox\" name=\"access_file\" value=\"access_file\" v-model=\"surveyData.access_file\" />\r\n              <span class=\"checkmark\"></span>\r\n            </label>\r\n            <span v-if=\"errors.access_file\" class=\"danger_text\">{{ errors.access_file[0] }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <br />\r\n        <input type=\"submit\" value=\"Save\" />\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapActions, mapState } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"AddSurvey\",\r\n\r\n  data() {\r\n    return {\r\n      id: this.$route.params.id,\r\n      surveyData: {\r\n        work_order_id: \"\",\r\n        category_id: \"\",\r\n        note: \"\",\r\n        access_file: false,\r\n      },\r\n      surveys: [{ survey_scope: \"\" }],\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      categories: (state) => state.category.categories,\r\n      // single_category: state => state.category.single_category,\r\n      workOrder: (state) => state.w_order.w_orders,\r\n      message: (state) => state.survey.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getAllW_Order();\r\n    this.getAllCategory();\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      getAllW_Order: \"w_order/get_all_w_order\",\r\n      getAllCategory: \"category/get_all_category\",\r\n    }),\r\n    addRowSurvey: function () {\r\n      this.surveys.push({ survey_scope: \"\" });\r\n    },\r\n    deleteRowSurvey(index) {\r\n      this.surveys.splice(index, 1);\r\n    },\r\n    addSurvey: async function () {\r\n      try {\r\n        let formData = new FormData();\r\n        var scope = JSON.stringify(this.surveys);\r\n\r\n        formData.append(\"work_order_id\", this.$route.params.id);\r\n        formData.append(\"category_id\", this.surveyData.category_id);\r\n        formData.append(\"note\", this.surveyData.note);\r\n        formData.append(\"access_file\", this.surveyData.access_file);\r\n        formData.append(\"scope\", scope);\r\n\r\n        await this.$store.dispatch(\"survey/add_survey\", formData).then(() => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: this.message,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n\r\n          this.surveyData = {};\r\n          this.$router.go(0);\r\n        });\r\n      } catch (e) {\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#add_survey {\r\n  padding: 0px 5px 0px 5px;\r\n  margin: 0px 15px 0px 15px;\r\n}\r\n.distance {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 0.2rem;\r\n  margin-top: 1%;\r\n  margin-bottom: 2.5rem;\r\n}\r\nth {\r\n  background-color: #9ea2a3e8;\r\n  color: #343333;\r\n}\r\n.dcard {\r\n  width: 100%;\r\n  padding: var(--card-padding);\r\n  background: rgb(234, 234, 234);\r\n  border-radius: 1rem;\r\n  height: fit-content;\r\n  transition: all 300ms ease;\r\n  margin-top: 1%;\r\n}\r\nselect {\r\n  width: 85%;\r\n  height: 42px;\r\n  box-shadow: 0 2px 1px 0 rgb(0 0 0 / 20%), 0 2px 15px 0 rgb(0 0 0 / 19%);\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\ninput[type=\"text\"] {\r\n  width: 85%;\r\n  height: 42px;\r\n}\r\n.modal-vue .modal[data-v-507a997b] {\r\n  position: absolute;\r\n  width: 50%;\r\n  z-index: 9999;\r\n  margin: -270px auto;\r\n  padding: 20px 30px;\r\n  background-color: #fff;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n/* Checkbox stylr */\r\n/* The container */\r\n.container {\r\n  display: block;\r\n  position: relative;\r\n  padding-left: 35px;\r\n  margin-bottom: 12px;\r\n  cursor: pointer;\r\n  font-size: 22px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n/* Hide the browser's default checkbox */\r\n.container input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n/* Create a custom checkbox */\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: #cac4c4;\r\n}\r\n\r\n/* On mouse-over, add a grey background color */\r\n.container:hover input ~ .checkmark {\r\n  background-color: #ccc;\r\n}\r\n\r\n/* When the checkbox is checked, add a blue background */\r\n.container input:checked ~ .checkmark {\r\n  background-color: #2196f3;\r\n}\r\n\r\n/* Create the checkmark/indicator (hidden when not checked) */\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n/* Show the checkmark when checked */\r\n.container input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n\r\n/* Style the checkmark/indicator */\r\n.container .checkmark:after {\r\n  left: 9px;\r\n  top: 5px;\r\n  width: 5px;\r\n  height: 10px;\r\n  border: solid white;\r\n  border-width: 0 3px 3px 0;\r\n  -webkit-transform: rotate(45deg);\r\n  -ms-transform: rotate(45deg);\r\n  transform: rotate(45deg);\r\n}\r\n.back-btn {\r\n  padding: 5px 4px;\r\n  border: 1px solid gray;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  float: right;\r\n}\r\n.add_new:hover {\r\n  background-color: #226798;\r\n  box-shadow: rgba(0, 0, 0, 0.05) 0 5px 30px, rgba(0, 0, 0, 0.05) 0 1px 4px;\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n  transition-duration: 0.35s;\r\n}\r\n.add_new:hover:after {\r\n  opacity: 0.5;\r\n}\r\n\r\n.add_new:active {\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0 3px 6px 0, rgba(0, 0, 0, 0.1) 0 0 10px 0, rgba(0, 0, 0, 0.1) 0 1px 4px -1px;\r\n  transform: translateY(2px);\r\n  transition-duration: 0.35s;\r\n}\r\n\r\n.add_new:active:after {\r\n  opacity: 1;\r\n}\r\n.add_new {\r\n  width: 18%;\r\n  border-radius: 5px;\r\n  background-color: #01579b;\r\n  margin-right: 0%;\r\n  color: rgb(238 239 240);\r\n  font-weight: 600;\r\n  margin-top: -3%;\r\n  margin-left: 82%;\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0 3px 1px -2px, rgba(0, 0, 0, 0.14) 0 2px 2px 0, rgba(0, 0, 0, 0.12) 0 1px 5px 0;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}