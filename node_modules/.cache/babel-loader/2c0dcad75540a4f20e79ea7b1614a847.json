{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from \"vuex\";\nexport default {\n  name: \"EditSurvey\",\n\n  data() {\n    return {\n      scops: [],\n      surveyData: {\n        work_order_id: \"\",\n        start_date: \"\",\n        end_date: \"\"\n      },\n      errors: {}\n    };\n  },\n\n  computed: { ...mapState({\n      editSurveyList: state => state.survey.survey,\n      scopes: state => state.survey.scopes,\n      workOrder: state => state.w_order.w_orders,\n      categories: state => state.category.categories,\n      message: state => state.survey.success_message\n    })\n  },\n\n  mounted() {\n    this.getEditSurvey(this.$route.params.id);\n    this.getAllW_Order();\n    this.getAllCategories();\n    this.scops = this.scopes;\n    this.testFun();\n  },\n\n  methods: { ...mapActions({\n      getEditSurvey: \"survey/edit_survey\",\n      getAllW_Order: \"w_order/get_all_w_order\",\n      getAllCategories: \"category/get_all_category\"\n    }),\n    addRowSurvey: function () {\n      this.scops.push({\n        survey_scope: \"\"\n      });\n    },\n\n    deleteRowSurvey(index) {\n      this.scops.splice(index, 1);\n    },\n\n    testFun() {\n      console.log(\"SCOPES: \" + this.scops);\n    },\n\n    editSurvey: async function () {\n      try {\n        let formData = new FormData();\n        let id = this.$route.params.id; // let scops = JSON.parse(scope);\n\n        var scops = JSON.stringify(this.scops);\n        formData.append(\"work_order_id\", this.editSurveyList.work_order_id);\n        formData.append(\"start_date\", this.editSurveyList.start_date);\n        formData.append(\"end_date\", this.editSurveyList.end_date);\n        formData.append(\"category_id\", this.editSurveyList.category_id);\n        formData.append(\"scope\", scops);\n        formData.append(\"note\", this.editSurveyList.note);\n        formData.append(\"_method\", \"PUT\");\n        await this.$store.dispatch(\"survey/update_survey\", {\n          id: id,\n          data: formData\n        }).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getEditSurvey(this.$route.params.id);\n          this.$router.go(-1);\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    },\n    goBack: async function () {\n      this.$router.go(-1);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AAEA;EACAA,kBADA;;EAGAC;IACA;MACAC,SADA;MAEAC;QACAC,iBADA;QAEAC,cAFA;QAGAC;MAHA,CAFA;MAOAC;IAPA;EASA,CAbA;;EAeAC,YACA;MACAC,4CADA;MAEAC,oCAFA;MAGAC,0CAHA;MAIAC,8CAJA;MAKAC;IALA;EADA,CAfA;;EAyBAC;IACA;IACA;IACA;IACA;IACA;EACA,CA/BA;;EAiCAC,WACA;MACAC,mCADA;MAEAC,wCAFA;MAGAC;IAHA,EADA;IAOAC;MACA;QAAAC;MAAA;IACA,CATA;;IAUAC;MACA;IACA,CAZA;;IAcAC;MACAC;IACA,CAhBA;;IAkBAC;MACA;QACA;QACA,+BAFA,CAGA;;QACA;QAEAC;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACA;UAAAC;UAAAzB;QAAA;UACA;YACA0B,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;UACA;QACA,CAZA;MAaA,CA1BA,CA0BA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAH,aADA;cAEAI,YAFA;cAGAH;YAHA;YAKA;QAVA;MAYA;IACA,CA3DA;IA4DAI;MACA;IACA;EA9DA;AAjCA","names":["name","data","scops","surveyData","work_order_id","start_date","end_date","errors","computed","editSurveyList","scopes","workOrder","categories","message","mounted","methods","getEditSurvey","getAllW_Order","getAllCategories","addRowSurvey","survey_scope","deleteRowSurvey","testFun","console","editSurvey","formData","id","toast","position","icon","title","showConfirmButton","timer","text","goBack"],"sourceRoot":"src/views/admin/survey","sources":["EditSurvey.vue"],"sourcesContent":["<template>\r\n  <div id=\"edit_survey\">\r\n    <div class=\"dcard\">\r\n      <form class=\"AddCountry-form\" v-on:submit.prevent=\"editSurvey\">\r\n        <h2>Edit Survey</h2>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-25\">\r\n            <label for=\"subject\">Start Date</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"date\"\r\n              id=\"start_date\"\r\n              name=\"start_date\"\r\n              v-model=\"editSurveyList.start_date\"\r\n              accept=\"image/png, image/jpeg\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-25\">\r\n            <label for=\"subject\">End Date</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"date\"\r\n              id=\"end_date\"\r\n              name=\"end_date\"\r\n              v-model=\"editSurveyList.end_date\"\r\n              accept=\"image/png, image/jpeg\"\r\n            />\r\n          </div>\r\n        </div> -->\r\n        <div class=\"col\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label>Category Type</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <select id=\"category_id\" name=\"category_id\" v-model=\"editSurveyList.category_id\">\r\n                <option value=\"\">Select Category</option>\r\n                <option v-for=\"(category, index) in categories\" :key=\"index\" :value=\"category.id\">\r\n                  {{ category.name }}\r\n                </option>\r\n              </select>\r\n              <span v-if=\"errors.category_id\" class=\"danger_text\">{{ errors.category_id[0] }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"end_date\">Note</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input type=\"text\" id=\"note\" name=\"note\" v-model=\"editSurveyList.note\" />\r\n              <span v-if=\"errors.note\" class=\"danger_text\">{{ errors.note[0] }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"table_card\" style=\"\">\r\n            <input\r\n              style=\"\r\n                width: 10%;\r\n                background-color: rgb(1, 87, 155);\r\n                margin-right: 0%;\r\n                color: rgb(238, 239, 240);\r\n                font-weight: 600;\r\n                margin-top: 2%;\r\n                margin-left: 90%;\r\n                border-radius: 6px;\r\n              \"\r\n              type=\"button\"\r\n              value=\"+Add New\"\r\n              class=\"add_new\"\r\n              @click=\"addRowSurvey\"\r\n            />\r\n            <table class=\"\" style=\"\">\r\n              <thead class=\"text text-success\" style=\"width: 100%\">\r\n                <tr style=\"width: 100%\">\r\n                  <th style=\"width: 25%\">Scope of Survey</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style=\"width: 100%\">\r\n                <tr v-for=\"(survey, index) in scops\" :key=\"survey.survey_scope\" style=\"width: 100%\">\r\n                  <td style=\"width: 75%\">\r\n                    <input name=\"survey_scope\" v-model=\"survey.survey_scope\" class=\"form-control\" type=\"text\" />\r\n                  </td>\r\n                  <td style=\"width: 25%\">\r\n                    <input\r\n                      style=\"color: aliceblue; background-color: red\"\r\n                      type=\"button\"\r\n                      value=\"Remove\"\r\n                      class=\"back-btn\"\r\n                      @click=\"deleteRowSurvey(index)\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-25\">\r\n            <label for=\"end_date\">Scope</label>\r\n          </div>\r\n          <div class=\"col-75\" v-for=\"survey in scops\" :key=\"survey.survey_scope\">\r\n            <input type=\"text\" id=\"scope\" name=\"scope\" v-model=\"survey.survey_scope\" />\r\n            <span v-if=\"errors.scope\" class=\"danger_text\">{{ errors.scope[0] }}</span>\r\n          </div>\r\n        </div> -->\r\n\r\n        <div class=\"row\">\r\n          <input type=\"submit\" value=\"Update\" />\r\n          <input type=\"button\" @click=\"goBack\" value=\"Back\" class=\"back-btn\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapActions, mapState } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"EditSurvey\",\r\n\r\n  data() {\r\n    return {\r\n      scops: [],\r\n      surveyData: {\r\n        work_order_id: \"\",\r\n        start_date: \"\",\r\n        end_date: \"\",\r\n      },\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      editSurveyList: (state) => state.survey.survey,\r\n      scopes: (state) => state.survey.scopes,\r\n      workOrder: (state) => state.w_order.w_orders,\r\n      categories: (state) => state.category.categories,\r\n      message: (state) => state.survey.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getEditSurvey(this.$route.params.id);\r\n    this.getAllW_Order();\r\n    this.getAllCategories();\r\n    this.scops = this.scopes;\r\n    this.testFun();\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      getEditSurvey: \"survey/edit_survey\",\r\n      getAllW_Order: \"w_order/get_all_w_order\",\r\n      getAllCategories: \"category/get_all_category\",\r\n    }),\r\n\r\n    addRowSurvey: function () {\r\n      this.scops.push({ survey_scope: \"\" });\r\n    },\r\n    deleteRowSurvey(index) {\r\n      this.scops.splice(index, 1);\r\n    },\r\n\r\n    testFun() {\r\n      console.log(\"SCOPES: \" + this.scops);\r\n    },\r\n\r\n    editSurvey: async function () {\r\n      try {\r\n        let formData = new FormData();\r\n        let id = this.$route.params.id;\r\n        // let scops = JSON.parse(scope);\r\n        var scops = JSON.stringify(this.scops);\r\n\r\n        formData.append(\"work_order_id\", this.editSurveyList.work_order_id);\r\n        formData.append(\"start_date\", this.editSurveyList.start_date);\r\n        formData.append(\"end_date\", this.editSurveyList.end_date);\r\n        formData.append(\"category_id\", this.editSurveyList.category_id);\r\n        formData.append(\"scope\", scops);\r\n        formData.append(\"note\", this.editSurveyList.note);\r\n        formData.append(\"_method\", \"PUT\");\r\n        await this.$store.dispatch(\"survey/update_survey\", { id: id, data: formData }).then(() => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: this.message,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n\r\n          this.getEditSurvey(this.$route.params.id);\r\n          this.$router.go(-1);\r\n        });\r\n      } catch (e) {\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n    goBack: async function () {\r\n      this.$router.go(-1);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#edit_survey {\r\n  background: white;\r\n  padding: var(--card-padding);\r\n  border-radius: 1rem;\r\n  height: fit-content;\r\n  width: 100%;\r\n  box-shadow: rgb(226, 225, 225);\r\n  transition: all 300ms ease;\r\n  margin-top: 1%;\r\n}\r\n.col {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1.5rem;\r\n  margin-top: 1%;\r\n}\r\nselect {\r\n  width: 70%;\r\n  height: 38px;\r\n  box-shadow: 0 2px 1px 0 rgb(0 0 0 / 20%), 0 2px 15px 0 rgb(0 0 0 / 19%);\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}