{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  name: \"AddPermission\",\n\n  data() {\n    return {\n      roleData: {\n        name: \"\",\n        permission: []\n      },\n      errors: {}\n    };\n  },\n\n  computed: { ...mapState({\n      permissions: state => state.permission.permissions,\n      message: state => state.role.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllPermission();\n  },\n\n  methods: { ...mapActions({\n      getAllPermission: 'permission/get_all_permission'\n    }),\n    addRole: async function () {\n      try {\n        let formData = new FormData();\n        formData.append(\"name\", this.roleData.name);\n        this.roleData.permission.forEach(item => formData.append(\"permission[]\", item));\n        await this.$store.dispatch(\"role/add_role\", formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.roleData = {};\n          this.roleData.permission = '';\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AAEA;EACAA,qBADA;;EAGAC;IACA;MACAC;QACAF,QADA;QAEAG;MAFA,CADA;MAKAC;IALA;EAOA,CAXA;;EAaAC,YACA;MACAC,kDADA;MAEAC;IAFA;EADA,CAbA;;EAoBAC;IACA;EACA,CAtBA;;EAwBAC,WAEA;MACAC;IADA,EAFA;IAMAC;MACA;QACA;QAEAC;QACA;QAEA,kBACAC,QADA,CACA,eADA,EACAD,QADA,EAEAE,IAFA,CAEA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;UACA;QACA,CAdA;MAeA,CArBA,CAqBA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAH,aADA;cAEAI,YAFA;cAGAH;YAHA;YAKA;QAVA;MAYA;IACA;EA1CA;AAxBA","names":["name","data","roleData","permission","errors","computed","permissions","message","mounted","methods","getAllPermission","addRole","formData","dispatch","then","toast","position","icon","title","showConfirmButton","timer","text"],"sourceRoot":"src/views/admin/role","sources":["AddRole.vue"],"sourcesContent":["<template>\r\n  <div id=\"add_role\">\r\n    <div class=\"card\">\r\n      <div class=\"container\">\r\n        <h2>Add Role</h2>\r\n        <form v-on:submit.prevent=\"addRole\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"name\">Role Name</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"roleData.name\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                placeholder=\"Enter Role Name\"\r\n              />\r\n              <span v-if=\"errors.name\" class=\"danger_text\">{{\r\n                errors.name[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <br><br>\r\n          <!-- <strong>Permissions:</strong>\r\n\r\n          <div class=\"row\">\r\n            <ul class=\"grid\">\r\n              <li v-for=\"permission in permissions\" :key=\"permission.id\">\r\n                <div class=\"permission_data\" >\r\n                  <label for=\"permission\">\r\n                    <input type=\"checkbox\" id=\"permission\" name=\"permission\"  v-model=\"roleData.permission\" :value=\"permission.id\">\r\n                    {{permission.name}}\r\n                    <label :for=\"permission.id\">{{ permission.name }}</label>\r\n                  </label>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div> -->\r\n\r\n          <div class=\"row\">\r\n            <input type=\"submit\" value=\"Submit\" />\r\n            <router-link to=\"/dashboard/role\" style=\"float: right\">\r\n              <input type=\"button\" value=\"Back\" class=\"back-btn\" />\r\n            </router-link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"AddPermission\",\r\n\r\n  data() {\r\n    return {\r\n      roleData: {\r\n        name: \"\",\r\n        permission: []\r\n      },\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n        permissions: state => state.permission.permissions,\r\n        message: (state) => state.role.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted(){\r\n    this.getAllPermission();\r\n  },\r\n\r\n  methods: {\r\n\r\n      ...mapActions({\r\n          getAllPermission: 'permission/get_all_permission'\r\n      }),\r\n\r\n      addRole: async function () {\r\n        try {\r\n          let formData = new FormData();\r\n\r\n          formData.append(\"name\", this.roleData.name);\r\n          this.roleData.permission.forEach((item) => formData.append(\"permission[]\", item));\r\n\r\n          await this.$store\r\n            .dispatch(\"role/add_role\", formData)\r\n            .then(() => {\r\n              this.$swal.fire({\r\n                toast: true,\r\n                position: \"top-end\",\r\n                icon: \"success\",\r\n                title: this.message,\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              });\r\n\r\n              this.roleData = {};\r\n              this.roleData.permission = '';\r\n            });\r\n        } catch (e) {\r\n          switch (e.response.status) {\r\n            case 422:\r\n              this.errors = e.response.data.errors;\r\n              break;\r\n            default:\r\n              this.$swal.fire({\r\n                icon: \"error\",\r\n                text: \"Oops\",\r\n                title: e.response.data.error,\r\n              });\r\n              break;\r\n          }\r\n        }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#add_role {\r\n  padding: 0px 5px 0px 5px;\r\n  margin: 0px 15px 0px 15px;\r\n}\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n  appearance: auto;\r\n}\r\n\r\nselect {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-template-rows: repeat(1, auto);\r\n    /*gap: 3rem 0.75rem;*/\r\n    background-color: #f0f0f0;\r\n    list-style-type: none;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n  }\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}