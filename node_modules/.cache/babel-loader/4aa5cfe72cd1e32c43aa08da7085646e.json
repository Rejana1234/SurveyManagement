{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"AddStyle\",\n\n  data() {\n    return {\n      styleData: {\n        style_name: \"\"\n      },\n      errors: {}\n    };\n  },\n\n  computed: { ...mapState({\n      message: state => state.style.success_message\n    })\n  },\n  methods: {\n    addStyle: async function () {\n      try {\n        let formData = new FormData();\n        formData.append(\"style_name\", this.styleData.style_name);\n        await this.$store.dispatch(\"style/add_style\", formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.styleData = {};\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AAEA;EACAA,gBADA;;EAGAC;IACA;MACAC;QACAC;MADA,CADA;MAIAC;IAJA;EAMA,CAVA;;EAYAC,YACA;MACAC;IADA;EADA,CAZA;EAkBAC;IACAC;MACA;QACA;QAEAC;QAEA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;QACA,CAXA;MAYA,CAjBA,CAiBA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAH,aADA;cAEAI,YAFA;cAGAH;YAHA;YAKA;QAVA;MAYA;IACA;EAjCA;AAlBA","names":["name","data","styleData","style_name","errors","computed","message","methods","addStyle","formData","toast","position","icon","title","showConfirmButton","timer","text"],"sourceRoot":"src/views/admin/style","sources":["AddStyle.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"card\">\r\n      <div class=\"container\">\r\n        <h2>Add Style Form</h2>\r\n        <form v-on:submit.prevent=\"addStyle\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"dname\">Style Name</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"styleData.style_name\"\r\n                id=\"dname\"\r\n                name=\"style_name\"\r\n                placeholder=\"Enter Style Name\"\r\n              />\r\n              <span v-if=\"errors.style_name\" class=\"danger_text\">{{errors.style_name[0]}}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <input type=\"submit\" value=\"Submit\" />\r\n            <router-link to=\"/dashboard/style\" style=\"float: right\">\r\n              <input type=\"button\" value=\"Back\" class=\"back-btn\" />\r\n            </router-link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"AddStyle\",\r\n\r\n  data() {\r\n    return {\r\n      styleData: {\r\n        style_name: \"\",\r\n      },\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      message: (state) => state.style.success_message,\r\n    }),\r\n  },\r\n\r\n  methods: {\r\n    addStyle: async function () {\r\n      try {\r\n        let formData = new FormData();\r\n\r\n        formData.append(\"style_name\", this.styleData.style_name);\r\n\r\n        await this.$store.dispatch(\"style/add_style\", formData).then(() => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: this.message,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n\r\n          this.styleData = {};\r\n        });\r\n      } catch (e) {\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n  appearance: auto;\r\n}\r\n\r\n\r\nselect\r\n {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n  \r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}