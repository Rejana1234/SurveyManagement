{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataTable from '../../../components/datatable/Datatable';\nimport Pagination from '../../../components/datatable/Pagination.vue';\nimport { mapState } from 'vuex';\nimport { http } from '../../../service/http_service';\nexport default {\n  name: \"InterportVessels\",\n  title: \"Inter-Port - Vessels\",\n  components: {\n    datatable: DataTable,\n    pagination: Pagination\n  },\n\n  data() {\n    let sortOrders = {};\n    let columns = [{\n      label: '#Sl',\n      name: 'id'\n    }, {\n      label: 'Vessels Type',\n      name: 'name'\n    }, {\n      label: 'Vessels Code',\n      name: 'code'\n    }, {\n      label: 'Action',\n      name: 'action'\n    }];\n    columns.forEach(column => {\n      sortOrders[column.name] = -1;\n    });\n    return {\n      vessels: [],\n      columns: columns,\n      sortKey: 'id',\n      sortOrders: sortOrders,\n      perPage: ['10', '20', '30', '25', '50', '100'],\n      tableData: {\n        draw: 0,\n        length: 10,\n        search: '',\n        column: 0,\n        dir: 'desc'\n      },\n      pagination: {\n        last_page: '',\n        current_page: 1,\n        total: '',\n        last_page_url: '',\n        next_page_url: '',\n        prev_page_url: '',\n        from: '',\n        to: ''\n      },\n      url: \"http://127.0.0.1:8000/api/interport/v1/vessels/export\"\n    };\n  },\n\n  computed: { ...mapState({\n      message: state => state.vessels.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllVessel();\n  },\n\n  methods: {\n    getAllVessel() {\n      this.tableData.draw++;\n      let params = new URLSearchParams();\n      params.append('page', this.pagination.current_page);\n      params.append('draw', this.tableData.draw);\n      params.append('length', this.tableData.length);\n      params.append('search', this.tableData.search);\n      params.append('column', this.tableData.column);\n      params.append('dir', this.tableData.dir);\n      return http().get('v1/vessel/getData?' + params).then(response => {\n        this.vessels = response.data.data.data;\n        this.pagination = response.data.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    sortBy(key) {\n      this.sortKey = key;\n      this.sortOrders[key] = this.sortOrders[key] * -1;\n      this.tableData.column = this.getIndex(this.columns, 'name', key);\n      this.tableData.dir = this.sortOrders[key] === 1 ? 'asc' : 'desc';\n      this.getAllVessel();\n    },\n\n    getIndex(array, key, value) {\n      return array.findIndex(i => i[key] == value);\n    },\n\n    deleteVessel: async function (department) {\n      let id = department.id;\n\n      try {\n        await this.$store.dispatch('vessels/delete_vessel', id).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: 'top-end',\n            icon: 'success',\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getAllVessel();\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AAEA;AAEA;AAEA;EAEAA,wBAFA;EAGAC,6BAHA;EAKAC;IACAC,oBADA;IAEAC;EAFA,CALA;;EAUAC;IACA;IACA,eACA;MAAAC;MAAAN;IAAA,CADA,EAEA;MAAAM;MAAAN;IAAA,CAFA,EAGA;MAAAM;MAAAN;IAAA,CAHA,EAIA;MAAAM;MAAAN;IAAA,CAJA;IAMAO;MACAC;IACA,CAFA;IAIA;MACAC,WADA;MAEAF,gBAFA;MAGAG,aAHA;MAIAF,sBAJA;MAKAG,8CALA;MAMAC;QACAC,OADA;QAEAC,UAFA;QAGAC,UAHA;QAIAC,SAJA;QAKAC;MALA,CANA;MAaAb;QACAc,aADA;QAEAC,eAFA;QAGAC,SAHA;QAIAC,iBAJA;QAKAC,iBALA;QAMAC,iBANA;QAOAC,QAPA;QAQAC;MARA,CAbA;MAuBAC;IAvBA;EAyBA,CA/CA;;EAiDAC,YACA;MACAC;IADA;EADA,CAjDA;;EAuDAC;IACA;EACA,CAzDA;;EA2DAC;IACAC;MAEA;MACA;MACAC;MACAA;MACAA;MACAA;MACAA;MACAA;MAEA,iDACAC,IADA,CACAC;QACA;QACA;MACA,CAJA,EAKAC,KALA,CAKAC;QACAC;MACA,CAPA;IAQA,CApBA;;IAsBAC;MACA;MACA;MACA;MACA;MACA;IACA,CA5BA;;IA8BAC;MACA;IACA,CAhCA;;IAiCAC;MACA;;MAEA;QACA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIA1C,mBAJA;YAKA2C,wBALA;YAMAC;UANA;UAQA;QACA,CAVA;MAWA,CAZA,CAYA;QACAR;MACA;IACA;EAnDA;AA3DA","names":["name","title","components","datatable","pagination","data","label","columns","sortOrders","vessels","sortKey","perPage","tableData","draw","length","search","column","dir","last_page","current_page","total","last_page_url","next_page_url","prev_page_url","from","to","url","computed","message","mounted","methods","getAllVessel","params","then","response","catch","error","console","sortBy","getIndex","deleteVessel","toast","position","icon","showConfirmButton","timer"],"sourceRoot":"src/views/admin/vessels","sources":["Vessels.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <h2>Vessel List</h2>\r\n    <div class=\"flex-container\" style=\"justify-content: flex-end\">\r\n      <div class=\"exportimport\">\r\n        <form @submit.prevent=\"uploadFile\" enctype=\"multipart/form-data\">\r\n          <a :href=\"url\" type=\"button\" class=\"export\" style=\"font-weight: 900\">\r\n            <span class=\"material-icons-sharp add\" style=\"font-size: 11px\"\r\n              >download</span\r\n            >\r\n            Export\r\n          </a>\r\n        </form>\r\n      </div>\r\n      <router-link to=\"add_vessels\">\r\n        <button type=\"button\" class=\"add_new\">\r\n          <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">add</span>Add New\r\n        </button>\r\n      </router-link>\r\n    </div>\r\n\r\n    <div class=\"flex-container\">\r\n      <div class=\"flex-item\">\r\n        Show:\r\n        <select name=\"cars\" class=\"entries_count\" id=\"cars\" style=\"appearance: auto\" v-model=\"tableData.length\" @change=\"getAllVessel()\">\r\n          <option v-for=\"(records, index) in perPage\" :key=\"index\" :value=\"records\">{{records}}</option>\r\n        </select>\r\n        record per page.\r\n      </div>\r\n\r\n      <div class=\"flex-item\">\r\n        <input type=\"text\" v-model=\"tableData.search\" @input=\"getAllVessel()\" placeholder=\"Search here\" class=\"search\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div style=\"padding: 10px 10px; overflow-x: auto\">\r\n      <datatable :columns=\"columns\" :sortKey=\"sortKey\" :sortOrders=\"sortOrders\" @sort=\"sortBy\">\r\n          <tbody>\r\n          <tr v-show=\"vessels.length\" v-for=\"vessel in vessels\" :key=\"vessel.id\" >\r\n            <td data-label=\"#Sl\" style=\"text-align: center\">{{ vessel.id }}</td>\r\n            <td data-label=\"Vessels Type\" style=\"text-align: center\">{{ vessel.name }}</td>\r\n            <td data-label=\"Vessels Code\" style=\"text-align: center\">{{ vessel.code}}</td>\r\n            <td data-label=\"Action\" style=\"text-align: center\">\r\n            <router-link :to=\"`/dashboard/edit_vessels/${vessel.id}`\">\r\n              <button type=\"button\" class=\"actio-button-margin edit\">\r\n                <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">edit</span>\r\n               \r\n              </button>\r\n            </router-link>\r\n            <button type=\"button\" class=\"actio-button-margin delete\" v-on:click=\"deleteVessel(vessel)\">\r\n              <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">delete</span>\r\n             \r\n            </button>\r\n          </td>\r\n          </tr>\r\n\r\n          <tr v-show=\"!vessels.length\">\r\n              <td colspan=\"7\">No Data Found</td>\r\n            </tr>\r\n          </tbody>\r\n      </datatable>\r\n    </div>\r\n    <div>\r\n      <div class=\"flex-container-pagination\" style=\"padding-right: 10px\">\r\n        <div class=\"flex-item\">Showing {{ pagination.from }} to {{ pagination.to }} of {{ pagination.total }} records</div>\r\n        <div style=\"display: flex; justify-content: flex-end\">\r\n          <pagination :pagination.sync=\"pagination\" :offset=\"5\" @paginate=\"getAllVessel();\"></pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    import DataTable from '../../../components/datatable/Datatable';\r\n    import Pagination from '../../../components/datatable/Pagination.vue';\r\n\r\n    import {mapState} from 'vuex';\r\n\r\n    import { http } from '../../../service/http_service';\r\n\r\n    export default {\r\n\r\n    name: \"InterportVessels\",\r\n    title: \"Inter-Port - Vessels\",\r\n\r\n    components:{\r\n        datatable: DataTable,\r\n        pagination: Pagination\r\n    },\r\n\r\n    data(){\r\n        let sortOrders = {};\r\n        let columns = [\r\n            {label: '#Sl', name: 'id' },\r\n            {label: 'Vessels Type', name: 'name'},\r\n            {label: 'Vessels Code', name: 'code'},\r\n            {label: 'Action', name: 'action'},\r\n        ];\r\n        columns.forEach((column) => {\r\n            sortOrders[column.name] = -1;\r\n        });\r\n\r\n        return {\r\n            vessels: [],\r\n            columns: columns,\r\n            sortKey: 'id',\r\n            sortOrders: sortOrders,\r\n            perPage: ['10', '20', '30','25','50','100'],\r\n            tableData: {\r\n                draw: 0,\r\n                length: 10,\r\n                search: '',\r\n                column: 0,\r\n                dir: 'desc',\r\n            },\r\n            pagination: {\r\n                last_page: '',\r\n                current_page: 1,\r\n                total: '',\r\n                last_page_url: '',\r\n                next_page_url: '',\r\n                prev_page_url: '',\r\n                from: '',\r\n                to: ''\r\n            },\r\n            url: \"http://127.0.0.1:8000/api/interport/v1/vessels/export\",\r\n        }\r\n    },\r\n\r\n    computed:{\r\n        ...mapState({\r\n            message: state => state.vessels.success_message\r\n        })\r\n    },\r\n\r\n    mounted(){\r\n      this.getAllVessel();\r\n    },\r\n\r\n    methods: {\r\n        getAllVessel(){\r\n\r\n            this.tableData.draw++;\r\n            let params = new URLSearchParams();\r\n            params.append('page', this.pagination.current_page);\r\n            params.append('draw', this.tableData.draw);\r\n            params.append('length', this.tableData.length);\r\n            params.append('search', this.tableData.search);\r\n            params.append('column', this.tableData.column);\r\n            params.append('dir', this.tableData.dir);\r\n\r\n            return http().get('v1/vessel/getData?'+params)\r\n                .then(response => {\r\n                    this.vessels = response.data.data.data;\r\n                    this.pagination = response.data.data;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        },\r\n\r\n        sortBy(key) {\r\n            this.sortKey = key;\r\n            this.sortOrders[key] = this.sortOrders[key] * -1;\r\n            this.tableData.column = this.getIndex(this.columns, 'name', key);\r\n            this.tableData.dir = this.sortOrders[key] === 1 ? 'asc' : 'desc';\r\n            this.getAllVessel();\r\n        },\r\n\r\n        getIndex(array, key, value) {\r\n            return array.findIndex(i => i[key] == value)\r\n        },\r\n        deleteVessel: async function(department){\r\n        let id = department.id;\r\n\r\n                try {\r\n                    await this.$store.dispatch('vessels/delete_vessel', id).then(() => {\r\n                        this.$swal.fire({\r\n                            toast: true,\r\n                            position: 'top-end',\r\n                            icon: 'success',\r\n                            title: this.message,\r\n                            showConfirmButton: false,\r\n                            timer: 1500\r\n                        });\r\n                      this.getAllVessel();\r\n                    })\r\n                }catch (e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n        \r\n    }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n  .card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 5px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n.search {\r\n    padding: 10px 20px;\r\n    outline: none;\r\n    border: 1px solid #ddd;\r\n    /* border-radius: 6px; */\r\n    margin-right: 0;\r\n  }\r\n  .exportimport {\r\n  margin-top: 1.25%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}