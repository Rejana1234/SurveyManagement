{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  name: \"EditDimension\",\n\n  data() {\n    return {\n      errors: {}\n    };\n  },\n\n  computed: { ...mapState({\n      edit_dimension: state => state.dimension.dimension,\n      message: state => state.dimension.success_message\n    })\n  },\n\n  mounted() {\n    this.getEditDimension(this.$route.params.id);\n  },\n\n  methods: { ...mapActions({\n      getEditDimension: \"dimension/edit_dimension\"\n    }),\n    editDimension: async function () {\n      try {\n        let id = this.$route.params.id;\n        let formData = new FormData();\n        formData.append(\"name\", this.edit_dimension.name);\n        formData.append(\"_method\", \"PUT\");\n        await this.$store.dispatch(\"dimension/update_dimension\", {\n          id: id,\n          data: formData\n        }).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getEditDimension(this.$route.params.id);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AAEA;EACAA,qBADA;;EAGAC;IACA;MACAC;IADA;EAGA,CAPA;;EASAC,YACA;MACAC,kDADA;MAEAC;IAFA;EADA,CATA;;EAgBAC;IACA;EACA,CAlBA;;EAoBAC,WACA;MACAC;IADA,EADA;IAKAC;MACA;QACA;QACA;QAEAC;QACAA;QAEA,kBACAC,QADA,CACA,4BADA,EACA;UAAAC;UAAAX;QAAA,CADA,EAEAY,IAFA,CAEA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;QACA,CAbA;MAcA,CArBA,CAqBA;QACAC;MACA;IACA;EA9BA;AApBA","names":["name","data","errors","computed","edit_dimension","message","mounted","methods","getEditDimension","editDimension","formData","dispatch","id","then","toast","position","icon","title","showConfirmButton","timer","console"],"sourceRoot":"src/views/admin/dimension","sources":["EditDimension.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"card\">\r\n      <div class=\"container\">\r\n        <h2>Update Dimension Name</h2>\r\n        <form v-on:submit.prevent=\"editDimension\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"dname\">Dimension Name</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"edit_dimension.name\"\r\n                id=\"dname\"\r\n                name=\"name\"\r\n                placeholder=\"Enter Dimension Name\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <input type=\"submit\" value=\"Update\" />\r\n            <router-link to=\"/dashboard/dimension\" style=\"float: right\">\r\n              <input type=\"button\" value=\"Back\" class=\"back-btn\" />\r\n            </router-link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"EditDimension\",\r\n\r\n  data() {\r\n    return {\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      edit_dimension: (state) => state.dimension.dimension,\r\n      message: (state) => state.dimension.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getEditDimension(this.$route.params.id);\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      getEditDimension: \"dimension/edit_dimension\",\r\n    }),\r\n\r\n    editDimension: async function () {\r\n      try {\r\n        let id = this.$route.params.id;\r\n        let formData = new FormData();\r\n\r\n        formData.append(\"name\", this.edit_dimension.name);\r\n        formData.append(\"_method\", \"PUT\");\r\n\r\n        await this.$store\r\n          .dispatch(\"dimension/update_dimension\", { id: id, data: formData })\r\n          .then(() => {\r\n            this.$swal.fire({\r\n              toast: true,\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: this.message,\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n\r\n            this.getEditDimension(this.$route.params.id);\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n  appearance: auto;\r\n}\r\n\r\nselect\r\n {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n  \r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}