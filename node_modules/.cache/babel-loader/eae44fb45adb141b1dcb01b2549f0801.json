{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataTable from \"../../../components/datatable/Datatable\";\nimport Pagination from \"../../../components/datatable/Pagination.vue\";\nimport { downloadPdf } from \"../../../service/http_service\";\nimport { mapState } from \"vuex\";\nimport { http } from \"../../../service/http_service\";\nexport default {\n  name: \"InterportInvoice\",\n  components: {\n    datatable: DataTable,\n    pagination: Pagination\n  },\n  props: [\"work_order_id\"],\n\n  data() {\n    let sortOrders = {};\n    let columns = [// { label: \"#SL\", name: \"id\" },\n    {\n      label: \"Invoice No.\",\n      name: \"invoice_no\"\n    }, {\n      label: \"Date of Invoice\",\n      name: \"invoice_date\"\n    }, {\n      label: \"Type\",\n      name: \"invoice_type\"\n    }, {\n      label: \"Amount\",\n      name: \"amount\"\n    }, {\n      label: \"Payment Receiving Date\",\n      name: \"payment_receiving_date\"\n    }, //   { label: \"Surveyor Name\", name: \"surveyor_name\" },\n    //   { label: \"Download Invoice\", name: \"status\" },\n    {\n      label: \"Status\",\n      name: \"status\"\n    }, {\n      label: \"Download\",\n      name: \"invoice\"\n    } // { label: \"Action\", name: \"action\" },\n    ];\n    columns.forEach(column => {\n      sortOrders[column.name] = -1;\n    });\n    let apiUrl = this.$store.state.apiUrl;\n    let token = this.$store.state.token;\n    return {\n      invoices: [],\n      columns: columns,\n      sortKey: \"id\",\n      sortOrders: sortOrders,\n      perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\n      tableData: {\n        draw: 0,\n        length: 10,\n        search: \"\",\n        column: 0,\n        dir: \"desc\"\n      },\n      pagination: {\n        last_page: \"\",\n        current_page: 1,\n        total: \"\",\n        last_page_url: \"\",\n        next_page_url: \"\",\n        prev_page_url: \"\",\n        from: \"\",\n        to: \"\"\n      },\n      filterWorkOrderInvoiceData: {\n        invoice_id: \"\"\n      },\n      switch_status_url: apiUrl + \"v1/invoices/change_status/\",\n      download_invoice_url: apiUrl + \"v1/work_orders/download_invoice/\",\n      download_time_log_url: apiUrl + \"v1/work_orders/download_timelog/\",\n      active: false,\n      isopen: \"\",\n      error: \"\",\n      token: token\n    };\n  },\n\n  computed: { ...mapState({\n      message: state => state.invoice.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllInvoice();\n  },\n\n  methods: {\n    updatePaymenRecieveDate(id) {\n      console.log(id);\n      let formData = new FormData();\n      formData.append(\"payment_receiving_date\", event.target.value);\n      return http().post(\"v1/invoices/payment_receive_date/\" + id, formData).then(response => {\n        this.$swal.fire({\n          toast: true,\n          position: \"top-end\",\n          icon: \"success\",\n          title: \"Status updated\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n        this.getAllInvoice();\n        console.log(response);\n      });\n    },\n\n    switchStatus(invoice) {\n      return http().post(this.switch_status_url + invoice.id).then(response => {\n        this.$swal.fire({\n          toast: true,\n          position: \"top-end\",\n          icon: \"success\",\n          title: \"Payment Recieved\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n        this.getAllInvoice();\n        console.log(response);\n      });\n    },\n\n    downloadInvoice(id) {\n      let url = this.download_invoice_url + id; // window.open(url, \"_blank\");\n\n      downloadPdf(url);\n    },\n\n    downloadTimeLog(id) {\n      let url = this.download_time_log_url + id; // window.open(url, \"_blank\");\n\n      downloadPdf(url);\n    },\n\n    getAllInvoice() {\n      this.tableData.draw++;\n      let params = new URLSearchParams();\n      params.append(\"page\", this.pagination.current_page);\n      params.append(\"draw\", this.tableData.draw);\n      params.append(\"length\", this.tableData.length);\n      params.append(\"search\", this.tableData.search);\n      params.append(\"column\", this.tableData.column);\n      params.append(\"dir\", this.tableData.dir);\n      return http().get(\"v1/invoices/work_order_id/\" + this.$route.params.id + \"/getData?\" + params).then(response => {\n        this.invoices = response.data.data.data;\n        this.pagination = response.data.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    sortBy(key) {\n      this.sortKey = key;\n      this.sortOrders[key] = this.sortOrders[key] * -1;\n      this.tableData.column = this.getIndex(this.columns, \"name\", key);\n      this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\n      this.getAllInvoice();\n    },\n\n    getIndex(array, key, value) {\n      return array.findIndex(i => i[key] == value);\n    },\n\n    confirmDelete(invoice_details) {\n      let invoice_id = invoice_details.id;\n      this.$swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          console.log(invoice_id);\n          this.deleteInvoice(invoice_id);\n        }\n      });\n    },\n\n    deleteInvoice: async function (id) {\n      try {\n        await this.$store.dispatch(\"invoice/delete_invoice\", id).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getAllInvoice();\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AAEA;AAEA;AAEA;EACAA,wBADA;EAGAC;IACAC,oBADA;IAEAC;EAFA,CAHA;EAQAC,wBARA;;EAUAC;IACA;IACA,eACA;IACA;MAAAC;MAAAN;IAAA,CAFA,EAGA;MAAAM;MAAAN;IAAA,CAHA,EAIA;MAAAM;MAAAN;IAAA,CAJA,EAKA;MAAAM;MAAAN;IAAA,CALA,EAMA;MAAAM;MAAAN;IAAA,CANA,EAOA;IACA;IACA;MAAAM;MAAAN;IAAA,CATA,EAUA;MAAAM;MAAAN;IAAA,CAVA,CAWA;IAXA;IAaAO;MACAC;IACA,CAFA;IAGA;IACA;IACA;MACAC,YADA;MAEAF,gBAFA;MAGAG,aAHA;MAIAF,sBAJA;MAKAG,8CALA;MAMAC;QACAC,OADA;QAEAC,UAFA;QAGAC,UAHA;QAIAC,SAJA;QAKAC;MALA,CANA;MAaAd;QACAe,aADA;QAEAC,eAFA;QAGAC,SAHA;QAIAC,iBAJA;QAKAC,iBALA;QAMAC,iBANA;QAOAC,QAPA;QAQAC;MARA,CAbA;MAuBAC;QACAC;MADA,CAvBA;MA0BAC,wDA1BA;MA2BAC,iEA3BA;MA4BAC,kEA5BA;MA6BAC,aA7BA;MA8BAC,UA9BA;MA+BAC,SA/BA;MAgCAC;IAhCA;EAkCA,CAhEA;;EAkEAC,YACA;MACAC;IADA;EADA,CAlEA;;EAwEAC;IACA;EACA,CA1EA;;EA4EAC;IACAC;MACAC;MACA;MACAC;MACA,cACAC,IADA,CACA,wCADA,EACAD,QADA,EAEAE,IAFA,CAEAC;QACA;UACAC,WADA;UAEAC,mBAFA;UAGAC,eAHA;UAIAC,uBAJA;UAKAC,wBALA;UAMAC;QANA;QAQA;QACAV;MACA,CAbA;IAcA,CAnBA;;IAoBAW;MACA,cACAT,IADA,CACA,mCADA,EAEAC,IAFA,CAEAC;QACA;UACAC,WADA;UAEAC,mBAFA;UAGAC,eAHA;UAIAC,yBAJA;UAKAC,wBALA;UAMAC;QANA;QAQA;QACAV;MACA,CAbA;IAcA,CAnCA;;IAqCAY;MACA,yCADA,CAEA;;MAEAC;IACA,CA1CA;;IA2CAC;MACA,0CADA,CAEA;;MAEAD;IACA,CAhDA;;IAiDAE;MACA;MACA;MACAC;MACAA;MACAA;MACAA;MACAA;MACAA;MAEA,cACAC,GADA,CACA,2EADA,EAEAd,IAFA,CAEAC;QACA;QACA;MACA,CALA,EAMAc,KANA,CAMAzB;QACAO;MACA,CARA;IASA,CApEA;;IAsEAmB;MACA;MACA;MACA;MACA;MACA;IACA,CA5EA;;IA8EAC;MACA;IACA,CAhFA;;IAkFAC;MACA;MACA,WACAC,IADA,CACA;QACAd,sBADA;QAEAe,yCAFA;QAGAhB,eAHA;QAIAiB,sBAJA;QAKAC,6BALA;QAMAC,yBANA;QAOAC;MAPA,CADA,EAUAxB,IAVA,CAUAyB;QACA;UACA5B;UACA;QACA;MACA,CAfA;IAgBA,CApGA;;IAsGA6B;MACA;QACA;UACA;YACAxB,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UAQA;QACA,CAVA;MAWA,CAZA,CAYA;QACAV;MACA;IACA;EAtHA;AA5EA","names":["name","components","datatable","pagination","props","data","label","columns","sortOrders","invoices","sortKey","perPage","tableData","draw","length","search","column","dir","last_page","current_page","total","last_page_url","next_page_url","prev_page_url","from","to","filterWorkOrderInvoiceData","invoice_id","switch_status_url","download_invoice_url","download_time_log_url","active","isopen","error","token","computed","message","mounted","methods","updatePaymenRecieveDate","console","formData","post","then","response","toast","position","icon","title","showConfirmButton","timer","switchStatus","downloadInvoice","downloadPdf","downloadTimeLog","getAllInvoice","params","get","catch","sortBy","getIndex","confirmDelete","fire","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","deleteInvoice"],"sourceRoot":"src/views/admin/invoice","sources":["InvoiceFile.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <h2>Invoice List</h2>\r\n    <div>\r\n      <div class=\"flex-container\">\r\n        <div class=\"flex-item\">\r\n          Show:\r\n          <select\r\n            name=\"cars\"\r\n            class=\"entries_count\"\r\n            id=\"cars\"\r\n            style=\"appearance: auto\"\r\n            v-model=\"tableData.length\"\r\n            @change=\"getAllInvoice()\"\r\n          >\r\n            <option v-for=\"(records, index) in perPage\" :key=\"index\" :value=\"records\">\r\n              {{ records }}\r\n            </option>\r\n          </select>\r\n          records per page.\r\n        </div>\r\n\r\n        <div class=\"flex-item\">\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"tableData.search\"\r\n            @input=\"getAllInvoice()\"\r\n            placeholder=\"Search here\"\r\n            class=\"search\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div style=\"padding: 10px 10px\">\r\n        <datatable :columns=\"columns\" :sortKey=\"sortKey\" :sortOrders=\"sortOrders\" @sort=\"sortBy\">\r\n          <tbody>\r\n            <tr v-show=\"invoices.length\" v-for=\"invoice in invoices\" :key=\"invoice.id\">\r\n              <!-- <td data-label=\"#SL\" style=\"text-align: center\">\r\n                {{ invoice.id }}\r\n              </td> -->\r\n              <td data-label=\"Invoice No\" style=\"text-align: center\">\r\n                {{ invoice.invoice_no }}\r\n              </td>\r\n              <td data-label=\"Date of Invoice\" style=\"text-align: center\">\r\n                {{ invoice.invoice_date }}\r\n              </td>\r\n              <td data-label=\"Type of Invoice\" style=\"text-align: center\">\r\n                {{ invoice.invoice_type }}\r\n              </td>\r\n              <td data-label=\"Invoice Amount\" style=\"text-align: center\">\r\n                {{ invoice.amount.toLocaleString(\"en-US\") }} ({{ invoice.currency }})\r\n              </td>\r\n              <td data-label=\"Payment Receiving Date\" style=\"text-align: center\">\r\n                <input\r\n                  type=\"date\"\r\n                  v-model=\"invoice.payment_receiving_date\"\r\n                  @change=\"updatePaymenRecieveDate(invoice.id)\"\r\n                />\r\n                <!-- {{ invoice.payment_receiving_date }} -->\r\n              </td>\r\n              <td data-label=\"Status\" style=\"text-align: center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  :id=\"invoice.id\"\r\n                  :checked=\"invoice.status === 1\"\r\n                  @click=\"switchStatus(invoice)\"\r\n                /><label :for=\"invoice.id\">Toggle</label>\r\n              </td>\r\n              <td data-label=\"Action\" style=\"text-align: center\">\r\n                <div class=\"dropdown\">\r\n                  <button class=\"dropbtn\" type=\"button\">\r\n                    <span class=\"material-icons-sharp\"> more_horiz </span>\r\n                  </button>\r\n                  <div class=\"dropdown-content\">\r\n                    <button\r\n                      title=\"Delete Invoice\"\r\n                      type=\"button\"\r\n                      class=\"actio-button-margin delete\"\r\n                      v-on:click=\"confirmDelete(invoice)\"\r\n                    >\r\n                      <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">delete</span>\r\n                      Delete\r\n                    </button>\r\n                    <br />\r\n                    <button\r\n                      title=\"Download Invoice\"\r\n                      type=\"button\"\r\n                      class=\"actio-button-margin appoint\"\r\n                      @click=\"downloadInvoice(invoice.id)\"\r\n                    >\r\n                      <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">download</span> Invoice\r\n                    </button>\r\n                    <button\r\n                      title=\"Download Time Log\"\r\n                      type=\"button\"\r\n                      class=\"actio-button-margin download\"\r\n                      @click=\"downloadTimeLog(invoice.id)\"\r\n                    >\r\n                      <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">download</span> Time Log\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr v-show=\"!invoices.length\">\r\n              <td colspan=\"9\">No Data Found</td>\r\n            </tr>\r\n          </tbody>\r\n        </datatable>\r\n      </div>\r\n\r\n      <div>\r\n        <div class=\"flex-container-pagination\" style=\"padding-right: 10px\">\r\n          <div class=\"flex-item\">\r\n            Showing {{ pagination.from }} to {{ pagination.to }} of {{ pagination.total }} records\r\n          </div>\r\n          <div style=\"display: flex; justify-content: flex-end\">\r\n            <pagination :pagination.sync=\"pagination\" :offset=\"5\" @paginate=\"getAllInvoice()\"></pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- </div> -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DataTable from \"../../../components/datatable/Datatable\";\r\nimport Pagination from \"../../../components/datatable/Pagination.vue\";\r\nimport { downloadPdf } from \"../../../service/http_service\";\r\n\r\nimport { mapState } from \"vuex\";\r\n\r\nimport { http } from \"../../../service/http_service\";\r\n\r\nexport default {\r\n  name: \"InterportInvoice\",\r\n\r\n  components: {\r\n    datatable: DataTable,\r\n    pagination: Pagination,\r\n  },\r\n\r\n  props: [\"work_order_id\"],\r\n\r\n  data() {\r\n    let sortOrders = {};\r\n    let columns = [\r\n      // { label: \"#SL\", name: \"id\" },\r\n      { label: \"Invoice No.\", name: \"invoice_no\" },\r\n      { label: \"Date of Invoice\", name: \"invoice_date\" },\r\n      { label: \"Type\", name: \"invoice_type\" },\r\n      { label: \"Amount\", name: \"amount\" },\r\n      { label: \"Payment Receiving Date\", name: \"payment_receiving_date\" },\r\n      //   { label: \"Surveyor Name\", name: \"surveyor_name\" },\r\n      //   { label: \"Download Invoice\", name: \"status\" },\r\n      { label: \"Status\", name: \"status\" },\r\n      { label: \"Download\", name: \"invoice\" },\r\n      // { label: \"Action\", name: \"action\" },\r\n    ];\r\n    columns.forEach((column) => {\r\n      sortOrders[column.name] = -1;\r\n    });\r\n    let apiUrl = this.$store.state.apiUrl;\r\n    let token = this.$store.state.token;\r\n    return {\r\n      invoices: [],\r\n      columns: columns,\r\n      sortKey: \"id\",\r\n      sortOrders: sortOrders,\r\n      perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\r\n      tableData: {\r\n        draw: 0,\r\n        length: 10,\r\n        search: \"\",\r\n        column: 0,\r\n        dir: \"desc\",\r\n      },\r\n      pagination: {\r\n        last_page: \"\",\r\n        current_page: 1,\r\n        total: \"\",\r\n        last_page_url: \"\",\r\n        next_page_url: \"\",\r\n        prev_page_url: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n      },\r\n      filterWorkOrderInvoiceData: {\r\n        invoice_id: \"\",\r\n      },\r\n      switch_status_url: apiUrl + \"v1/invoices/change_status/\",\r\n      download_invoice_url: apiUrl + \"v1/work_orders/download_invoice/\",\r\n      download_time_log_url: apiUrl + \"v1/work_orders/download_timelog/\",\r\n      active: false,\r\n      isopen: \"\",\r\n      error: \"\",\r\n      token: token,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      message: (state) => state.invoice.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getAllInvoice();\r\n  },\r\n\r\n  methods: {\r\n    updatePaymenRecieveDate(id) {\r\n      console.log(id);\r\n      let formData = new FormData();\r\n      formData.append(\"payment_receiving_date\", event.target.value);\r\n      return http()\r\n        .post(\"v1/invoices/payment_receive_date/\" + id, formData)\r\n        .then((response) => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: \"Status updated\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n          this.getAllInvoice();\r\n          console.log(response);\r\n        });\r\n    },\r\n    switchStatus(invoice) {\r\n      return http()\r\n        .post(this.switch_status_url + invoice.id)\r\n        .then((response) => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: \"Payment Recieved\",\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n          this.getAllInvoice();\r\n          console.log(response);\r\n        });\r\n    },\r\n\r\n    downloadInvoice(id) {\r\n      let url = this.download_invoice_url + id;\r\n      // window.open(url, \"_blank\");\r\n\r\n      downloadPdf(url);\r\n    },\r\n    downloadTimeLog(id) {\r\n      let url = this.download_time_log_url + id;\r\n      // window.open(url, \"_blank\");\r\n\r\n      downloadPdf(url);\r\n    },\r\n    getAllInvoice() {\r\n      this.tableData.draw++;\r\n      let params = new URLSearchParams();\r\n      params.append(\"page\", this.pagination.current_page);\r\n      params.append(\"draw\", this.tableData.draw);\r\n      params.append(\"length\", this.tableData.length);\r\n      params.append(\"search\", this.tableData.search);\r\n      params.append(\"column\", this.tableData.column);\r\n      params.append(\"dir\", this.tableData.dir);\r\n\r\n      return http()\r\n        .get(\"v1/invoices/work_order_id/\" + this.$route.params.id + \"/getData?\" + params)\r\n        .then((response) => {\r\n          this.invoices = response.data.data.data;\r\n          this.pagination = response.data.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    sortBy(key) {\r\n      this.sortKey = key;\r\n      this.sortOrders[key] = this.sortOrders[key] * -1;\r\n      this.tableData.column = this.getIndex(this.columns, \"name\", key);\r\n      this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\r\n      this.getAllInvoice();\r\n    },\r\n\r\n    getIndex(array, key, value) {\r\n      return array.findIndex((i) => i[key] == value);\r\n    },\r\n\r\n    confirmDelete(invoice_details) {\r\n      let invoice_id = invoice_details.id;\r\n      this.$swal\r\n        .fire({\r\n          title: \"Are you sure?\",\r\n          text: \"You won't be able to revert this!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, delete it!\",\r\n        })\r\n        .then((result) => {\r\n          if (result.isConfirmed) {\r\n            console.log(invoice_id);\r\n            this.deleteInvoice(invoice_id);\r\n          }\r\n        });\r\n    },\r\n\r\n    deleteInvoice: async function (id) {\r\n      try {\r\n        await this.$store.dispatch(\"invoice/delete_invoice\", id).then(() => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: this.message,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n          this.getAllInvoice();\r\n        });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ninput[type=\"text\"] {\r\n  width: 100%;\r\n}\r\n.badge {\r\n  margin-top: -25px;\r\n  font-size: 15px;\r\n  color: red;\r\n}\r\n.download {\r\n  background-color: #3e8e41;\r\n}\r\n.details {\r\n  background-color: rgb(60, 60, 247);\r\n}\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n\r\nbutton {\r\n  width: fit-content;\r\n  padding: 5px 5px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  /* margin-top: 2%; */\r\n}\r\n\r\n.search {\r\n  padding: 10px 20px;\r\n  outline: none;\r\n  border: 1px solid #ddd;\r\n  margin-right: 0;\r\n}\r\n.chips {\r\n  width: 47%;\r\n  margin-left: 55px;\r\n}\r\n\r\n.chips1 {\r\n  width: 50%;\r\n  margin-left: 55px;\r\n}\r\n.chips3 {\r\n  width: 50%;\r\n  margin-left: 55px;\r\n}\r\n.chips2 {\r\n  width: 43%;\r\n  margin-left: 55px;\r\n  line-height: 9px;\r\n}\r\n.appoint {\r\n  background-color: rgb(21, 99, 78);\r\n  border: 1px solid rgb(31, 182, 20);\r\n}\r\n.appoint:hover {\r\n  background-color: rgb(102, 174, 95);\r\n}\r\n.download {\r\n  background-color: rgb(25, 210, 191);\r\n  border: 1px solid rgb(31, 182, 20);\r\n}\r\n.download:hover {\r\n  background-color: rgb(44, 174, 161);\r\n  border: 1px solid rgb(31, 182, 20);\r\n}\r\n\r\n/* Dropdown Button */\r\n.dropbtn {\r\n  background-color: #f7f5f5;\r\n  color: #020202;\r\n  padding: 5px;\r\n  font-size: 16px;\r\n  border: none;\r\n}\r\n\r\n/* The container <div> - needed to position the dropdown content */\r\n.dropdown {\r\n  position: relative;\r\n}\r\n\r\n/* Dropdown Content (Hidden by Default) */\r\n.dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f1f1f1;\r\n  min-width: 119px;\r\n  box-shadow: 0px 8px 16px 0px rgb(0 0 0 / 20%);\r\n  z-index: 1;\r\n  margin-left: 0%;\r\n  border-radius: 10px;\r\n  width: 100%;\r\n}\r\n\r\n.dropdown-content button {\r\n  margin: 5px 4px 5px 8px;\r\n  width: 70%;\r\n}\r\n\r\n.active {\r\n  opacity: 2;\r\n  pointer-events: visible;\r\n  top: 100%;\r\n  display: none;\r\n  z-index: 1;\r\n}\r\n\r\n/* Show the dropdown menu on hover */\r\n.dropdown:hover .dropdown-content {\r\n  display: block;\r\n}\r\n\r\n/* Change the background color of the dropdown button when the dropdown content is shown */\r\n.dropdown:hover .dropbtn {\r\n  background-color: #3e8e41;\r\n}\r\n\r\ninput[type=\"checkbox\"] {\r\n  height: 0;\r\n  width: 0;\r\n  visibility: hidden;\r\n}\r\n\r\nlabel {\r\n  cursor: pointer;\r\n  text-indent: -9999px;\r\n  width: 70px;\r\n  height: 30px;\r\n  background: grey;\r\n  display: block;\r\n  border-radius: 100px;\r\n  position: relative;\r\n  margin-left: 54px;\r\n  margin-top: -16%;\r\n}\r\n\r\nlabel:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  width: 30px;\r\n  height: 20px;\r\n  background: #fff;\r\n  border-radius: 90px;\r\n  transition: 0.3s;\r\n}\r\ninput:checked + label {\r\n  background: #bada55;\r\n}\r\n\r\ninput:checked + label:after {\r\n  left: calc(100% - 5px);\r\n  transform: translateX(-100%);\r\n}\r\n\r\nlabel:active:after {\r\n  width: 30px;\r\n  padding: 10px 20px;\r\n  outline: none;\r\n  border: 1px solid #ddd;\r\n  /* border-radius: 6px; */\r\n  margin-right: 0;\r\n}\r\ninput[type=\"text\"] {\r\n  width: 97%;\r\n}\r\nh1 {\r\n  font-size: 1.3rem;\r\n}\r\ninput[type=\"date\"] {\r\n  width: 84%;\r\n}\r\nselect {\r\n  height: 30px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}