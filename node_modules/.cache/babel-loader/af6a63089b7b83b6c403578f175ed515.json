{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataTable from \"../../../components/datatable/Datatable\";\nimport Pagination from \"../../../components/datatable/Pagination.vue\";\nimport { mapState } from \"vuex\";\nimport { http } from \"../../../service/http_service\";\nexport default {\n  name: \"InterportCategory\",\n  title: \"InterPort - Category\",\n  components: {\n    datatable: DataTable,\n    pagination: Pagination\n  },\n\n  data() {\n    let sortOrders = {};\n    let columns = [{\n      label: \"Category Type\",\n      name: \"name\"\n    }, {\n      label: \"Description\",\n      name: \"description\"\n    }, {\n      label: \"Action\",\n      name: \"action\"\n    }];\n    columns.forEach(column => {\n      sortOrders[column.name] = -1;\n    });\n    return {\n      categories: [],\n      columns: columns,\n      sortKey: \"id\",\n      sortOrders: sortOrders,\n      perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\n      tableData: {\n        draw: 0,\n        length: 10,\n        search: \"\",\n        column: 0,\n        dir: \"desc\"\n      },\n      pagination: {\n        last_page: \"\",\n        current_page: 1,\n        total: \"\",\n        last_page_url: \"\",\n        next_page_url: \"\",\n        prev_page_url: \"\",\n        from: \"\",\n        to: \"\"\n      },\n      filterCategoryData: {\n        category_id: \"\"\n      },\n      user_role: JSON.parse(localStorage.getItem(\"user_role\")),\n      user_role_id: JSON.parse(localStorage.getItem(\"user_role_id\")),\n      selected: '',\n      value: 2,\n      styling: {\n        objectcolor: '#ff9633',\n        animationcolor: '#ffffff',\n        animationcolor2: '#17fd3d',\n        objectbg: '#999793',\n        opacity: 80,\n        bgcolor: '#343a40',\n        size: 5,\n        speed: 2,\n        disableScrolling: true\n      },\n      code: ``,\n      flag: false\n    };\n  },\n\n  computed: { ...mapState({\n      message: state => state.category.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllCategory();\n    this.flag = true;\n  },\n\n  methods: {\n    loader(loader) {\n      this.selected = loader;\n      this.code = `<loader object=\"${this.styling.objectcolor}\" color1=\"${this.styling.animationcolor}\" color2=\"${this.styling.animationcolor2}\" size=\"${this.styling.size}\" speed=\"${this.styling.speed}\" bg=\"${this.styling.bgcolor}\" objectbg=\"${this.styling.objectbg}\" opacity=\"${this.styling.opacity}\" disableScrolling=\"${this.styling.disableScrolling}\" name=\"${this.selected}\"></loader>`;\n      const body = document.getElementsByTagName(\"html\")[0];\n      body.classList.add(\"overflow-hidden\");\n      setTimeout(() => {\n        this.selected = '';\n        const body = document.getElementsByTagName(\"html\")[0];\n        body.classList.remove(\"overflow-hidden\");\n      }, this.value * 1000);\n    },\n\n    getAllCategory() {\n      this.tableData.draw++;\n      let params = new URLSearchParams();\n      params.append(\"page\", this.pagination.current_page);\n      params.append(\"draw\", this.tableData.draw);\n      params.append(\"length\", this.tableData.length);\n      params.append(\"search\", this.tableData.search);\n      params.append(\"column\", this.tableData.column);\n      params.append(\"dir\", this.tableData.dir);\n      return http().get(\"v1/category/getData?\" + params).then(response => {\n        this.loader('circular');\n        this.categories = response.data.data.data;\n        this.pagination = response.data.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    sortBy(key) {\n      this.sortKey = key;\n      this.sortOrders[key] = this.sortOrders[key] * -1;\n      this.tableData.column = this.getIndex(this.columns, \"name\", key);\n      this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\n      this.getAllCategory();\n    },\n\n    getIndex(array, key, value) {\n      return array.findIndex(i => i[key] == value);\n    },\n\n    confirmDelete(category_details) {\n      let category_id = category_details.id;\n      this.$swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          console.log(category_id);\n          this.deleteCategory(category_id);\n        }\n      });\n    },\n\n    deleteCategory: async function (id) {\n      // let id = role.id;\n      try {\n        await this.$store.dispatch(\"category/delete_category\", id).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getAllCategory(id);\n        });\n      } catch (e) {\n        console.log(e);\n\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AAEA;AAEA;AAEA;EACAA,yBADA;EAEAC,6BAFA;EAIAC;IACAC,oBADA;IAEAC;EAFA,CAJA;;EASAC;IACA;IACA,eACA;MAAAC;MAAAN;IAAA,CADA,EAEA;MAAAM;MAAAN;IAAA,CAFA,EAGA;MAAAM;MAAAN;IAAA,CAHA;IAKAO;MACAC;IACA,CAFA;IAIA;MACAC,cADA;MAEAF,gBAFA;MAGAG,aAHA;MAIAF,sBAJA;MAKAG,8CALA;MAMAC;QACAC,OADA;QAEAC,UAFA;QAGAC,UAHA;QAIAC,SAJA;QAKAC;MALA,CANA;MAaAb;QACAc,aADA;QAEAC,eAFA;QAGAC,SAHA;QAIAC,iBAJA;QAKAC,iBALA;QAMAC,iBANA;QAOAC,QAPA;QAQAC;MARA,CAbA;MAuBAC;QACAC;MADA,CAvBA;MA0BAC,wDA1BA;MA2BAC,8DA3BA;MA4BAC,YA5BA;MA6BAC,QA7BA;MA8BAC;QACAC,sBADA;QAEAC,yBAFA;QAGAC,0BAHA;QAIAC,mBAJA;QAKAC,WALA;QAMAC,kBANA;QAOAC,OAPA;QAQAC,QARA;QASAC;MATA,CA9BA;MAyCAC,QAzCA;MA0CAC;IA1CA;EA4CA,CAhEA;;EAkEAC,YACA;MACAC;IADA;EADA,CAlEA;;EAwEAC;IACA;IACA;EACA,CA3EA;;EA6EAC;IACAC;MACA;MACA;MACA;MACAC;MACAC;QACA;QACA;QACAD;MACA,CAJA,EAIA,iBAJA;IAKA,CAXA;;IAaAE;MACA;MACA;MACAC;MACAA;MACAA;MACAA;MACAA;MACAA;MAEA,cACAC,GADA,CACA,+BADA,EAEAC,IAFA,CAEAC;QACA;QACA;QACA;MACA,CANA,EAOAC,KAPA,CAOAC;QACAC;MACA,CATA;IAUA,CAjCA;;IAmCAC;MACA;MACA;MACA;MACA;MACA;IACA,CAzCA;;IA2CAC;MACA;IACA,CA7CA;;IA8CAC;MACA;MACA,WACAC,IADA,CACA;QACA7D,sBADA;QAEA8D,yCAFA;QAGAC,eAHA;QAIAC,sBAJA;QAKAC,6BALA;QAMAC,yBANA;QAOAC;MAPA,CADA,EAUAd,IAVA,CAUAe;QACA;UACAX;UACA;QACA;MACA,CAfA;IAgBA,CAhEA;;IAiEAY;MACA;MAEA;QACA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAR,eAHA;YAIA/D,mBAJA;YAKAwE,wBALA;YAMAC;UANA;UASA;QACA,CAXA;MAYA,CAbA,CAaA;QACAhB;;QACA;UACA;YACA;YACA;;UACA;YACA;cACAM,aADA;cAEAD,YAFA;cAGA9D;YAHA;YAKA;QAVA;MAYA;IACA;EAhGA;AA7EA","names":["name","title","components","datatable","pagination","data","label","columns","sortOrders","categories","sortKey","perPage","tableData","draw","length","search","column","dir","last_page","current_page","total","last_page_url","next_page_url","prev_page_url","from","to","filterCategoryData","category_id","user_role","user_role_id","selected","value","styling","objectcolor","animationcolor","animationcolor2","objectbg","opacity","bgcolor","size","speed","disableScrolling","code","flag","computed","message","mounted","methods","loader","body","setTimeout","getAllCategory","params","get","then","response","catch","error","console","sortBy","getIndex","confirmDelete","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","deleteCategory","toast","position","showConfirmButton","timer"],"sourceRoot":"src/views/admin/category","sources":["Category.vue"],"sourcesContent":["<template>\r\n  <div id=\"category\">\r\n    <loader :object=\"styling.objectcolor\"\r\n            :color1=\"styling.animationcolor\"\r\n            :color2=\"styling.animationcolor2\"\r\n            :size=\"styling.size\"\r\n            :speed=\"styling.speed\"\r\n            :bg=\"styling.bgcolor\"\r\n            :objectbg=\"styling.objectbg\"\r\n            :opacity=\"styling.opacity\"\r\n            :name=\"selected\"\r\n            :disableScrolling=\"styling.disableScrolling\"></loader>\r\n    <div class=\"card\">\r\n      <div class=\"flex-container\">\r\n        <h2 style=\"margin-left: 10px; line-height: 40px\">Category List</h2>\r\n        <router-link to=\"add_category\" v-if=\"user_role_id == 1\">\r\n          <button type=\"button\" class=\"btn\">\r\n            <span class=\"material-icons-sharp add\" style=\"font-size: 11px\"\r\n              >add</span\r\n            >Add New\r\n          </button>\r\n        </router-link>\r\n      </div>\r\n\r\n      <div class=\"flex-container\">\r\n        <div class=\"flex-item\">\r\n          Show:\r\n          <select\r\n            name=\"cars\"\r\n            class=\"entries_count\"\r\n            id=\"cars\"\r\n            style=\"appearance: auto\"\r\n            v-model=\"tableData.length\"\r\n            @change=\"getAllCategory()\"\r\n          >\r\n            <option\r\n              v-for=\"(records, index) in perPage\"\r\n              :key=\"index\"\r\n              :value=\"records\"\r\n            >\r\n              {{ records }}\r\n            </option>\r\n          </select>\r\n          records per page.\r\n        </div>\r\n\r\n        <div class=\"flex-item\">\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"tableData.search\"\r\n            @input=\"getAllCategory()\"\r\n            placeholder=\"Search here\"\r\n            class=\"search\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div style=\"padding: 10px 10px; overflow-x: auto\">\r\n        <datatable\r\n          :columns=\"columns\"\r\n          :sortKey=\"sortKey\"\r\n          :sortOrders=\"sortOrders\"\r\n          @sort=\"sortBy\"\r\n        >\r\n          <tbody>\r\n            <tr\r\n              v-show=\"categories.length\"\r\n              v-for=\"(category) in categories\"\r\n              :key=\"category.id\"\r\n            >\r\n              <!-- <td data-label=\"#\" style=\"text-align: center\">\r\n                {{ index++ }}\r\n              </td> -->\r\n              <td data-label=\"Category Type\" style=\"text-align: center\">\r\n                {{ category.name }}\r\n              </td>\r\n              <td data-label=\"Description\" style=\"text-align: center\">\r\n               <router-link :to=\"`/dashboard/category/description/${category.id}`\">See Details\r\n                <span\r\n                      class=\"material-icons-sharp add\"\r\n                      style=\"font-size: 8px\"\r\n                      >arrow_forward</span>\r\n                    </router-link> \r\n              </td>\r\n              <td\r\n                v-if=\"user_role_id == 1\"\r\n                data-label=\"Actin\"\r\n                style=\"text-align: center\"\r\n              >\r\n                <router-link :to=\"`/dashboard/edit_category/${category.id}`\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"actio-button-margin edit\"\r\n                    title=\"Edit Category\"\r\n                  >\r\n                    <span\r\n                      class=\"material-icons-sharp add\"\r\n                      style=\"font-size: 11px\"\r\n                      >edit</span\r\n                    >\r\n                  </button>\r\n                </router-link>\r\n                <button\r\n                  title=\"Delete Category\"\r\n                  type=\"button\"\r\n                  class=\"actio-button-margin delete\"\r\n                  v-on:click=\"confirmDelete(category)\"\r\n                >\r\n                  <span class=\"material-icons-sharp add\" style=\"font-size: 11px\"\r\n                    >delete</span\r\n                  >\r\n                </button>\r\n              </td>\r\n              <td data-label=\"Actin\" style=\"text-align: center\" v-else>--</td>\r\n            </tr>\r\n            <tr v-show=\"!categories.length\">\r\n              <td colspan=\"7\">No Data Found</td>\r\n            </tr>\r\n          </tbody>\r\n        </datatable>\r\n      </div>\r\n\r\n      <div>\r\n        <div class=\"flex-container-pagination\" style=\"padding-right: 10px\">\r\n          <div class=\"flex-item\">\r\n            Showing {{ pagination.from }} to {{ pagination.to }} of\r\n            {{ pagination.total }} records\r\n          </div>\r\n          <div style=\"display: flex; justify-content: flex-end\">\r\n            <pagination\r\n              :pagination.sync=\"pagination\"\r\n              :offset=\"5\"\r\n              @paginate=\"getAllCategory()\"\r\n            ></pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DataTable from \"../../../components/datatable/Datatable\";\r\nimport Pagination from \"../../../components/datatable/Pagination.vue\";\r\n\r\nimport { mapState } from \"vuex\";\r\n\r\nimport { http } from \"../../../service/http_service\";\r\n\r\nexport default {\r\n  name: \"InterportCategory\",\r\n  title: \"InterPort - Category\",\r\n\r\n  components: {\r\n    datatable: DataTable,\r\n    pagination: Pagination,\r\n  },\r\n\r\n  data() {\r\n    let sortOrders = {};\r\n    let columns = [\r\n      { label: \"Category Type\", name: \"name\" },\r\n      { label: \"Description\", name: \"description\" },\r\n      { label: \"Action\", name: \"action\" },\r\n    ];\r\n    columns.forEach((column) => {\r\n      sortOrders[column.name] = -1;\r\n    });\r\n\r\n    return {\r\n      categories: [],\r\n      columns: columns,\r\n      sortKey: \"id\",\r\n      sortOrders: sortOrders,\r\n      perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\r\n      tableData: {\r\n        draw: 0,\r\n        length: 10,\r\n        search: \"\",\r\n        column: 0,\r\n        dir: \"desc\",\r\n      },\r\n      pagination: {\r\n        last_page: \"\",\r\n        current_page: 1,\r\n        total: \"\",\r\n        last_page_url: \"\",\r\n        next_page_url: \"\",\r\n        prev_page_url: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n      },\r\n      filterCategoryData: {\r\n        category_id: \"\",\r\n      },\r\n      user_role: JSON.parse(localStorage.getItem(\"user_role\")),\r\n      user_role_id: JSON.parse(localStorage.getItem(\"user_role_id\")),\r\n      selected: '',\r\n      value: 2,\r\n      styling: {\r\n        objectcolor: '#ff9633',\r\n        animationcolor: '#ffffff',\r\n        animationcolor2: '#17fd3d',\r\n        objectbg: '#999793',\r\n        opacity: 80,\r\n        bgcolor: '#343a40',\r\n        size: 5,\r\n        speed: 2,\r\n        disableScrolling: true,\r\n      },\r\n      code: ``,\r\n      flag: false\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      message: (state) => state.category.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getAllCategory();\r\n    this.flag=true;\r\n  },\r\n\r\n  methods: {\r\n    loader(loader) {\r\n      this.selected=loader;\r\n      this.code=`<loader object=\"${this.styling.objectcolor}\" color1=\"${this.styling.animationcolor}\" color2=\"${this.styling.animationcolor2}\" size=\"${this.styling.size}\" speed=\"${this.styling.speed}\" bg=\"${this.styling.bgcolor}\" objectbg=\"${this.styling.objectbg}\" opacity=\"${this.styling.opacity}\" disableScrolling=\"${this.styling.disableScrolling}\" name=\"${this.selected}\"></loader>`\r\n      const body = document.getElementsByTagName(\"html\")[0];\r\n      body.classList.add(\"overflow-hidden\");\r\n      setTimeout(() => {\r\n        this.selected='';\r\n        const body = document.getElementsByTagName(\"html\")[0];\r\n        body.classList.remove(\"overflow-hidden\");\r\n      }, this.value*1000);\r\n    },\r\n\r\n    getAllCategory() {\r\n      this.tableData.draw++;\r\n      let params = new URLSearchParams();\r\n      params.append(\"page\", this.pagination.current_page);\r\n      params.append(\"draw\", this.tableData.draw);\r\n      params.append(\"length\", this.tableData.length);\r\n      params.append(\"search\", this.tableData.search);\r\n      params.append(\"column\", this.tableData.column);\r\n      params.append(\"dir\", this.tableData.dir);\r\n\r\n      return http()\r\n        .get(\"v1/category/getData?\" + params)\r\n        .then((response) => {\r\n          this.loader('circular');\r\n          this.categories = response.data.data.data;\r\n          this.pagination = response.data.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    sortBy(key) {\r\n      this.sortKey = key;\r\n      this.sortOrders[key] = this.sortOrders[key] * -1;\r\n      this.tableData.column = this.getIndex(this.columns, \"name\", key);\r\n      this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\r\n      this.getAllCategory();\r\n    },\r\n\r\n    getIndex(array, key, value) {\r\n      return array.findIndex((i) => i[key] == value);\r\n    },\r\n    confirmDelete(category_details) {\r\n      let category_id = category_details.id;\r\n      this.$swal\r\n        .fire({\r\n          title: \"Are you sure?\",\r\n          text: \"You won't be able to revert this!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, delete it!\",\r\n        })\r\n        .then((result) => {\r\n          if (result.isConfirmed) {\r\n            console.log(category_id);\r\n            this.deleteCategory(category_id);\r\n          }\r\n        });\r\n    },\r\n    deleteCategory: async function (id) {\r\n      // let id = role.id;\r\n\r\n      try {\r\n        await this.$store.dispatch(\"category/delete_category\", id).then(() => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: this.message,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n\r\n          this.getAllCategory(id);\r\n        });\r\n      } catch (e) {\r\n        console.log(e);\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#category {\r\n  padding: 0px 5px 0px 5px;\r\n  margin: 0px 15px 0px 15px;\r\n}\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 5px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: rgb(0, 0, 170);\r\n}\r\n.search {\r\n  padding: 10px 20px;\r\n  outline: none;\r\n  border: 1px solid #ddd;\r\n  /* border-radius: 6px; */\r\n  margin-right: 0;\r\n}\r\ninput[type=\"text\"] {\r\n  width: 97%;\r\n}\r\nh1 {\r\n  font-size: 1.3rem;\r\n}\r\n.btn:hover {\r\n  background-color:  #008CBA;\r\n}\r\n.btn {\r\n  background-color: #1367A2;\r\n    padding: 8px 12px;\r\n    border-radius: 5px;\r\n    color: #fff;\r\n    outline: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    margin-left: -30%;\r\n    background-color:  #008CBA;\r\n    height: 38px;\r\n}\r\nselect {\r\n  height: 30px\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}