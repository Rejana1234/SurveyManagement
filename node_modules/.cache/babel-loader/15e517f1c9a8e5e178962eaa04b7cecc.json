{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AddSurveyor from \"@/views/admin/surveyor/AddSurveyor.vue\";\nimport { mapActions, mapState } from \"vuex\";\nimport vueSelect from \"vue-select\";\nimport \"vue-select/dist/vue-select.css\";\nexport default {\n  name: \"AddAppointSurveyor\",\n  components: {\n    vueSelect,\n    AddSurveyor\n  },\n  props: [\"work_order_id\"],\n  // props: [\"work_order_id\"],\n  data: function () {\n    return {\n      options: [],\n      showModal: false,\n      count: 1,\n      id: this.$route.params.id,\n      appointSurveyorData: {\n        surveyor_id: \"\",\n        start_date: \"\",\n        end_date: \"\"\n      },\n      surveyorData: {\n        // department_id: \"\",\n        department_name: \"\",\n        username: \"\",\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        address: \"\",\n        position: \"\",\n        fax: \"\",\n        loi: \"\",\n        nid: \"\",\n        dob: \"\",\n        image: \"\",\n        vacine_card: \"\"\n      },\n      error: {},\n      preview: null,\n      preview_vc_image: null,\n      errors: {},\n      token: \"\"\n    };\n  },\n  computed: { ...mapState({\n      surveyors: state => state.surveyors.surveyors,\n      message: state => state.appoint_surveyor.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllSurveyor();\n  },\n\n  methods: { ...mapActions({\n      getAllSurveyor: \"surveyors/get_all_surveyor\"\n    }),\n\n    openModal() {\n      this.showModal = true;\n      const body = document.getElementsByTagName(\"html\")[0];\n      body.classList.add(\"overflow-hidden\");\n    },\n\n    back() {\n      this.$router.go(-1);\n    },\n\n    closeModal() {\n      this.showModal = false;\n      const body = document.getElementsByTagName(\"html\")[0];\n      body.classList.remove(\"overflow-hidden\");\n    },\n\n    addNewRow: function () {\n      this.count++;\n    },\n    deleteRow: function () {\n      this.count--;\n    },\n    addAppointedSurvey: async function () {\n      try {\n        let formData = new FormData(); // let id = this.$route.id;\n\n        formData.append(\"surveyor_id\", this.appointSurveyorData.surveyor_id);\n        formData.append(\"survey_id\", this.$route.params.id);\n        formData.append(\"start_date\", this.appointSurveyorData.start_date);\n        formData.append(\"end_date\", this.appointSurveyorData.end_date);\n        await this.$store.dispatch(\"appoint_surveyor/add_appointed_surveyor\", formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.appointSurveyorData = {};\n          this.$router.go(-1);\n        });\n      } catch (e) {\n        console.log(e.response.data.message);\n        this.$swal.fire({\n          title: e.response.data.message,\n          showConfirmButton: false,\n          icon: \"warning\",\n          showCancelButton: true,\n          cancelButtonColor: \"#d33\"\n        });\n      }\n    },\n    previewImage: function (event) {\n      let input = event.target;\n\n      if (input.files) {\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          this.preview = e.target.result;\n        };\n\n        this.surveyorData.image = input.files[0];\n        reader.readAsDataURL(input.files[0]);\n      }\n    },\n    previewVcImage: function () {\n      let input = event.target;\n\n      if (input.files) {\n        let reader = new FileReader();\n\n        reader.onload = e => {\n          this.preview_vc_image = e.target.result;\n        };\n\n        this.surveyorData.vacine_card = input.files[0];\n        reader.readAsDataURL(input.files[0]);\n      }\n    },\n    addSurveyor: async function () {\n      try {\n        let formData = new FormData(); // formData.append(\"department_id\", this.surveyorData.department_id);\n\n        formData.append(\"department_name\", this.surveyorData.department_name);\n        formData.append(\"username\", this.surveyorData.username);\n        formData.append(\"name\", this.surveyorData.name);\n        formData.append(\"email\", this.surveyorData.email);\n        formData.append(\"phone\", this.surveyorData.phone);\n        formData.append(\"password\", this.surveyorData.password);\n        formData.append(\"address\", this.surveyorData.address);\n        formData.append(\"position\", this.surveyorData.position);\n        formData.append(\"fax\", this.surveyorData.fax);\n        formData.append(\"loi\", this.surveyorData.loi);\n        formData.append(\"nid\", this.surveyorData.nid);\n        formData.append(\"dob\", this.surveyorData.dob);\n        formData.append(\"image\", this.surveyorData.image);\n        formData.append(\"vacine_card\", this.surveyorData.vacine_card);\n        await this.$store.dispatch(\"surveyors/add_surveyor\", formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.surveyorData = {};\n          this.$router.go(0);\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AAEA;EACAA,0BADA;EAEAC;IACAC,SADA;IAEAC;EAFA,CAFA;EAMAC,wBANA;EAOA;EACAC;IACA;MACAC,WADA;MAEAC,gBAFA;MAGAC,QAHA;MAIAC,yBAJA;MAKAC;QACAC,eADA;QAEAC,cAFA;QAGAC;MAHA,CALA;MAUAC;QACA;QACAC,mBAFA;QAGAC,YAHA;QAIAhB,QAJA;QAKAiB,SALA;QAMAC,SANA;QAOAC,YAPA;QAQAC,WARA;QASAC,YATA;QAUAC,OAVA;QAWAC,OAXA;QAYAC,OAZA;QAaAC,OAbA;QAcAC,SAdA;QAeAC;MAfA,CAVA;MA2BAC,SA3BA;MA4BAC,aA5BA;MA6BAC,sBA7BA;MA8BAC,UA9BA;MA+BAC;IA/BA;EAiCA,CA1CA;EA2CAC,YACA;MACAC,6CADA;MAEAC;IAFA;EADA,CA3CA;;EAkDAC;IACA;EACA,CApDA;;EAsDAC,WACA;MACAC;IADA,EADA;;IAKAC;MACA;MACA;MAEAC;IACA,CAVA;;IAWAC;MACA;IACA,CAbA;;IAcAC;MACA;MACA;MAEAF;IACA,CAnBA;;IAqBAG;MACA;IACA,CAvBA;IAyBAC;MACA;IACA,CA3BA;IA6BAC;MACA;QACA,8BADA,CAEA;;QACAC;QACAA;QACAA;QACAA;QAEA,gFACAC,IADA,CACA;UACA;YACAC,WADA;YAEA3B,mBAFA;YAGA4B,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;UACA;QACA,CAbA;MAcA,CAtBA,CAsBA;QAEAC;QAEA,WACAC,IADA,CACA;UACAJ,8BADA;UAEAC,wBAFA;UAGAF,eAHA;UAIAM,sBAJA;UAKAC;QALA,CADA;MASA;IACA,CAlEA;IAoEAC;MACA;;MACA;QACA;;QACAC;UACA;QACA,CAFA;;QAGA;QACAA;MACA;IACA,CA9EA;IAgFAC;MACA;;MACA;QACA;;QACAD;UACA;QACA,CAFA;;QAGA;QACAA;MACA;IACA,CA1FA;IA4FAE;MACA;QACA,8BADA,CAGA;;QACAd;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QAEA,kBACAe,QADA,CACA,wBADA,EACAf,QADA,EAEAC,IAFA,CAEA;UACA;YACAC,WADA;YAEA3B,mBAFA;YAGA4B,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;UACA;QACA,CAdA;MAeA,CAlCA,CAkCA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAH,aADA;cAEAa,YAFA;cAGAZ;YAHA;YAKA;QAVA;MAYA;IACA;EA7IA;AAtDA","names":["name","components","vueSelect","AddSurveyor","props","data","options","showModal","count","id","appointSurveyorData","surveyor_id","start_date","end_date","surveyorData","department_name","username","email","phone","password","address","position","fax","loi","nid","dob","image","vacine_card","error","preview","preview_vc_image","errors","token","computed","surveyors","message","mounted","methods","getAllSurveyor","openModal","body","back","closeModal","addNewRow","deleteRow","addAppointedSurvey","formData","then","toast","icon","title","showConfirmButton","timer","console","fire","showCancelButton","cancelButtonColor","previewImage","reader","previewVcImage","addSurveyor","dispatch","text"],"sourceRoot":"src/views/admin/surveyor_appointment","sources":["AddAppointSurveyor.vue"],"sourcesContent":["<template>\r\n  <div id=\"add_appoint_surveyor\">\r\n    <div class=\"vcard\">\r\n      <form class=\"AddVessels\" v-on:submit.prevent=\"addAppointedSurvey\">\r\n        <h2>Appoint  Surveyor</h2>\r\n        <div\r\n          class=\"flex-container\"\r\n          style=\"justify-content: flex-end; margin-top: 10px\"\r\n        >\r\n          <button type=\"button\" class=\"add_new\" @click=\"openModal()\">\r\n            <span class=\"material-icons-sharp add\" style=\"font-size: 11px\"\r\n              >add</span\r\n            >\r\n            Add New Surveyor\r\n          </button>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-25\">\r\n            <label for=\"surveyor_id\">Surveyor Name</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <vueSelect\r\n              name=\"surveyor_id\"\r\n              id=\"surveyor_id\"\r\n              class=\"box\"\r\n              label=\"name\"\r\n              multiple\r\n              placeholder=\"Select Marine or Staff Surveyor\"\r\n              v-model=\"appointSurveyorData.surveyor_id\"\r\n              :options=\"this.surveyors\"\r\n              :reduce=\"(option) => option.id\"\r\n              :searchable=\"true\"\r\n            >\r\n              <template #option=\"{ name, type_name, phone }\">\r\n                <h3 style=\"margin: 0\">\r\n                  {{ name }} ({{ type_name }}) - {{ phone }}\r\n                </h3>\r\n              </template>\r\n              <template #selected-option=\"{ name, type_name }\">\r\n                <div style=\"display: flex; align-items: baseline\">\r\n                  <strong>{{ name }}</strong>\r\n                  <em style=\"margin-left: 0.5rem\">{{ type_name }}</em>\r\n                </div>\r\n              </template>\r\n            </vueSelect>\r\n\r\n            <span v-if=\"errors.surveyor_id\" class=\"danger_text\">{{\r\n              errors.surveyor_id[0]\r\n            }}</span>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-25\">\r\n            <label for=\"start_date\">Start_date</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"date\"\r\n              name=\"start_date\"\r\n              accept=\"image/png, image/jpeg\"\r\n              v-model=\"appointSurveyorData.start_date\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-25\">\r\n            <label for=\"start_date\">End_date</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"date\"\r\n              name=\"end_date\"\r\n              accept=\"image/png, image/jpeg\"\r\n              v-model=\"appointSurveyorData.end_date\"\r\n            />\r\n          </div>\r\n        </div> -->\r\n        <div class=\"row\">\r\n          <input type=\"submit\" value=\"Save \" />\r\n            <input type=\"button\" value=\"Back\" @click=\"back()\" class=\"back-btn\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"overlay\" v-if=\"showModal\" @click=\"closeModal()\"></div>\r\n\r\n    <div class=\"modal\" v-show=\"showModal\">\r\n      <div id=\"app\" class=\"modal-vue\">\r\n        <!-- button show -->\r\n        <!-- overlay -->\r\n        <div class=\"overlay\"></div>\r\n        <!-- modal -->\r\n        <div class=\"modal\">\r\n          <button class=\"close\" @click=\"closeModal()\">x</button>\r\n          <!--<AddSurveyor />-->\r\n          <AddSurveyor />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AddSurveyor from \"@/views/admin/surveyor/AddSurveyor.vue\";\r\nimport { mapActions, mapState } from \"vuex\";\r\nimport vueSelect from \"vue-select\";\r\nimport \"vue-select/dist/vue-select.css\";\r\n\r\nexport default {\r\n  name: \"AddAppointSurveyor\",\r\n  components: {\r\n    vueSelect,\r\n    AddSurveyor,\r\n  },\r\n  props:[\"work_order_id\"],\r\n  // props: [\"work_order_id\"],\r\n  data: function () {\r\n    return {\r\n      options: [],\r\n      showModal: false,\r\n      count: 1,\r\n      id: this.$route.params.id,\r\n      appointSurveyorData: {\r\n        surveyor_id: \"\",\r\n        start_date: \"\",\r\n        end_date: \"\",\r\n      },\r\n      surveyorData: {\r\n        // department_id: \"\",\r\n        department_name: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        password: \"\",\r\n        address: \"\",\r\n        position: \"\",\r\n        fax: \"\",\r\n        loi: \"\",\r\n        nid: \"\",\r\n        dob: \"\",\r\n        image: \"\",\r\n        vacine_card: \"\",\r\n      },\r\n      error: {},\r\n      preview: null,\r\n      preview_vc_image: null,\r\n      errors: {},\r\n      token: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      surveyors: (state) => state.surveyors.surveyors,\r\n      message: (state) => state.appoint_surveyor.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getAllSurveyor();\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      getAllSurveyor: \"surveyors/get_all_surveyor\",\r\n    }),\r\n\r\n    openModal() {\r\n      this.showModal = true;\r\n      const body = document.getElementsByTagName(\"html\")[0];\r\n\r\n      body.classList.add(\"overflow-hidden\");\r\n    },\r\n    back() {\r\n      this.$router.go(-1);\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n      const body = document.getElementsByTagName(\"html\")[0];\r\n\r\n      body.classList.remove(\"overflow-hidden\");\r\n    },\r\n\r\n    addNewRow: function () {\r\n      this.count++;\r\n    },\r\n\r\n    deleteRow: function () {\r\n      this.count--;\r\n    },\r\n\r\n    addAppointedSurvey: async function () {\r\n      try {\r\n        let formData = new FormData();\r\n        // let id = this.$route.id;\r\n        formData.append(\"surveyor_id\", this.appointSurveyorData.surveyor_id);\r\n        formData.append(\"survey_id\", this.$route.params.id);\r\n        formData.append(\"start_date\", this.appointSurveyorData.start_date);\r\n        formData.append(\"end_date\", this.appointSurveyorData.end_date);\r\n\r\n        await this.$store.dispatch(\"appoint_surveyor/add_appointed_surveyor\", formData)\r\n          .then(() => {\r\n            this.$swal.fire({\r\n              toast: true,\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: this.message,\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n\r\n            this.appointSurveyorData = {};\r\n            this.$router.go(-1);\r\n          });\r\n      } catch (e) {\r\n        \r\n        console.log(e.response.data.message);\r\n\r\n        this.$swal\r\n        .fire({\r\n          title: e.response.data.message,\r\n          showConfirmButton: false,\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          cancelButtonColor: \"#d33\",\r\n        })\r\n        \r\n      }\r\n    },\r\n\r\n    previewImage: function (event) {\r\n      let input = event.target;\r\n      if (input.files) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          this.preview = e.target.result;\r\n        };\r\n        this.surveyorData.image = input.files[0];\r\n        reader.readAsDataURL(input.files[0]);\r\n      }\r\n    },\r\n\r\n    previewVcImage: function () {\r\n      let input = event.target;\r\n      if (input.files) {\r\n        let reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          this.preview_vc_image = e.target.result;\r\n        };\r\n        this.surveyorData.vacine_card = input.files[0];\r\n        reader.readAsDataURL(input.files[0]);\r\n      }\r\n    },\r\n\r\n    addSurveyor: async function () {\r\n      try {\r\n        let formData = new FormData();\r\n\r\n        // formData.append(\"department_id\", this.surveyorData.department_id);\r\n        formData.append(\"department_name\", this.surveyorData.department_name);\r\n        formData.append(\"username\", this.surveyorData.username);\r\n        formData.append(\"name\", this.surveyorData.name);\r\n        formData.append(\"email\", this.surveyorData.email);\r\n        formData.append(\"phone\", this.surveyorData.phone);\r\n        formData.append(\"password\", this.surveyorData.password);\r\n        formData.append(\"address\", this.surveyorData.address);\r\n        formData.append(\"position\", this.surveyorData.position);\r\n        formData.append(\"fax\", this.surveyorData.fax);\r\n        formData.append(\"loi\", this.surveyorData.loi);\r\n        formData.append(\"nid\", this.surveyorData.nid);\r\n        formData.append(\"dob\", this.surveyorData.dob);\r\n        formData.append(\"image\", this.surveyorData.image);\r\n        formData.append(\"vacine_card\", this.surveyorData.vacine_card);\r\n\r\n        await this.$store\r\n          .dispatch(\"surveyors/add_surveyor\", formData)\r\n          .then(() => {\r\n            this.$swal.fire({\r\n              toast: true,\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: this.message,\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n\r\n            this.surveyorData = {};\r\n            this.$router.go(0);\r\n          });\r\n      } catch (e) {\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#add_appoint_surveyor {\r\n  background: white;\r\n  padding: var(--card-padding);\r\n  border-radius: 1rem;\r\n  height: fit-content;\r\n  width: 100%;\r\n  box-shadow: rgb(226, 225, 225);\r\n  transition: all 300ms ease;\r\n  margin-top: 1%;\r\n}\r\n\r\nselect {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n.others {\r\n  margin-left: 0.5%;\r\n  margin-top: 0.5%;\r\n}\r\n.modal-vue .overlay {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.modal-vue .modal {\r\n  position: absolute;\r\n  width: 50%;\r\n  height: 96%;\r\n  z-index: 9999;\r\n  margin: -200px auto;\r\n  padding: 20px 30px;\r\n  background-color: #fff;\r\n  left: 0;\r\n  right: 0;\r\n  margin-top: -18%;\r\n  overflow: auto;\r\n}\r\n\r\n.modal-vue .close {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background-color: red;\r\n}\r\n\r\n.modal {\r\n  margin-right: 10%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}