{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapState } from \"vuex\";\nimport { http } from \"../../../service/http_service\";\nexport default {\n  name: \"AddSurvey\",\n\n  data() {\n    return {\n      invoiceData: {\n        invoice_no: \"\",\n        invoice_type: \"\",\n        raised_by: \"\",\n        uploaded_by: \"\",\n        invoice_date: \"\",\n        amount: \"\",\n        currency: \"\",\n        payment_receiving_date: \"\",\n        notes: \"\",\n        invoice_file: null,\n        time_log_file: null,\n        preview_invoice_file: null,\n        preview_time_log_file: null\n      },\n      errors: {}\n    };\n  },\n\n  computed: { ...mapState({\n      invoice: state => state.invoice.invoice,\n      message: state => state.invoice.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllW_Order();\n    this.getAllCategory(); // this.invoiceCurrency();\n  },\n\n  methods: { ...mapActions({\n      getAllW_Order: \"w_order/get_all_w_order\",\n      getAllCategory: \"category/get_all_category\"\n    }),\n\n    previewInFFile() {\n      this.invoice_file = this.$refs.InFfile.files[0];\n    },\n\n    previewTLFFile() {\n      this.time_log_file = this.$refs.TLFFile.files[0];\n    },\n\n    invoiceCurrency: async function () {\n      return http().get(\"v1/currency_codes\").then(response => {\n        this.currency_codes = response.data.currency_codes;\n        console.log(this.currency_codes);\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    addInvoice: async function () {\n      try {\n        let formData = new FormData();\n        formData.append(\"work_order_id\", this.$route.params.id);\n        formData.append(\"invoice_no\", this.invoiceData.invoice_no);\n        formData.append(\"invoice_type\", this.invoiceData.invoice_type);\n        formData.append(\"raised_by\", this.invoiceData.raised_by);\n        formData.append(\"uploaded_by\", this.invoiceData.uploaded_by);\n        formData.append(\"invoice_date\", this.invoiceData.invoice_date);\n        formData.append(\"invoice_no\", this.invoiceData.invoice_no);\n        formData.append(\"amount\", this.invoiceData.amount);\n        formData.append(\"currency\", this.invoiceData.currency);\n        formData.append(\"payment_receiving_date\", this.invoiceData.payment_receiving_date);\n        formData.append(\"notes\", this.invoiceData.notes);\n        formData.append(\"invoice_file\", this.invoice_file);\n        formData.append(\"time_log_file\", this.time_log_file);\n        await this.$store.dispatch(\"invoice/add_invoice\", formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.surveyData = {};\n          this.$router.go(0);\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;EACAA,iBADA;;EAGAC;IACA;MACAC;QACAC,cADA;QAEAC,gBAFA;QAGAC,aAHA;QAIAC,eAJA;QAKAC,gBALA;QAMAC,UANA;QAOAC,YAPA;QAQAC,0BARA;QASAC,SATA;QAUAC,kBAVA;QAWAC,mBAXA;QAYAC,0BAZA;QAaAC;MAbA,CADA;MAgBAC;IAhBA;EAkBA,CAtBA;;EAwBAC,YACA;MACAC,uCADA;MAEAC;IAFA;EADA,CAxBA;;EA+BAC;IACA;IACA,sBAFA,CAGA;EACA,CAnCA;;EAqCAC,WACA;MACAC,wCADA;MAEAC;IAFA,EADA;;IAKAC;MACA;IACA,CAPA;;IAQAC;MACA;IACA,CAVA;;IAYAC;MACA,cACAC,GADA,CACA,mBADA,EAEAC,IAFA,CAEAC;QACA;QACAC;MACA,CALA,EAMAC,KANA,CAMAC;QACAF;MACA,CARA;IASA,CAtBA;IAwBAG;MACA;QACA;QACAC;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA,gBACA,wBADA,EAEA,uCAFA;QAIAA;QACAA;QACAA;QACA,4DACAN,IADA,CACA;UACA;YACAO,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;UACA;QACA,CAbA;MAcA,CAhCA,CAgCA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAH,aADA;cAEAI,YAFA;cAGAH;YAHA;YAKA;QAVA;MAYA;IACA;EAvEA;AArCA","names":["name","data","invoiceData","invoice_no","invoice_type","raised_by","uploaded_by","invoice_date","amount","currency","payment_receiving_date","notes","invoice_file","time_log_file","preview_invoice_file","preview_time_log_file","errors","computed","invoice","message","mounted","methods","getAllW_Order","getAllCategory","previewInFFile","previewTLFFile","invoiceCurrency","get","then","response","console","catch","error","addInvoice","formData","toast","position","icon","title","showConfirmButton","timer","text"],"sourceRoot":"src/views/admin/invoice","sources":["AddInvoice.vue"],"sourcesContent":["<template>\r\n  <div id=\"add_invoice\">\r\n    <div class=\"dcard\">\r\n      <form class=\"AddInvoice-form\" v-on:submit.prevent=\"addInvoice\">\r\n        <h2>Add Invoice</h2>\r\n        <div class=\"AddInvoice\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"note\">Raised By</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"raised_by\"\r\n                v-model=\"invoiceData.raised_by\"\r\n              />\r\n              <br />\r\n              <span v-if=\"errors.raised_by\" class=\"danger_text\">{{\r\n                errors.raised_by[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"note\">Uploaded By</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"uploaded_by\"\r\n                v-model=\"invoiceData.uploaded_by\"\r\n              />\r\n              <br />\r\n              <span v-if=\"errors.uploaded_by\" class=\"danger_text\">{{\r\n                errors.uploaded_by[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label>Invoice Type</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <select\r\n                id=\"invoice_type\"\r\n                name=\"invoice_type\"\r\n                v-model=\"invoiceData.invoice_type\"\r\n              >\r\n                <option value=\"\">Select Invoice</option>\r\n                <option>Interin</option>\r\n                <option>Final</option>\r\n              </select>\r\n              <span v-if=\"errors.invoice_type\" class=\"danger_text\">{{\r\n                errors.invoice_type[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"note\">Date of Invoice</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"invoice_date\"\r\n                v-model=\"invoiceData.invoice_date\"\r\n              />\r\n              <br />\r\n              <span v-if=\"errors.invoice_date\" class=\"danger_text\">{{\r\n                errors.invoice_date[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"note\">Invoice No.</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"invoice_no\"\r\n                v-model=\"invoiceData.invoice_no\"\r\n              />\r\n              <br />\r\n              <span v-if=\"errors.invoice_no\" class=\"danger_text\">{{\r\n                errors.invoice_no[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"note\">Amount</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input type=\"number\" name=\"amount\" v-model=\"invoiceData.amount\" />\r\n              <br />\r\n              <span v-if=\"errors.amount\" class=\"danger_text\">{{\r\n                errors.amount[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"currency\">Currency</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <select\r\n                id=\"invoice_type\"\r\n                name=\"invoice_type\"\r\n                v-model=\"invoiceData.currency\"\r\n              >\r\n                <option value=\"\">Select Currency</option>\r\n                <!-- <option :value=\"invoice.id\" v-for=\"invoice in invoiceData\" :key=\"invoice.id\">\r\n                  {{ invoice.name }}\r\n                </option> -->\r\n                <option value=\"USD\">USD</option>\r\n                <option value=\"BDT\">BDT</option>\r\n                <option value=\"EUR\" >Euro</option>\r\n                <option value=\"SGD\">Sigapure Dollar</option>\r\n              </select>\r\n              <span v-if=\"errors.currency\" class=\"danger_text\">{{\r\n                errors.currency[0]\r\n              }}</span>\r\n            </div>\r\n            <!-- <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"currency\"\r\n                v-model=\"invoiceData.currency\"\r\n              />\r\n              <br />\r\n              <span v-if=\"errors.currency\" class=\"danger_text\">{{\r\n                errors.currency[0]\r\n              }}</span>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"date\">Payment Recieving Date</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"payment_receiving_date\"\r\n                v-model=\"invoiceData.payment_receiving_date\"\r\n              />\r\n              <br />\r\n              <span v-if=\"errors.payment_receiving_date\" class=\"danger_text\">{{\r\n                errors.payment_receiving_date[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"note\">Notes</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input type=\"text\" name=\"notes\" v-model=\"invoiceData.notes\" />\r\n              <br />\r\n              <span v-if=\"errors.notes\" class=\"danger_text\">{{\r\n                errors.notes[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label>Attach Invoice File</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"file\"\r\n                name=\"invoice_file\"\r\n                id=\"invoice_file\"\r\n                ref=\"InFfile\"\r\n                @change=\"previewInFFile\"\r\n              />\r\n              <span v-if=\"errors.invoice_file\" class=\"danger_text\">{{\r\n                errors.invoice_file[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label>Attach Time Log File</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"file\"\r\n                @change=\"previewTLFFile\"\r\n                name=\"time_log_file\"\r\n                id=\"time_log_file\"\r\n                ref=\"TLFFile\"\r\n              />\r\n              <span v-if=\"errors.time_log_file\" class=\"danger_text\">{{\r\n                errors.time_log_file[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <br>\r\n          <input type=\"submit\" value=\"Save\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapActions, mapState } from \"vuex\";\r\nimport { http } from \"../../../service/http_service\";\r\nexport default {\r\n  name: \"AddSurvey\",\r\n\r\n  data() {\r\n    return {\r\n      invoiceData: {\r\n        invoice_no: \"\",\r\n        invoice_type: \"\",\r\n        raised_by: \"\",\r\n        uploaded_by: \"\",\r\n        invoice_date: \"\",\r\n        amount: \"\",\r\n        currency: \"\",\r\n        payment_receiving_date: \"\",\r\n        notes: \"\",\r\n        invoice_file: null,\r\n        time_log_file: null,\r\n        preview_invoice_file: null,\r\n        preview_time_log_file: null,\r\n      },\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      invoice: (state) => state.invoice.invoice,\r\n      message: (state) => state.invoice.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getAllW_Order();\r\n    this.getAllCategory();\r\n    // this.invoiceCurrency();\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      getAllW_Order: \"w_order/get_all_w_order\",\r\n      getAllCategory: \"category/get_all_category\",\r\n    }),\r\n    previewInFFile() {\r\n      this.invoice_file = this.$refs.InFfile.files[0];\r\n    },\r\n    previewTLFFile() {\r\n      this.time_log_file = this.$refs.TLFFile.files[0];\r\n    },\r\n\r\n    invoiceCurrency: async function() {\r\n      return http()\r\n        .get(\"v1/currency_codes\")\r\n        .then((response) => {\r\n        this.currency_codes= response.data.currency_codes\r\n        console.log(this.currency_codes)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    addInvoice: async function () {\r\n      try {\r\n        let formData = new FormData();\r\n        formData.append(\"work_order_id\", this.$route.params.id);\r\n        formData.append(\"invoice_no\", this.invoiceData.invoice_no);\r\n        formData.append(\"invoice_type\", this.invoiceData.invoice_type);\r\n        formData.append(\"raised_by\", this.invoiceData.raised_by);\r\n        formData.append(\"uploaded_by\", this.invoiceData.uploaded_by);\r\n        formData.append(\"invoice_date\", this.invoiceData.invoice_date);\r\n        formData.append(\"invoice_no\", this.invoiceData.invoice_no);\r\n        formData.append(\"amount\", this.invoiceData.amount);\r\n        formData.append(\"currency\", this.invoiceData.currency);\r\n        formData.append(\r\n          \"payment_receiving_date\",\r\n          this.invoiceData.payment_receiving_date\r\n        );\r\n        formData.append(\"notes\", this.invoiceData.notes);\r\n        formData.append(\"invoice_file\", this.invoice_file);\r\n        formData.append(\"time_log_file\", this.time_log_file);\r\n        await this.$store.dispatch(\"invoice/add_invoice\", formData)\r\n        .then(() => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: this.message,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n\r\n          this.surveyData = {};\r\n          this.$router.go(0);\r\n        });\r\n      } catch (e) {\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#add_invoice {\r\n\r\n  padding: 0px 5px 0px 5px;\r\n  margin: 0px 15px 0px 15px;\r\n  /* background: white;\r\n  padding: var(--card-padding);\r\n  border-radius: 1rem;\r\n  height: fit-content;\r\n  width: 100%;\r\n  box-shadow: rgb(226, 225, 225);\r\n  transition: all 300ms ease;\r\n  margin-top: 1%; */\r\n}\r\n.AddInvoice {\r\n  background: rgb(234, 234, 234);\r\n  padding: var(--card-padding);\r\n  border-radius: 1rem;\r\n  height: fit-content;\r\n  width: 100%;\r\n  box-shadow: rgb(234, 233, 233);\r\n  transition: all 300ms ease;\r\n  margin-top: 1%;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1.5rem;\r\n  margin-top: 1%;\r\n}\r\nselect {\r\n  width: 85%;\r\n  height: 40px;\r\n  box-shadow: 0 2px 1px 0 rgb(0 0 0 / 20%), 0 2px 15px 0 rgb(0 0 0 / 19%);\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\ninput[type=\"date\"],\r\ninput[type=\"text\"],\r\ninput[type=\"number\"]{\r\n  width: 85%;\r\n  height: 40px;\r\n}\r\n.modal-vue .modal[data-v-507a997b] {\r\n  position: absolute;\r\n  width: 50%;\r\n  z-index: 9999;\r\n  margin: -270px auto;\r\n  padding: 20px 30px;\r\n  background-color: #fff;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n/* Checkbox stylr */\r\n/* The container */\r\n.container {\r\n  display: block;\r\n  position: relative;\r\n  padding-left: 35px;\r\n  margin-bottom: 12px;\r\n  cursor: pointer;\r\n  font-size: 22px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n/* Hide the browser's default checkbox */\r\n.container input {\r\n  position: absolute;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  height: 0;\r\n  width: 0;\r\n}\r\n\r\n/* Create a custom checkbox */\r\n.checkmark {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: #eee;\r\n}\r\n\r\n/* On mouse-over, add a grey background color */\r\n.container:hover input ~ .checkmark {\r\n  background-color: #ccc;\r\n}\r\n\r\n/* When the checkbox is checked, add a blue background */\r\n.container input:checked ~ .checkmark {\r\n  background-color: #2196f3;\r\n}\r\n\r\n/* Create the checkmark/indicator (hidden when not checked) */\r\n.checkmark:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  display: none;\r\n}\r\n\r\n/* Show the checkmark when checked */\r\n.container input:checked ~ .checkmark:after {\r\n  display: block;\r\n}\r\n\r\n/* Style the checkmark/indicator */\r\n.container .checkmark:after {\r\n  left: 9px;\r\n  top: 5px;\r\n  width: 5px;\r\n  height: 10px;\r\n  border: solid white;\r\n  border-width: 0 3px 3px 0;\r\n  -webkit-transform: rotate(45deg);\r\n  -ms-transform: rotate(45deg);\r\n  transform: rotate(45deg);\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}