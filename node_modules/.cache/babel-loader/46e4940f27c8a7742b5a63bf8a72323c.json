{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataTable from \"../../../components/datatable/Datatable\";\nimport Pagination from \"../../../components/datatable/Pagination.vue\";\nimport { mapState } from \"vuex\";\nimport { http } from \"../../../service/http_service\";\nexport default {\n  name: \"InterportSurvey\",\n  components: {\n    datatable: DataTable,\n    pagination: Pagination\n  },\n  props: [\"work_order_id\"],\n\n  data() {\n    let sortOrders = {};\n    let columns = [// { label: \"#SL\", name: \"id\" },\n    {\n      label: \"#Ref\",\n      name: \"reference_no\"\n    }, {\n      label: \"Vessel Name\",\n      name: \"project_name\"\n    }, // { label: \"Start Date\", name: \"start_date\" },\n    // { label: \"End Date\", name: \"end_date\" },\n    {\n      label: \"Category\",\n      name: \"category_name\"\n    }, {\n      label: \"Surveyor Name\",\n      name: \"surveyor_name\"\n    }, {\n      label: \"Status\",\n      name: \"status\"\n    }, {\n      label: \"Action\",\n      name: \"action\"\n    }];\n    columns.forEach(column => {\n      sortOrders[column.name] = -1;\n    });\n    let apiUrl = this.$store.state.apiUrl;\n    return {\n      user_role: JSON.parse(localStorage.getItem(\"user_role\")),\n      user_role_id: JSON.parse(localStorage.getItem(\"user_role_id\")),\n      surveys: [],\n      columns: columns,\n      sortKey: \"id\",\n      sortOrders: sortOrders,\n      perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\n      tableData: {\n        draw: 0,\n        length: 10,\n        search: \"\",\n        column: 0,\n        dir: \"desc\"\n      },\n      pagination: {\n        last_page: \"\",\n        current_page: 1,\n        total: \"\",\n        last_page_url: \"\",\n        next_page_url: \"\",\n        prev_page_url: \"\",\n        from: \"\",\n        to: \"\"\n      },\n      filterWorkOrderSurveyData: {\n        survey_id: \"\"\n      },\n      report_page_url: \"http://localhost:8080/dashboard/report\",\n      download_survey_url: apiUrl + \"v1/surveys/download_survey/\",\n      active: false,\n      isopen: \"\",\n      isShowDrop1: false\n    };\n  },\n\n  computed: { ...mapState({\n      survey_appointment: state => state.survey.survey_appointment,\n      message: state => state.survey.success_message\n    })\n  },\n\n  mounted() {\n    this.getAllSurvey();\n  },\n\n  methods: {\n    toggleDropdown(index) {\n      let id = index;\n\n      if (id) {\n        this.isShowDrop1 = !this.isShowDrop1;\n      }\n    },\n\n    getAllSurvey() {\n      this.tableData.draw++;\n      let params = new URLSearchParams();\n      params.append(\"page\", this.pagination.current_page);\n      params.append(\"draw\", this.tableData.draw);\n      params.append(\"length\", this.tableData.length);\n      params.append(\"search\", this.tableData.search);\n      params.append(\"column\", this.tableData.column);\n      params.append(\"dir\", this.tableData.dir);\n      return http().get(\"v1/surveys/work_order_id/\" + this.$route.params.id + \"/getData?\" + params).then(response => {\n        this.surveys = response.data.data.data;\n        this.pagination = response.data.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n\n    sortBy(key) {\n      this.sortKey = key;\n      this.sortOrders[key] = this.sortOrders[key] * -1;\n      this.tableData.column = this.getIndex(this.columns, \"name\", key);\n      this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\n      this.getAllSurvey();\n    },\n\n    getIndex(array, key, value) {\n      return array.findIndex(i => i[key] == value);\n    },\n\n    confirmDelete(survey_details) {\n      let survey_id = survey_details.id;\n      this.$swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          console.log(survey_id);\n          this.deleteSurvey(survey_id);\n        }\n      });\n    },\n\n    deleteSurvey: async function (id) {\n      try {\n        await this.$store.dispatch(\"survey/delete_survey\", id).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getAllSurvey();\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;AAEA;AAEA;AAEA;EACAA,uBADA;EAGAC;IACAC,oBADA;IAEAC;EAFA,CAHA;EAQAC,wBARA;;EAUAC;IACA;IACA,eACA;IACA;MAAAC;MAAAN;IAAA,CAFA,EAGA;MAAAM;MAAAN;IAAA,CAHA,EAIA;IACA;IACA;MAAAM;MAAAN;IAAA,CANA,EAOA;MAAAM;MAAAN;IAAA,CAPA,EAQA;MAAAM;MAAAN;IAAA,CARA,EASA;MAAAM;MAAAN;IAAA,CATA;IAWAO;MACAC;IACA,CAFA;IAGA;IACA;MACAC,wDADA;MAEAC,8DAFA;MAGAC,WAHA;MAIAJ,gBAJA;MAKAK,aALA;MAMAJ,sBANA;MAOAK,8CAPA;MAQAC;QACAC,OADA;QAEAC,UAFA;QAGAC,UAHA;QAIAC,SAJA;QAKAC;MALA,CARA;MAeAhB;QACAiB,aADA;QAEAC,eAFA;QAGAC,SAHA;QAIAC,iBAJA;QAKAC,iBALA;QAMAC,iBANA;QAOAC,QAPA;QAQAC;MARA,CAfA;MAyBAC;QACAC;MADA,CAzBA;MA4BAC,yDA5BA;MA6BAC,2DA7BA;MA8BAC,aA9BA;MA+BAC,UA/BA;MAgCAC;IAhCA;EAkCA,CA7DA;;EA+DAC,YACA;MACAC,4DADA;MAEAC;IAFA;EADA,CA/DA;;EAsEAC;IACA;EACA,CAxEA;;EA0EAC;IACAC;MACA;;MACA;QACA;MACA;IACA,CANA;;IAOAC;MACA;MACA;MACAC;MACAA;MACAA;MACAA;MACAA;MACAA;MAEA,cACAC,GADA,CACA,0EADA,EAEAC,IAFA,CAEAC;QACA;QACA;MACA,CALA,EAMAC,KANA,CAMAC;QACAC;MACA,CARA;IASA,CA1BA;;IA4BAC;MACA;MACA;MACA;MACA;MACA;IACA,CAlCA;;IAoCAC;MACA;IACA,CAtCA;;IAwCAC;MACA;MACA,WACAC,IADA,CACA;QACAC,sBADA;QAEAC,yCAFA;QAGAC,eAHA;QAIAC,sBAJA;QAKAC,6BALA;QAMAC,yBANA;QAOAC;MAPA,CADA,EAUAf,IAVA,CAUAgB;QACA;UACAZ;UACA;QACA;MACA,CAfA;IAgBA,CA1DA;;IA4DAa;MACA;QACA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAR,eAHA;YAIAF,mBAJA;YAKAW,wBALA;YAMAC;UANA;UAQA;QACA,CAVA;MAWA,CAZA,CAYA;QACAjB;MACA;IACA;EA5EA;AA1EA","names":["name","components","datatable","pagination","props","data","label","columns","sortOrders","user_role","user_role_id","surveys","sortKey","perPage","tableData","draw","length","search","column","dir","last_page","current_page","total","last_page_url","next_page_url","prev_page_url","from","to","filterWorkOrderSurveyData","survey_id","report_page_url","download_survey_url","active","isopen","isShowDrop1","computed","survey_appointment","message","mounted","methods","toggleDropdown","getAllSurvey","params","get","then","response","catch","error","console","sortBy","getIndex","confirmDelete","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","deleteSurvey","toast","position","showConfirmButton","timer"],"sourceRoot":"src/views/admin/survey","sources":["WorkOrderSurvey.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <h2>Survey List</h2>\r\n    <!-- {{ survey_appointment }} -->\r\n    <div>\r\n      <div class=\"flex-container\">\r\n        <div class=\"flex-item\">\r\n          Show:\r\n          <select\r\n            name=\"cars\"\r\n            class=\"entries_count\"\r\n            id=\"cars\"\r\n            style=\"appearance: auto\"\r\n            v-model=\"tableData.length\"\r\n            @change=\"getAllSurvey()\"\r\n          >\r\n            <option v-for=\"(records, index) in perPage\" :key=\"index\" :value=\"records\">\r\n              {{ records }}\r\n            </option>\r\n          </select>\r\n          records per page.\r\n        </div>\r\n\r\n        <div class=\"flex-item\">\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"tableData.search\"\r\n            @input=\"getAllSurvey()\"\r\n            placeholder=\"Search here\"\r\n            class=\"search\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div style=\"padding: 10px 10px\">\r\n        <datatable :columns=\"columns\" :sortKey=\"sortKey\" :sortOrders=\"sortOrders\" @sort=\"sortBy\">\r\n          <tbody>\r\n            <tr v-show=\"surveys.length\" v-for=\"survey in surveys\" :key=\"survey.id\">\r\n              <!-- <td data-label=\"#SL\" style=\"text-align: center\">\r\n                {{ survey.id }}\r\n              </td> -->\r\n              <td data-label=\"#Ref\" style=\"text-align: center\">\r\n                {{ survey.reference_no }}\r\n              </td>\r\n              <td data-label=\"Work Order\" style=\"text-align: center\">\r\n                {{ survey.project_name }}\r\n              </td>\r\n\r\n              <td data-label=\"Category\" style=\"text-align: center\">\r\n                {{ survey.category_name }}\r\n              </td>\r\n              <td data-label=\"Surveyor Name\" style=\"text-align: center\">\r\n                <div v-for=\"sa in survey.survey_appointment\" :key=\"sa.id\">\r\n                  {{ sa.surveyor.name }}\r\n                </div>\r\n              </td>\r\n\r\n              <td data-label=\"Status\" style=\"text-align: center\" class=\"chips2\" v-if=\"survey.status == 0\">\r\n                Not Assigned\r\n              </td>\r\n              <td data-label=\"Status\" style=\"text-align: center\" class=\"chips3\" v-if=\"survey.status == 2\">Assigned</td>\r\n              <td data-label=\"Status\" style=\"text-align: center\" class=\"chips1\" v-if=\"survey.status == 3\">Pending</td>\r\n              <td\r\n                data-label=\"Status\"\r\n                style=\"text-align: center\"\r\n                class=\"chips\"\r\n                v-if=\"survey.edit_request == 1 && survey.status == 1\"\r\n              >\r\n                Completed\r\n                <span class=\"material-icons-sharp badge\"> new_releases </span>\r\n              </td>\r\n              <td data-label=\"Status\" style=\"text-align: center\" class=\"chips\" v-else-if=\"survey.status == 1\">\r\n                Completed\r\n              </td>\r\n              <td data-label=\"Action\" style=\"text-align: center\" v-if=\"user_role_id < 4\">\r\n                <div class=\"dropdown\">\r\n                  <button class=\"dropbtn\" type=\"button\">\r\n                    <span class=\"material-icons-sharp\"> more_horiz </span>\r\n                    <span v-if=\"survey.has_new_dd_report == 1\" class=\"badge\"></span>\r\n                  </button>\r\n                  <div class=\"dropdown-content\">\r\n                    <router-link :to=\"`/dashboard/edit_survey/${survey.id}`\">\r\n                      <button\r\n                        title=\"Edit Survey\"\r\n                        type=\"button\"\r\n                        class=\"actio-button-margin edit\"\r\n                        v-if=\"survey.status == 0\"\r\n                      >\r\n                        <span class=\"material-icons-sharp edit\" style=\"font-size: 11px\">edit</span>\r\n                        Edit\r\n                      </button>\r\n                    </router-link>\r\n                    <!-- <button v-else hidden>hide</button> -->\r\n\r\n                    <button\r\n                      title=\"Delete Survey\"\r\n                      type=\"button\"\r\n                      class=\"actio-button-margin delete\"\r\n                      v-on:click=\"confirmDelete(survey)\"\r\n                    >\r\n                      <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">delete</span>\r\n                      Delete\r\n                    </button>\r\n                    <router-link :to=\"`/dashboard/survey/add_surveyorappoint/${survey.id}`\">\r\n                      <button\r\n                        title=\"Appoint Surveyor\"\r\n                        type=\"button\"\r\n                        class=\"actio-button-margin appoint\"\r\n                        v-if=\"survey.status == 0\"\r\n                      >\r\n                        Appoint\r\n                      </button>\r\n                    </router-link>\r\n                    <!-- <button v-else hidden></button> -->\r\n                    <!-- <button\r\n                      type=\"button\"\r\n                      class=\"actio-button-margin download\"\r\n                      v-if=\"survey.status == 1\"\r\n                    >\r\n                      <a\r\n                        :href=\"download_survey_url + survey.id\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        <span\r\n                          class=\"material-icons-sharp add\"\r\n                          style=\"font-size: 11px\"\r\n                          >download</span\r\n                        >\r\n                        Download\r\n                      </a>\r\n                    </button> -->\r\n\r\n                    <router-link :to=\"`/dashboard/survey/${survey.id}`\">\r\n                      <button title=\"See Reports\" type=\"button\" class=\"actio-button-margin download\">\r\n                        <span class=\"material-icons-sharp add\" style=\"font-size: 11px\">arrow_forward</span>\r\n                        Reports\r\n                      </button>\r\n                    </router-link>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td data-label=\"Action\" style=\"text-align: center\" v-else>--</td>\r\n            </tr>\r\n            <tr v-show=\"!surveys.length\">\r\n            <td colspan=\"6\">No Data Found</td>\r\n          </tr>\r\n          </tbody>\r\n        </datatable>\r\n      </div>\r\n      <div>\r\n        <div class=\"flex-container-pagination\" style=\"padding-right: 10px\">\r\n          <div class=\"flex-item\">\r\n            Showing {{ pagination.from }} to {{ pagination.to }} of {{ pagination.total }} records\r\n          </div>\r\n          <div style=\"display: flex; justify-content: flex-end\">\r\n            <pagination :pagination.sync=\"pagination\" :offset=\"5\" @paginate=\"getAllSurvey()\"></pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DataTable from \"../../../components/datatable/Datatable\";\r\nimport Pagination from \"../../../components/datatable/Pagination.vue\";\r\n\r\nimport { mapState } from \"vuex\";\r\n\r\nimport { http } from \"../../../service/http_service\";\r\n\r\nexport default {\r\n  name: \"InterportSurvey\",\r\n\r\n  components: {\r\n    datatable: DataTable,\r\n    pagination: Pagination,\r\n  },\r\n\r\n  props: [\"work_order_id\"],\r\n\r\n  data() {\r\n    let sortOrders = {};\r\n    let columns = [\r\n      // { label: \"#SL\", name: \"id\" },\r\n      { label: \"#Ref\", name: \"reference_no\" },\r\n      { label: \"Vessel Name\", name: \"project_name\" },\r\n      // { label: \"Start Date\", name: \"start_date\" },\r\n      // { label: \"End Date\", name: \"end_date\" },\r\n      { label: \"Category\", name: \"category_name\" },\r\n      { label: \"Surveyor Name\", name: \"surveyor_name\" },\r\n      { label: \"Status\", name: \"status\" },\r\n      { label: \"Action\", name: \"action\" },\r\n    ];\r\n    columns.forEach((column) => {\r\n      sortOrders[column.name] = -1;\r\n    });\r\n    let apiUrl = this.$store.state.apiUrl;\r\n    return {\r\n      user_role: JSON.parse(localStorage.getItem(\"user_role\")),\r\n      user_role_id: JSON.parse(localStorage.getItem(\"user_role_id\")),\r\n      surveys: [],\r\n      columns: columns,\r\n      sortKey: \"id\",\r\n      sortOrders: sortOrders,\r\n      perPage: [\"10\", \"20\", \"30\", \"25\", \"50\", \"100\"],\r\n      tableData: {\r\n        draw: 0,\r\n        length: 10,\r\n        search: \"\",\r\n        column: 0,\r\n        dir: \"desc\",\r\n      },\r\n      pagination: {\r\n        last_page: \"\",\r\n        current_page: 1,\r\n        total: \"\",\r\n        last_page_url: \"\",\r\n        next_page_url: \"\",\r\n        prev_page_url: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n      },\r\n      filterWorkOrderSurveyData: {\r\n        survey_id: \"\",\r\n      },\r\n      report_page_url: \"http://localhost:8080/dashboard/report\",\r\n      download_survey_url: apiUrl + \"v1/surveys/download_survey/\",\r\n      active: false,\r\n      isopen: \"\",\r\n      isShowDrop1: false,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      survey_appointment: (state) => state.survey.survey_appointment,\r\n      message: (state) => state.survey.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getAllSurvey();\r\n  },\r\n\r\n  methods: {\r\n    toggleDropdown(index) {\r\n      let id = index;\r\n      if (id) {\r\n        this.isShowDrop1 = !this.isShowDrop1;\r\n      }\r\n    },\r\n    getAllSurvey() {\r\n      this.tableData.draw++;\r\n      let params = new URLSearchParams();\r\n      params.append(\"page\", this.pagination.current_page);\r\n      params.append(\"draw\", this.tableData.draw);\r\n      params.append(\"length\", this.tableData.length);\r\n      params.append(\"search\", this.tableData.search);\r\n      params.append(\"column\", this.tableData.column);\r\n      params.append(\"dir\", this.tableData.dir);\r\n\r\n      return http()\r\n        .get(\"v1/surveys/work_order_id/\" + this.$route.params.id + \"/getData?\" + params)\r\n        .then((response) => {\r\n          this.surveys = response.data.data.data;\r\n          this.pagination = response.data.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    sortBy(key) {\r\n      this.sortKey = key;\r\n      this.sortOrders[key] = this.sortOrders[key] * -1;\r\n      this.tableData.column = this.getIndex(this.columns, \"name\", key);\r\n      this.tableData.dir = this.sortOrders[key] === 1 ? \"asc\" : \"desc\";\r\n      this.getAllSurvey();\r\n    },\r\n\r\n    getIndex(array, key, value) {\r\n      return array.findIndex((i) => i[key] == value);\r\n    },\r\n\r\n    confirmDelete(survey_details) {\r\n      let survey_id = survey_details.id;\r\n      this.$swal\r\n        .fire({\r\n          title: \"Are you sure?\",\r\n          text: \"You won't be able to revert this!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, delete it!\",\r\n        })\r\n        .then((result) => {\r\n          if (result.isConfirmed) {\r\n            console.log(survey_id);\r\n            this.deleteSurvey(survey_id);\r\n          }\r\n        });\r\n    },\r\n\r\n    deleteSurvey: async function (id) {\r\n      try {\r\n        await this.$store.dispatch(\"survey/delete_survey\", id).then(() => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: this.message,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n          this.getAllSurvey();\r\n        });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ninput[type=\"text\"] {\r\n  width: 100%;\r\n}\r\n.column_direction {\r\n  flex-direction: row;\r\n}\r\n.badge {\r\n  margin-top: -25px;\r\n  font-size: 15px;\r\n  color: red;\r\n}\r\n.download {\r\n  background-color: #276129;\r\n}\r\n.download:hover {\r\n  background-color: #378a3a;\r\n}\r\n.details {\r\n  background-color: rgb(60, 60, 247);\r\n}\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n\r\nbutton {\r\n  width: fit-content;\r\n  padding: 5px 5px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  /* margin-top: 2%; */\r\n}\r\n\r\n.search {\r\n  padding: 10px 20px;\r\n  outline: none;\r\n  border: 1px solid #ddd;\r\n  margin-right: 0;\r\n}\r\n.chips {\r\n  width: 47%;\r\n  margin-left: 55px;\r\n}\r\n\r\n.chips1 {\r\n  width: 50%;\r\n  margin-left: 55px;\r\n}\r\n.chips3 {\r\n  width: 50%;\r\n  margin-left: 55px;\r\n}\r\n.chips2 {\r\n  width: 50%;\r\n  margin-left: 55px;\r\n  line-height: 9px;\r\n}\r\n.appoint {\r\n  padding: 5px;\r\n  background-color: rgb(31, 182, 20);\r\n  border: 1px solid rgb(31, 182, 20);\r\n}\r\n\r\n.badge {\r\n  margin-top: -25px;\r\n  font-size: 15px;\r\n  color: red;\r\n}\r\n/* .download {\r\n  background-color: #3e8e41;\r\n} */\r\n.details {\r\n  background-color: rgb(60, 60, 247);\r\n}\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n\r\nbutton {\r\n  width: fit-content;\r\n  padding: 5px 5px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  /* margin-top: 2%; */\r\n}\r\n\r\n.search {\r\n  padding: 10px 20px;\r\n  outline: none;\r\n  border: 1px solid #ddd;\r\n  margin-right: 0;\r\n}\r\n.chips {\r\n  width: 47%;\r\n  margin-left: 55px;\r\n}\r\n\r\n.chips1 {\r\n  width: 50%;\r\n  margin-left: 55px;\r\n}\r\n.chips3 {\r\n  width: 50%;\r\n  margin-left: 55px;\r\n}\r\n.chips2 {\r\n  width: 50%;\r\n  margin-left: 55px;\r\n  line-height: 9px;\r\n}\r\n.appoint {\r\n  background-color: rgb(31, 182, 20);\r\n  border: 1px solid rgb(31, 182, 20);\r\n}\r\n\r\n/* Dropdown Button */\r\n.dropbtn {\r\n  background-color: #f7f5f5;\r\n  color: #020202;\r\n  padding: 5px;\r\n  font-size: 16px;\r\n  border: none;\r\n}\r\n\r\n/* The container <div> - needed to position the dropdown content */\r\n.dropdown {\r\n  position: relative;\r\n}\r\n\r\n/* Dropdown Content (Hidden by Default) */\r\n.dropdown-content {\r\n  display: none;\r\n  position: absolute;\r\n  background-color: #f1f1f1;\r\n  min-width: 100px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n  z-index: 1;\r\n  border-radius: 10px;\r\n  width: 80%;\r\n}\r\n.dropdown-content button {\r\n  /* padding: 5px 5px; */\r\n  margin: 5px 2px 5px 2px;\r\n  border-radius: 5px;\r\n  color: #fff;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-top: 1%;\r\n  width: 66%;\r\n}\r\n/* .dropdown-content button {\r\n  \r\n} */\r\n\r\n.active {\r\n  opacity: 2;\r\n  pointer-events: visible;\r\n  top: 100%;\r\n  display: none;\r\n  z-index: 1;\r\n}\r\n\r\n/* Show the dropdown menu on hover */\r\n.dropdown:hover .dropdown-content {\r\n  display: block;\r\n}\r\n\r\n/* Change the background color of the dropdown button when the dropdown content is shown */\r\n.dropdown:hover .dropbtn {\r\n  background-color: #3e8e41;\r\n}\r\n\r\ninput[type=\"checkbox\"] {\r\n  height: 0;\r\n  width: 0;\r\n  visibility: hidden;\r\n}\r\n\r\nlabel {\r\n  cursor: pointer;\r\n  text-indent: -9999px;\r\n  width: 70px;\r\n  height: 30px;\r\n  background: grey;\r\n  display: block;\r\n  border-radius: 100px;\r\n  position: relative;\r\n  margin-left: 54px;\r\n}\r\n\r\nlabel:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  width: 30px;\r\n  height: 20px;\r\n  background: #fff;\r\n  border-radius: 90px;\r\n  transition: 0.3s;\r\n}\r\ninput:checked + label {\r\n  background: #bada55;\r\n}\r\n\r\ninput:checked + label:after {\r\n  left: calc(100% - 5px);\r\n  transform: translateX(-100%);\r\n}\r\n\r\nlabel:active:after {\r\n  width: 30px;\r\n  padding: 10px 20px;\r\n  outline: none;\r\n  border: 1px solid #ddd;\r\n  /* border-radius: 6px; */\r\n  margin-right: 0;\r\n}\r\n.dropdown .badge {\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 63px;\r\n  padding: 4px 4px;\r\n  border-radius: 50%;\r\n  background: red;\r\n  color: white;\r\n}\r\nh1 {\r\n  font-size: 1.3rem;\r\n}\r\nselect {\r\n  height: 30px\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}