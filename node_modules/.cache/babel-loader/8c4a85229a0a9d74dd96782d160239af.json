{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions, mapGetters } from \"vuex\";\nexport default {\n  name: \"EditStyle\",\n\n  data() {\n    return {\n      errors: {},\n      permission: []\n    };\n  },\n\n  computed: { ...mapState({\n      editRoleData: state => state.role.role,\n      permissions: state => state.permission.permissions,\n      message: state => state.role.success_message\n    }),\n    ...mapGetters({\n      editRolePermissionData: 'role/rolePermissions'\n    }),\n    rolePermissions: {\n      get() {\n        return this.editRolePermissionData;\n      },\n\n      set(value) {\n        this.$store.commit('role/updateValue', value);\n      }\n\n    }\n  },\n\n  mounted() {\n    this.getAllPermission();\n    this.getEditRole(this.$route.params.id);\n  },\n\n  methods: { ...mapActions({\n      getEditRole: \"role/edit_role\",\n      getAllPermission: 'permission/get_all_permission'\n    }),\n    editRole: async function () {\n      try {\n        let id = this.$route.params.id;\n        let formData = new FormData();\n        formData.append(\"name\", this.editRoleData.name);\n        this.rolePermissions.forEach(item => formData.append(\"permission[]\", item));\n        formData.append(\"_method\", \"PUT\");\n        await this.$store.dispatch(\"role/update_role\", {\n          id: id,\n          data: formData\n        }).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.getEditRole(id);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AAEA;EACAA,iBADA;;EAGAC;IACA;MACAC,UADA;MAEAC;IAFA;EAIA,CARA;;EAUAC,YACA;MACAC,sCADA;MAEAC,kDAFA;MAGAC;IAHA,EADA;IAOA;MACAC;IADA,EAPA;IAUAC;MACAC;QACA;MACA,CAHA;;MAIAC;QACA;MACA;;IANA;EAVA,CAVA;;EA8BAC;IACA;IACA;EACA,CAjCA;;EAmCAC,WACA;MACAC,6BADA;MAEAC;IAFA,EADA;IAMAC;MACA;QACA;QACA;QAEAC;QACA;QACAA;QAEA,kBACAC,QADA,CACA,kBADA,EACA;UAAAC;UAAAlB;QAAA,CADA,EAEAmB,IAFA,CAEA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;QACA,CAbA;MAcA,CAtBA,CAsBA;QACAC;MACA;IACA;EAhCA;AAnCA","names":["name","data","errors","permission","computed","editRoleData","permissions","message","editRolePermissionData","rolePermissions","get","set","mounted","methods","getEditRole","getAllPermission","editRole","formData","dispatch","id","then","toast","position","icon","title","showConfirmButton","timer","console"],"sourceRoot":"src/views/admin/role","sources":["EditRole.vue"],"sourcesContent":["<template>\r\n  <div id=\"edit_role\">\r\n    <div class=\"card\">\r\n      <div class=\"container\">\r\n        <h2>Edit Role</h2>\r\n        <form v-on:submit.prevent=\"editRole\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"name\">Role Name</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                      type=\"text\"\r\n                      v-model=\"editRoleData.name\"\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Role Name\"\r\n              />\r\n              <span v-if=\"errors.name\" class=\"danger_text\">{{\r\n                errors.name[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n          <br><br>\r\n          <!-- <strong>Permissions:</strong>\r\n\r\n          <div class=\"row\">\r\n            <ul class=\"grid\">\r\n              <li v-for=\"permission in permissions\" :key=\"permission.id\">\r\n                <div class=\"permission_data\">\r\n                  <label for=\"permission\">\r\n                    <input type=\"checkbox\" v-model=\"rolePermissions\" id=\"permission\" name=\"permission\" :value=\"permission.id\">\r\n                    {{permission.name}}\r\n                  </label>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div> -->\r\n\r\n          <div class=\"row\">\r\n            <input type=\"submit\" value=\"Submit\" />\r\n            <router-link to=\"/dashboard/role\" style=\"float: right\">\r\n              <input type=\"button\" value=\"Back\" class=\"back-btn\" />\r\n            </router-link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions, mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"EditStyle\",\r\n\r\n  data() {\r\n    return {\r\n      errors: {},\r\n      permission: [],\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      editRoleData: state => state.role.role,\r\n      permissions: state => state.permission.permissions,\r\n      message: (state) => state.role.success_message,\r\n    }),\r\n\r\n    ...mapGetters({\r\n        editRolePermissionData: 'role/rolePermissions'\r\n    }),\r\n    rolePermissions: {\r\n        get(){\r\n            return this.editRolePermissionData\r\n        },\r\n        set(value){\r\n            this.$store.commit('role/updateValue', value)\r\n        }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.getAllPermission();\r\n    this.getEditRole(this.$route.params.id);\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n        getEditRole: \"role/edit_role\",\r\n        getAllPermission: 'permission/get_all_permission'\r\n    }),\r\n\r\n    editRole: async function () {\r\n      try {\r\n        let id = this.$route.params.id;\r\n        let formData = new FormData();\r\n\r\n        formData.append(\"name\", this.editRoleData.name);\r\n        this.rolePermissions.forEach((item) => formData.append(\"permission[]\", item));\r\n        formData.append(\"_method\", \"PUT\");\r\n\r\n        await this.$store\r\n          .dispatch(\"role/update_role\", { id: id, data: formData })\r\n          .then(() => {\r\n            this.$swal.fire({\r\n              toast: true,\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: this.message,\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n\r\n            this.getEditRole(id);\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#edit_role {\r\n  padding: 0px 5px 0px 5px;\r\n  margin: 0px 15px 0px 15px;\r\n}\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n  appearance: auto;\r\n}\r\n\r\nselect {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n\r\n.grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(1, auto);\r\n  /*gap: 3rem 0.75rem;*/\r\n  background-color: #f0f0f0;\r\n  list-style-type: none;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}