{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"AddDamage\",\n  title: \"InterPort - Add Damage\",\n\n  data() {\n    return {\n      users: [{\n        name: \"\",\n        email: \"\",\n        mobno: \"\"\n      }],\n      damageData: {\n        name: \"\"\n      },\n      errors: {}\n    };\n  },\n\n  computed: { ...mapState({\n      message: state => state.damage.success_message\n    })\n  },\n  methods: {\n    addRow: function () {\n      this.users.push({\n        name: \"\",\n        email: \"\",\n        mobno: \"\"\n      });\n    },\n\n    deleteRow(index) {\n      this.users.splice(index, 1);\n    },\n\n    addDamage: async function () {\n      try {\n        let formData = new FormData(); // console.log(JSON.stringify(this.users));\n        // console.log(this.damageData.name);\n\n        var user_data = JSON.stringify(this.users);\n        formData.append(\"damage_type_name\", this.damageData.name);\n        formData.append(\"users_data\", user_data);\n        await this.$store.dispatch(\"damage/add_damage\", formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.damageData = {};\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AAEA;EACAA,iBADA;EAEAC,+BAFA;;EAIAC;IACA;MACAC;QAAAH;QAAAI;QAAAC;MAAA,EADA;MAEAC;QACAN;MADA,CAFA;MAKAO;IALA;EAOA,CAZA;;EAcAC,YACA;MACAC;IADA;EADA,CAdA;EAoBAC;IACAC;MACA;QAAAX;QAAAI;QAAAC;MAAA;IACA,CAHA;;IAKAO;MACA;IACA,CAPA;;IASAC;MACA;QACA,8BADA,CAEA;QACA;;QAEA;QAEAC;QACAA;QAEA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAhB,mBAJA;YAKAiB,wBALA;YAMAC;UANA;UASA;QACA,CAXA;MAYA,CAtBA,CAsBA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAF,aADA;cAEAG,YAFA;cAGAnB;YAHA;YAKA;QAVA;MAYA;IACA;EA9CA;AApBA","names":["name","title","data","users","email","mobno","damageData","errors","computed","message","methods","addRow","deleteRow","addDamage","formData","toast","position","icon","showConfirmButton","timer","text"],"sourceRoot":"src/views/admin/damage","sources":["AddDamage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"card\">\r\n      <div class=\"container\">\r\n        <h2>Add Damage</h2>\r\n        <form v-on:submit.prevent=\"addDamage\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"dname\">Damage Name</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"damageData.name\"\r\n                id=\"dname\"\r\n                name=\"damage_type_name\"\r\n                placeholder=\"Enter Damage Name\"\r\n              />\r\n              <span v-if=\"errors.damage_type_name\" class=\"danger_text\">{{\r\n                errors.damage_type_name[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <br /><br />\r\n\r\n          <div class=\"table_card\" style=\"\">\r\n            <table>\r\n              <thead class=\"text text-success\" style=\"width: 100%\">\r\n                <tr style=\"width: 100%\">\r\n                  <th style=\"width: 25%\">Name</th>\r\n                  <th style=\"width: 25%\">Email</th>\r\n                  <th style=\"width: 25%\">Mobile Number</th>\r\n                  <th style=\"width: 25%; text-align: right\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody style=\"width: 100%\">\r\n                <tr\r\n                  v-for=\"(user, index) in users\"\r\n                  :key=\"index\"\r\n                  style=\"width: 100%\"\r\n                >\r\n                  <td style=\"width: 25%\">\r\n                    <input\r\n                      v-model=\"user.name\"\r\n                      class=\"form-control\"\r\n                      type=\"text\"\r\n                    />\r\n                  </td>\r\n                  <td style=\"width: 25%\">\r\n                    <input\r\n                      v-model=\"user.email\"\r\n                      class=\"form-control\"\r\n                      type=\"text\"\r\n                    />\r\n                  </td>\r\n                  <td style=\"width: 25%\">\r\n                    <input\r\n                      v-model=\"user.mobno\"\r\n                      class=\"form-control\"\r\n                      type=\"text\"\r\n                    />\r\n                  </td>\r\n                  <td style=\"width: 25%\">\r\n                    <input\r\n                      type=\"button\"\r\n                      value=\"Remove\"\r\n                      class=\"back-btn\"\r\n                      @click=\"deleteRow(index)\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"row\">\r\n            <input\r\n              type=\"button\"\r\n              value=\"Add New Record\"\r\n              class=\"back-btn\"\r\n              @click=\"addRow\"\r\n              style=\"width: 100%\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <input type=\"submit\" value=\"Submit\" />\r\n            <router-link to=\"/dashboard/damage\" style=\"float: right\">\r\n              <input type=\"button\" value=\"Back\" class=\"back-btn\" />\r\n            </router-link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"AddDamage\",\r\n  title: \"InterPort - Add Damage\",\r\n\r\n  data() {\r\n    return {\r\n      users: [{ name: \"\", email: \"\", mobno: \"\" }],\r\n      damageData: {\r\n        name: \"\",\r\n      },\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      message: (state) => state.damage.success_message,\r\n    }),\r\n  },\r\n\r\n  methods: {\r\n    addRow: function () {\r\n      this.users.push({ name: \"\", email: \"\", mobno: \"\" });\r\n    },\r\n\r\n    deleteRow(index) {\r\n      this.users.splice(index, 1);\r\n    },\r\n\r\n    addDamage: async function () {\r\n      try {\r\n        let formData = new FormData();\r\n        // console.log(JSON.stringify(this.users));\r\n        // console.log(this.damageData.name);\r\n\r\n        var user_data = JSON.stringify(this.users);\r\n\r\n        formData.append(\"damage_type_name\", this.damageData.name);\r\n        formData.append(\"users_data\", user_data);\r\n\r\n        await this.$store.dispatch(\"damage/add_damage\", formData).then(() => {\r\n          this.$swal.fire({\r\n            toast: true,\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: this.message,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n          });\r\n\r\n          this.damageData = {};\r\n        });\r\n      } catch (e) {\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: #f1f1f1;\r\n  margin-top: 25px;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n  appearance: auto;\r\n}\r\n\r\nselect {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}