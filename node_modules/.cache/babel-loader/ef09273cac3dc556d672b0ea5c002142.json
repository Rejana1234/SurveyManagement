{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { http } from \"../../service/http_service\";\nimport { mapState, mapActions } from \"vuex\";\nexport default {\n  name: \"InterPortAddUser\",\n\n  data() {\n    return {\n      surveyFirms: {\n        survey_firm: \"\",\n        survey_firm_reference_no: \"\" // email: '',\n        // password: '',\n        // phone: '',\n        // survey_firm: '',\n        // role: ''\n\n      },\n      errors: {}\n    };\n  },\n\n  computed: { ...mapState({\n      survey_firms: state => state.surveyfirm.firms,\n      roles: state => state.role.roles,\n      message: state => state.users.success_message\n    })\n  },\n\n  mounted() {\n    this.getRole();\n    this.getSurveyFirm();\n  },\n\n  methods: { ...mapActions({\n      getRole: \"role/get_role\",\n      getSurveyFirm: \"surveyfirm/get_firm\"\n    }),\n    addUser: async function () {\n      try {\n        let id = this.$route.params.id;\n        let formData = new FormData();\n        formData.append(\"survey_firm\", this.surveyFirms.survey_firm);\n        formData.append(\"survey_firm_reference_no\", this.surveyFirms.survey_firm_reference_no); // formData.append('phone', this.userData.phone);\n        // formData.append('password', this.userData.password);\n        // formData.append('survey_firm', this.userData.survey_firm);\n        // formData.append('role', this.userData.role);\n\n        return http().post(\"v1/work_orders/assigned_survey_firm/\" + id, formData).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.surveyFirms = {};\n          this.$router.go(0);\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA;AACA;AAEA;EACAA,wBADA;;EAGAC;IACA;MACAC;QACAC,eADA;QAEAC,4BAFA,CAGA;QACA;QACA;QACA;QACA;;MAPA,CADA;MAWAC;IAXA;EAaA,CAjBA;;EAmBAC,YACA;MACAC,6CADA;MAEAC,gCAFA;MAGAC;IAHA;EADA,CAnBA;;EA2BAC;IACA;IACA;EACA,CA9BA;;EAgCAC,WACA;MACAC,wBADA;MAEAC;IAFA,EADA;IAMAC;MACA;QACA;QACA;QACAC;QACAA,gBACA,0BADA,EAEA,yCAFA,EAJA,CAQA;QACA;QACA;QACA;;QACA,cACAC,IADA,CACA,2CADA,EACAD,QADA,EAEAE,IAFA,CAEA;UACA;YACAC,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAC,mBAJA;YAKAC,wBALA;YAMAC;UANA;UASA;UACA;QACA,CAdA;MAeA,CA3BA,CA2BA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAH,aADA;cAEAI,YAFA;cAGAH;YAHA;YAKA;QAVA;MAYA;IACA;EAhDA;AAhCA","names":["name","data","surveyFirms","survey_firm","survey_firm_reference_no","errors","computed","survey_firms","roles","message","mounted","methods","getRole","getSurveyFirm","addUser","formData","post","then","toast","position","icon","title","showConfirmButton","timer","text"],"sourceRoot":"src/views/admin","sources":["SurveyFirms.vue"],"sourcesContent":["<template>\r\n  <div id=\"add_user\">\r\n    <div class=\"card\">\r\n      <form v-on:submit.prevent=\"addUser\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"fname\">Survey Firm's File Reference No.</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"survey_firm_reference_no\"\r\n                name=\"survey_firm_reference_no\"\r\n                v-model=\"surveyFirms.survey_firm_reference_no\"\r\n                placeholder=\"Enter Survey Reference No.\"\r\n              />\r\n              <span\r\n                v-if=\"errors.survey_firm_reference_no\"\r\n                class=\"danger_text\"\r\n                >{{ errors.survey_firm_reference_no[0] }}</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-25\">\r\n              <label for=\"role\">Survey Firm</label>\r\n            </div>\r\n            <div class=\"col-75\">\r\n              <select\r\n                name=\"survey_firm\"\r\n                id=\"survey_firm\"\r\n                v-model=\"surveyFirms.survey_firm\"\r\n                class=\"box\"\r\n                required\r\n              >\r\n                <option value=\"\" selected disabled>Select Survey Firm</option>\r\n                <option\r\n                  :value=\"surveyFirm.id\"\r\n                  v-for=\"surveyFirm in survey_firms\"\r\n                  :key=\"surveyFirm.id\"\r\n                >\r\n                  {{ surveyFirm.name }}\r\n                </option>\r\n              </select>\r\n              <span v-if=\"errors.surveyFirm\" class=\"danger_text\">{{\r\n                errors.surveyFirm[0]\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <input type=\"submit\" value=\"Assign\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { http } from \"../../service/http_service\";\r\nimport { mapState, mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"InterPortAddUser\",\r\n\r\n  data() {\r\n    return {\r\n      surveyFirms: {\r\n        survey_firm: \"\",\r\n        survey_firm_reference_no: \"\",\r\n        // email: '',\r\n        // password: '',\r\n        // phone: '',\r\n        // survey_firm: '',\r\n        // role: ''\r\n      },\r\n\r\n      errors: {},\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      survey_firms: (state) => state.surveyfirm.firms,\r\n      roles: (state) => state.role.roles,\r\n      message: (state) => state.users.success_message,\r\n    }),\r\n  },\r\n\r\n  mounted() {\r\n    this.getRole();\r\n    this.getSurveyFirm();\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      getRole: \"role/get_role\",\r\n      getSurveyFirm: \"surveyfirm/get_firm\",\r\n    }),\r\n\r\n    addUser: async function () {\r\n      try {\r\n        let id = this.$route.params.id;\r\n        let formData = new FormData();\r\n        formData.append(\"survey_firm\", this.surveyFirms.survey_firm);\r\n        formData.append(\r\n          \"survey_firm_reference_no\",\r\n          this.surveyFirms.survey_firm_reference_no\r\n        );\r\n        // formData.append('phone', this.userData.phone);\r\n        // formData.append('password', this.userData.password);\r\n        // formData.append('survey_firm', this.userData.survey_firm);\r\n        // formData.append('role', this.userData.role);\r\n        return http()\r\n          .post(\"v1/work_orders/assigned_survey_firm/\" + id, formData)\r\n          .then(() => {\r\n            this.$swal.fire({\r\n              toast: true,\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: this.message,\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n\r\n            this.surveyFirms = {};\r\n            this.$router.go(0);\r\n          });\r\n      } catch (e) {\r\n        switch (e.response.status) {\r\n          case 422:\r\n            this.errors = e.response.data.errors;\r\n            break;\r\n          default:\r\n            this.$swal.fire({\r\n              icon: \"error\",\r\n              text: \"Oops\",\r\n              title: e.response.data.error,\r\n            });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 0.2rem;\r\n  margin-top: 1%;\r\n  margin-bottom: 2.5rem;\r\n}\r\n.box {\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\nselect {\r\n  width: 70%;\r\n  height: 40px;\r\n  box-shadow: 0 2px 1px 0 rgb(0 0 0 / 20%), 0 2px 15px 0 rgb(0 0 0 / 19%);\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}