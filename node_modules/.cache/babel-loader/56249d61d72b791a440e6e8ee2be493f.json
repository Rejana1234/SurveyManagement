{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"InterPortPagination\",\n  props: [\"pagination\", \"offset\"],\n\n  data() {\n    return {\n      pag: \"\"\n    };\n  },\n\n  watch: {\n    pagination(newVal) {\n      this.pag = newVal;\n    }\n\n  },\n  methods: {\n    isCurrentPage(page) {\n      return this.pag.current_page === page;\n    },\n\n    changePage(page) {\n      if (page > this.pagination.last_page) {\n        page = this.pagination.last_page;\n      }\n\n      this.pag.current_page = page;\n      this.$emit(\"paginate\", this.pag.current_page);\n    }\n\n  },\n  computed: {\n    pages() {\n      let pages = [];\n      let from = this.pagination.current_page - Math.floor(this.offset / 2);\n\n      if (from < 1) {\n        from = 1;\n      }\n\n      let to = from + this.offset - 1;\n\n      if (to > this.pagination.last_page) {\n        to = this.pagination.last_page;\n      }\n\n      while (from <= to) {\n        pages.push(from);\n        from++;\n      }\n\n      return pages;\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;EACAA,2BADA;EAEAC,+BAFA;;EAIAC;IACA;MACAC;IADA;EAGA,CARA;;EAUAC;IACAC;MACA;IACA;;EAHA,CAVA;EAgBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;QACAC;MACA;;MACA;MACA;IACA;;EAVA,CAhBA;EA6BAC;IACAC;MACA;MACA;;MACA;QACAC;MACA;;MACA;;MACA;QACAC;MACA;;MACA;QACAF;QACAC;MACA;;MACA;IACA;;EAhBA;AA7BA","names":["name","props","data","pag","watch","pagination","methods","isCurrentPage","changePage","page","computed","pages","from","to"],"sourceRoot":"src/components/datatable","sources":["Pagination.vue"],"sourcesContent":["<!-- <template>\r\n    <div>\r\n        <nav aria-label=\"...\" style=\"cursor: pointer;background: #fff !important;\">\r\n            <ul class=\"pagination justify-content-center\">\r\n                <li class=\"page-item\" :class=\"{ disabled: pagination.current_page <= 1 }\">\r\n                    <a class=\"page-link\" @click.prevent=\"changePage(1)\"  >First page</a>\r\n                </li>\r\n                <li class=\"page-item\" :class=\"{ disabled: pagination.current_page <= 1 }\">\r\n                    <a class=\"page-link\" @click.prevent=\"changePage(pagination.current_page - 1)\">Previous</a>\r\n                </li>\r\n\r\n                <li class=\"page-item\" v-for=\"page in pages\"  :key=\"page\" :class=\"isCurrentPage(page) ? 'active' : ''\">\r\n                    <a class=\"page-link\" @click.prevent=\"changePage(page)\">{{ page }}\r\n                        <span v-if=\"isCurrentPage(page)\" class=\"sr-only\">(current)</span>\r\n                    </a>\r\n                </li>\r\n\r\n                <li class=\"page-item\" :class=\"{ disabled: pagination.current_page >= pagination.last_page }\">\r\n                    <a class=\"page-link\" @click.prevent=\"changePage(pagination.current_page + 1)\">Next</a>\r\n                </li>\r\n                <li class=\"page-item\" :class=\"{ disabled: pagination.current_page >= pagination.last_page }\">\r\n                    <a class=\"page-link\" @click.prevent=\"changePage(pagination.last_page)\">Last page</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n</template> -->\r\n\r\n<template>\r\n  <div>\r\n    <nav aria-label=\"...\" style=\"cursor: pointer; background: #fff !important\">\r\n      <ul class=\"pagination justify-content-center\" style=\"display: flex\">\r\n        <li\r\n          class=\"page-item\"\r\n          :class=\"{ disabled: pagination.current_page <= 1 }\"\r\n        >\r\n          <a\r\n            class=\"page-link flex-item-pagination\"\r\n            @click.prevent=\"changePage(1)\"\r\n            >First page</a\r\n          >\r\n        </li>\r\n        <li\r\n          class=\"page-item\"\r\n          :class=\"{ disabled: pagination.current_page <= 1 }\"\r\n        >\r\n          <a\r\n            class=\"page-link flex-item-pagination\"\r\n            @click.prevent=\"changePage(pagination.current_page - 1)\"\r\n            >Previous</a\r\n          >\r\n        </li>\r\n\r\n        <li\r\n          class=\"page-item\"\r\n          v-for=\"page in pages\"\r\n          :key=\"page\"\r\n          :class=\"isCurrentPage(page) ? 'active' : ''\"\r\n        >\r\n          <a\r\n            class=\"page-link flex-item-pagination\"\r\n            @click.prevent=\"changePage(page)\"\r\n            >{{ page }}\r\n            <span v-if=\"isCurrentPage(page)\" class=\"sr-only\"></span>\r\n          </a>\r\n        </li>\r\n\r\n        <li\r\n          class=\"page-item\"\r\n          :class=\"{ disabled: pagination.current_page >= pagination.last_page }\"\r\n        >\r\n          <a\r\n            class=\"page-link flex-item-pagination\"\r\n            @click.prevent=\"changePage(pagination.current_page + 1)\"\r\n            >Next</a\r\n          >\r\n        </li>\r\n        <li\r\n          class=\"page-item\"\r\n          :class=\"{ disabled: pagination.current_page >= pagination.last_page }\"\r\n        >\r\n          <a\r\n            class=\"page-link flex-item-pagination\"\r\n            @click.prevent=\"changePage(pagination.last_page)\"\r\n            >Last page</a\r\n          >\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"InterPortPagination\",\r\n  props: [\"pagination\", \"offset\"],\r\n\r\n  data() {\r\n    return {\r\n      pag: \"\",\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    pagination(newVal) {\r\n      this.pag = newVal;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    isCurrentPage(page) {\r\n      return this.pag.current_page === page;\r\n    },\r\n    changePage(page) {\r\n      if (page > this.pagination.last_page) {\r\n        page = this.pagination.last_page;\r\n      }\r\n      this.pag.current_page = page;\r\n      this.$emit(\"paginate\", this.pag.current_page);\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    pages() {\r\n      let pages = [];\r\n      let from = this.pagination.current_page - Math.floor(this.offset / 2);\r\n      if (from < 1) {\r\n        from = 1;\r\n      }\r\n      let to = from + this.offset - 1;\r\n      if (to > this.pagination.last_page) {\r\n        to = this.pagination.last_page;\r\n      }\r\n      while (from <= to) {\r\n        pages.push(from);\r\n        from++;\r\n      }\r\n      return pages;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .flex-item-pagination {\r\n    /* margin: 5px 2px; */\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n    padding: 7px 10px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    background-color: #fff;\r\n    border: 1px solid #ddd;\r\n  }\r\n  .flex-item-pagination:hover {\r\n    background-color: #ddd;\r\n  }\r\n\r\n  .pagination>.active>a, .pagination>.active>a:focus, .pagination>.active>a:hover, .pagination>.active>span, .pagination>.active>span:focus, .pagination>.active>span:hover {\r\n    z-index: 3;\r\n    color: #fff;\r\n    cursor: default;\r\n    background-color: #337ab7;\r\n    border-color: #337ab7;\r\n  }\r\n\r\n  .sr-only{\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    clip: rect(0,0,0,0);\r\n    white-space: nowrap;\r\n    border-width: 0;\r\n  }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}