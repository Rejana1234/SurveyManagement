{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapActions } from 'vuex';\nexport default {\n  name: \"InterportAddSummerReport\",\n  title: \"Interport - Add Summary Report\",\n\n  data() {\n    return {\n      errors: {}\n    };\n  },\n\n  computed: { ...mapState({\n      editSummaryData: state => state.summary_report.summary_report,\n      clients: state => state.summary_report.clients,\n      message: state => state.summary_report.success_message\n    })\n  },\n\n  mounted() {\n    this.getEditSummary(this.$route.params.summary_id);\n    this.getAllClients();\n  },\n\n  methods: { ...mapActions({\n      getEditSummary: 'summary_report/editSummaryReport',\n      getAllClients: 'summary_report/get_clients'\n    }),\n    attachImage: function () {\n      //to use some file todo\n      this.signature = this.$refs.summary_signature.files[0];\n      let reader = new FileReader();\n      reader.addEventListener('load', function () {\n        this.$refs.summarySignatureDisplay.src = reader.result;\n      }.bind(this), false);\n      reader.readAsDataURL(this.signature);\n    },\n    editSummaryReport: async function () {\n      try {\n        let survey_id = this.$route.params.survey_id;\n        let id = this.$route.params.summary_id;\n        let formData = new FormData();\n        formData.append('survey_id', survey_id);\n        formData.append('condition_of_remaining_packages', this.editSummaryData.condition_of_remaining_packages);\n        formData.append('note', this.editSummaryData.note);\n        formData.append('remarks', this.editSummaryData.remarks);\n        formData.append('signature', this.editSummaryData.signature);\n        formData.append('_method', 'PUT');\n        await this.$store.dispatch(\"summary_report/update_summary_report\", {\n          id: id,\n          data: formData\n        }).then(() => {\n          this.$swal.fire({\n            toast: true,\n            position: \"top-end\",\n            icon: \"success\",\n            title: this.message,\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.summary_report_data = {};\n        }).catch(err => {\n          console.log(err);\n        });\n      } catch (e) {\n        switch (e.response.status) {\n          case 422:\n            this.errors = e.response.data.errors;\n            break;\n\n          default:\n            this.$swal.fire({\n              icon: \"error\",\n              text: \"Oops\",\n              title: e.response.data.error\n            });\n            break;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;EACAA,gCADA;EAEAC,uCAFA;;EAIAC;IACA;MACAC;IADA;EAGA,CARA;;EAUAC,YACA;MACAC,6DADA;MAEAC,8CAFA;MAGAC;IAHA;EADA,CAVA;;EAkBAC;IACA;IACA;EACA,CArBA;;EAuBAC,WACA;MACAC,kDADA;MAEAC;IAFA,EADA;IAMAC;MACA;MACA;MACA;MACAC;QACA;MACA,CAFA,CAEAC,IAFA,CAEA,IAFA,GAEA,KAFA;MAGAD;IACA,CAdA;IAgBAE;MACA;QACA;QACA;QAEA;QAEAC;QACAA;QACAA;QACAA;QACAA;QACAA;QAEA;UAAAC;UAAAf;QAAA;UACA;YACAgB,WADA;YAEAC,mBAFA;YAGAC,eAHA;YAIAnB,mBAJA;YAKAoB,wBALA;YAMAC;UANA;UASA;QACA,CAXA,EAWAC,KAXA,CAWAC;UACAC;QACA,CAbA;MAcA,CA3BA,CA2BA;QACA;UACA;YACA;YACA;;UACA;YACA;cACAL,aADA;cAEAM,YAFA;cAGAzB;YAHA;YAKA;QAVA;MAYA;IACA;EA1DA;AAvBA","names":["name","title","data","errors","computed","editSummaryData","clients","message","mounted","methods","getEditSummary","getAllClients","attachImage","reader","bind","editSummaryReport","formData","id","toast","position","icon","showConfirmButton","timer","catch","err","console","text"],"sourceRoot":"src/views/admin/report/summary_report","sources":["EditSummaryReport.vue"],"sourcesContent":["<template>\r\n    <div id=\"edit_summary_report\">\r\n        <div class=\"card\">\r\n            <div class=\"container\">\r\n                <h2>Edit Summary Report</h2>\r\n                <form v-on:submit.prevent=\"editSummaryReport\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-25\">\r\n                      <label for=\"dname\">Conditions of remaining packages</label>\r\n                    </div>\r\n                    <div class=\"col-75\">\r\n                      <input type=\"text\" v-model=\"editSummaryData.condition_of_remaining_packages\" name=\"condition_of_remaining_packages\" class=\"box\">\r\n                      <span v-if=\"errors.name\" class=\"danger_text\">{{errors.name[0]}}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-25\">\r\n                      <label for=\"dname\">Note</label>\r\n                    </div>\r\n                    <div class=\"col-75\">\r\n                      <textarea cols=\"10\" v-model=\"editSummaryData.note\" name=\"note\" class=\"box\"></textarea>\r\n                      <span v-if=\"errors.name\" class=\"danger_text\">{{errors.name[0]}}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-25\">\r\n                      <label for=\"dname\">Remarks</label>\r\n                    </div>\r\n                    <div class=\"col-75\">\r\n                      <input type=\"text\" v-model=\"editSummaryData.remarks\" name=\"remarks\" class=\"box\">\r\n                      <span v-if=\"errors.name\" class=\"danger_text\">{{errors.name[0]}}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-25\">\r\n                      <label for=\"applicant\">Signature</label>\r\n                    </div>\r\n                    <div class=\"col-75\">\r\n                      <select name=\"signature\" id=\"signature\" v-model=\"editSummaryData.signature\" class=\"box\">\r\n                        <option value=\"\">Select signature</option>\r\n                        <option :value=\"client.id\" v-for=\"client in clients\" :key=\"client.id\">{{ client.name }}</option>\r\n                      </select>\r\n                      <span v-if=\"errors.name\" class=\"danger_text\">{{ errors.name[0] }}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div v-if=\"signature\">\r\n                    <img src=\"\" ref=\"summarySignatureDisplay\" width=\"150px\" height=\"150px\">\r\n                  </div>\r\n        \r\n                  <div class=\"row\">\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                    <router-link :to=\"`/dashboard/survey/${this.$route.params.survey_id}`\" style=\"float: right\">\r\n                      <input type=\"button\" value=\"Back\" class=\"back-btn\" />\r\n                    </router-link>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import { mapState, mapActions } from 'vuex';\r\n    export default{\r\n        name: \"InterportAddSummerReport\",\r\n        title: \"Interport - Add Summary Report\",\r\n\r\n        data(){\r\n            return{\r\n                errors: {}\r\n            }\r\n        },\r\n\r\n        computed: {\r\n          ...mapState({\r\n            editSummaryData: state => state.summary_report.summary_report,\r\n            clients: state => state.summary_report.clients,\r\n            message: state => state.summary_report.success_message\r\n          })\r\n        },\r\n\r\n        mounted(){\r\n          this.getEditSummary(this.$route.params.summary_id);\r\n          this.getAllClients();\r\n        },\r\n\r\n        methods: {\r\n            ...mapActions({\r\n              getEditSummary:'summary_report/editSummaryReport',\r\n              getAllClients: 'summary_report/get_clients'\r\n            }),\r\n\r\n            attachImage: function(){\r\n                //to use some file todo\r\n                this.signature = this.$refs.summary_signature.files[0];\r\n                let reader = new FileReader();\r\n                reader.addEventListener('load', function () {\r\n                    this.$refs.summarySignatureDisplay.src = reader.result;\r\n                }.bind(this),false);\r\n                reader.readAsDataURL(this.signature);\r\n            },\r\n\r\n            editSummaryReport: async function(){\r\n                try{\r\n                    let survey_id = this.$route.params.survey_id;\r\n                    let id = this.$route.params.summary_id;\r\n\r\n                    let formData = new FormData();\r\n\r\n                    formData.append('survey_id', survey_id);\r\n                    formData.append('condition_of_remaining_packages', this.editSummaryData.condition_of_remaining_packages);\r\n                    formData.append('note', this.editSummaryData.note);\r\n                    formData.append('remarks', this.editSummaryData.remarks);\r\n                    formData.append('signature', this.editSummaryData.signature);\r\n                    formData.append('_method', 'PUT');\r\n\r\n                    await this.$store.dispatch(\"summary_report/update_summary_report\", {id:id, data:formData}).then(() => {\r\n                        this.$swal.fire({\r\n                            toast: true,\r\n                            position: \"top-end\",\r\n                            icon: \"success\",\r\n                            title: this.message,\r\n                            showConfirmButton: false,\r\n                            timer: 1500,\r\n                        });\r\n\r\n                        this.summary_report_data = {};\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    });\r\n                }catch(e){\r\n                    switch (e.response.status) {\r\n                        case 422:\r\n                        this.errors = e.response.data.errors;\r\n                        break;\r\n                        default:\r\n                        this.$swal.fire({\r\n                            icon: \"error\",\r\n                            text: \"Oops\",\r\n                            title: e.response.data.error,\r\n                        });\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n#edit_summary_report {\r\n  padding: 0px 5px 0px 5px;\r\n  margin: 0px 15px 0px 15px;\r\n}\r\n.box{\r\n    width: 100%;\r\n}\r\n\r\n.file_upload{\r\n    border: 1px solid #ccc;\r\n    width: 100%;\r\n    padding: 5px;\r\n    margin: 5px;\r\n    border-radius: 4px;\r\n}\r\n\r\nimg{\r\n    width: 20% !important;\r\n}\r\n\r\nselect {\r\n  width: 70%;\r\n  height: 38px;\r\n  box-shadow: 0 2px 1px 0 rgb(0 0 0 / 20%), 0 2px 15px 0 rgb(0 0 0 / 19%);\r\n  padding-left: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}